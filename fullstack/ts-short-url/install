
安装redis包含布隆过滤器的版本
docker pull redislabs/rebloom:latest

后台运行容器
docker run -p 6379:6379 --name redis-redisbloom -itd redislabs/rebloom:latest

进入容器，进入redis命令行
docker exec -it redis-redisbloom bash
redis-cli

使用布隆过滤器命令
bf.add name jerry
bf.exists name jerry


安装Mysql
docker pull mysql:latest
docker pull mysql:5.7

创建后台服务
docker run -itd --name mysql-57-test -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql:5.7

关闭
docker stop 

进入MySQL服务器
docker exec -it mysql-57-test bash

登陆，密码123456
mysql -h localhost -u root -p

show databases

查看dockers ip 
docker-machine ip default

创建数据库
create database  short_url;

创建数据库用户及授权
create user  'su'@'%' identified by 'su';
grant all on short_url.* to 'su'@'%';

alter user 'root'@'localhost' identified with mysql_native_password by '123456';
alter user 'root'@'%' identified with mysql_native_password by '123456';
flush privileges;
select host,user,plugin from user;

创建表结构
use short_url;

CREATE TABLE SHORT_URL (
shorturlid VARCHAR(255) COMMENT '短链接ID',
longurl VARCHAR(255) COMMENT '长连接URL',
createdata VARCHAR(10) COMMENT '生成日期',
PRIMARY KEY (shorturlid)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

查看redis和MySQL服务
docker ps

获取最新包
npm outdated         # 先查询有哪些包有更新
npm update <package> # 更新指定包

删除npm
npm uninstall