{"/Users/microld/Desktop/interview-assignments/fullstack/shorturl/test/Configuration.spec.ts":{"path":"/Users/microld/Desktop/interview-assignments/fullstack/shorturl/test/Configuration.spec.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":15},"end":{"line":6,"column":30}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":47}},"5":{"start":{"line":8,"column":24},"end":{"line":8,"column":78}},"6":{"start":{"line":9,"column":0},"end":{"line":39,"column":3}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":93}},"8":{"start":{"line":11,"column":4},"end":{"line":24,"column":7}},"9":{"start":{"line":12,"column":8},"end":{"line":14,"column":11}},"10":{"start":{"line":13,"column":12},"end":{"line":13,"column":93}},"11":{"start":{"line":15,"column":8},"end":{"line":17,"column":11}},"12":{"start":{"line":16,"column":12},"end":{"line":16,"column":96}},"13":{"start":{"line":18,"column":8},"end":{"line":20,"column":11}},"14":{"start":{"line":19,"column":12},"end":{"line":19,"column":105}},"15":{"start":{"line":21,"column":8},"end":{"line":23,"column":11}},"16":{"start":{"line":22,"column":12},"end":{"line":22,"column":103}},"17":{"start":{"line":25,"column":4},"end":{"line":38,"column":7}},"18":{"start":{"line":26,"column":8},"end":{"line":28,"column":11}},"19":{"start":{"line":27,"column":12},"end":{"line":27,"column":100}},"20":{"start":{"line":29,"column":8},"end":{"line":31,"column":11}},"21":{"start":{"line":30,"column":12},"end":{"line":30,"column":103}},"22":{"start":{"line":32,"column":8},"end":{"line":34,"column":11}},"23":{"start":{"line":33,"column":12},"end":{"line":33,"column":112}},"24":{"start":{"line":35,"column":8},"end":{"line":37,"column":11}},"25":{"start":{"line":36,"column":12},"end":{"line":36,"column":114}},"26":{"start":{"line":36,"column":37},"end":{"line":36,"column":92}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":26},"end":{"line":9,"column":27}},"loc":{"start":{"line":9,"column":32},"end":{"line":39,"column":1}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":20},"end":{"line":11,"column":21}},"loc":{"start":{"line":11,"column":26},"end":{"line":24,"column":5}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":12,"column":35},"end":{"line":12,"column":36}},"loc":{"start":{"line":12,"column":41},"end":{"line":14,"column":9}},"line":12},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":46},"end":{"line":15,"column":47}},"loc":{"start":{"line":15,"column":52},"end":{"line":17,"column":9}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":35},"end":{"line":18,"column":36}},"loc":{"start":{"line":18,"column":41},"end":{"line":20,"column":9}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":21,"column":59},"end":{"line":21,"column":60}},"loc":{"start":{"line":21,"column":65},"end":{"line":23,"column":9}},"line":21},"7":{"name":"(anonymous_7)","decl":{"start":{"line":25,"column":27},"end":{"line":25,"column":28}},"loc":{"start":{"line":25,"column":33},"end":{"line":38,"column":5}},"line":25},"8":{"name":"(anonymous_8)","decl":{"start":{"line":26,"column":35},"end":{"line":26,"column":36}},"loc":{"start":{"line":26,"column":41},"end":{"line":28,"column":9}},"line":26},"9":{"name":"(anonymous_9)","decl":{"start":{"line":29,"column":46},"end":{"line":29,"column":47}},"loc":{"start":{"line":29,"column":52},"end":{"line":31,"column":9}},"line":29},"10":{"name":"(anonymous_10)","decl":{"start":{"line":32,"column":35},"end":{"line":32,"column":36}},"loc":{"start":{"line":32,"column":41},"end":{"line":34,"column":9}},"line":32},"11":{"name":"(anonymous_11)","decl":{"start":{"line":35,"column":59},"end":{"line":35,"column":60}},"loc":{"start":{"line":35,"column":65},"end":{"line":37,"column":9}},"line":35},"12":{"name":"(anonymous_12)","decl":{"start":{"line":36,"column":31},"end":{"line":36,"column":32}},"loc":{"start":{"line":36,"column":37},"end":{"line":36,"column":92}},"line":36}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1},"f":{"0":2,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1},"b":{"0":[1,1,1],"1":[1,1],"2":[2,2]},"inputSourceMap":{"version":3,"file":"file:///Users/microld/Desktop/interview-assignments/fullstack/shorturl/test/Configuration.spec.ts","sources":["file:///Users/microld/Desktop/interview-assignments/fullstack/shorturl/test/Configuration.spec.ts"],"names":[],"mappings":";;;;;AAAA,+BAA8B;AAE9B,gDAAwB;AAExB,+EAAuD;AAEvD,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAC7B,uBAAa,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,cAAI,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;IAErE,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE;QACnB,EAAE,CAAC,sBAAsB,EAAE,GAAG,EAAE;YAC9B,IAAA,aAAM,EAAC,uBAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iCAAiC,EAAE,GAAG,EAAE;YACzC,IAAA,aAAM,EAAC,uBAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sBAAsB,EAAE,GAAG,EAAE;YAC9B,IAAA,aAAM,EAAC,uBAAa,CAAC,GAAG,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;YACtD,IAAA,aAAM,EAAC,uBAAa,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;QAC1B,EAAE,CAAC,sBAAsB,EAAE,GAAG,EAAE;YAC9B,IAAA,aAAM,EAAC,uBAAa,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iCAAiC,EAAE,GAAG,EAAE;YACzC,IAAA,aAAM,EAAC,uBAAa,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sBAAsB,EAAE,GAAG,EAAE;YAC9B,IAAA,aAAM,EAAC,uBAAa,CAAC,UAAU,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAChF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;YACtD,IAAA,aAAM,EAAC,GAAG,EAAE,CAAC,uBAAa,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { expect } from 'chai';\n\nimport path from 'path';\n\nimport Configuration from '../src/infra/Configuration';\n\ndescribe('Configuration', () => {\n  Configuration.init({ envFilePath: path.resolve(__dirname, '.env') });\n\n  describe('get', () => {\n    it('should load env file', () => {\n      expect(Configuration.get(\"NODE_ENV\")).to.be.eql('testing');\n    });\n\n    it('should get environment variable', () => {\n      expect(Configuration.get(\"HOME\")).to.be.eql(process.env.HOME);\n    });\n\n    it('should default value', () => {\n      expect(Configuration.get(\"__DEFAULT_VALUE__\", 'abc')).to.be.eql(\"abc\");\n    });\n\n    it('should get non-existent environment variable', () => {\n      expect(Configuration.get(\"__DEFAULT_VALUE__\")).to.be.an('undefined');\n    });\n  });\n\n  describe('getOrThrow', () => {\n    it('should load env file', () => {\n      expect(Configuration.getOrThrow(\"NODE_ENV\")).to.be.eql('testing');\n    });\n\n    it('should get environment variable', () => {\n      expect(Configuration.getOrThrow(\"HOME\")).to.be.eql(process.env.HOME);\n    });\n\n    it('should default value', () => {\n      expect(Configuration.getOrThrow(\"__DEFAULT_VALUE__\", 'abc')).to.be.eql(\"abc\");\n    });\n\n    it('should get non-existent environment variable', () => {\n      expect(() => Configuration.getOrThrow(\"__DEFAULT_VALUE__\")).to.throw(TypeError);\n    });\n  });\n});"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f37697c994877713f68b1a4735b68550ee7fe3e7","contentHash":"e50e29bc402ec387bfbaaddeb30724da0e1267cfb3cb30c0f16157662133d359"},"/Users/microld/Desktop/interview-assignments/fullstack/shorturl/src/infra/Configuration.ts":{"path":"/Users/microld/Desktop/interview-assignments/fullstack/shorturl/src/infra/Configuration.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":64}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":51}},"5":{"start":{"line":8,"column":24},"end":{"line":8,"column":48}},"6":{"start":{"line":9,"column":19},"end":{"line":9,"column":55}},"7":{"start":{"line":10,"column":15},"end":{"line":10,"column":47}},"8":{"start":{"line":11,"column":17},"end":{"line":11,"column":34}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":38}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":34}},"11":{"start":{"line":17,"column":4},"end":{"line":17,"column":44}},"12":{"start":{"line":19,"column":0},"end":{"line":19,"column":22}},"13":{"start":{"line":21,"column":4},"end":{"line":21,"column":48}},"14":{"start":{"line":23,"column":0},"end":{"line":23,"column":28}},"15":{"start":{"line":26,"column":29},"end":{"line":28,"column":84}},"16":{"start":{"line":29,"column":21},"end":{"line":29,"column":23}},"17":{"start":{"line":30,"column":8},"end":{"line":38,"column":9}},"18":{"start":{"line":31,"column":12},"end":{"line":37,"column":13}},"19":{"start":{"line":32,"column":16},"end":{"line":32,"column":117}},"20":{"start":{"line":33,"column":16},"end":{"line":36,"column":17}},"21":{"start":{"line":34,"column":42},"end":{"line":34,"column":116}},"22":{"start":{"line":35,"column":20},"end":{"line":35,"column":143}},"23":{"start":{"line":39,"column":8},"end":{"line":39,"column":22}},"24":{"start":{"line":42,"column":8},"end":{"line":43,"column":19}},"25":{"start":{"line":43,"column":12},"end":{"line":43,"column":19}},"26":{"start":{"line":44,"column":24},"end":{"line":44,"column":87}},"27":{"start":{"line":44,"column":65},"end":{"line":44,"column":86}},"28":{"start":{"line":45,"column":8},"end":{"line":45,"column":70}},"29":{"start":{"line":45,"column":43},"end":{"line":45,"column":67}},"30":{"start":{"line":48,"column":21},"end":{"line":48,"column":75}},"31":{"start":{"line":49,"column":8},"end":{"line":50,"column":66}},"32":{"start":{"line":50,"column":12},"end":{"line":50,"column":66}},"33":{"start":{"line":51,"column":8},"end":{"line":51,"column":46}},"34":{"start":{"line":54,"column":8},"end":{"line":54,"column":74}},"35":{"start":{"line":57,"column":22},"end":{"line":57,"column":58}},"36":{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},"37":{"start":{"line":59,"column":12},"end":{"line":59,"column":97}},"38":{"start":{"line":61,"column":8},"end":{"line":61,"column":21}},"39":{"start":{"line":64,"column":0},"end":{"line":64,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"isUndefined","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":20}},"loc":{"start":{"line":12,"column":26},"end":{"line":14,"column":1}},"line":12},"2":{"name":"isNil","decl":{"start":{"line":16,"column":9},"end":{"line":16,"column":14}},"loc":{"start":{"line":16,"column":20},"end":{"line":18,"column":1}},"line":16},"3":{"name":"isObject","decl":{"start":{"line":20,"column":9},"end":{"line":20,"column":17}},"loc":{"start":{"line":20,"column":22},"end":{"line":22,"column":1}},"line":20},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":32},"end":{"line":40,"column":5}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":44},"end":{"line":46,"column":5}},"line":41},"6":{"name":"(anonymous_6)","decl":{"start":{"line":44,"column":54},"end":{"line":44,"column":55}},"loc":{"start":{"line":44,"column":65},"end":{"line":44,"column":86}},"line":44},"7":{"name":"(anonymous_7)","decl":{"start":{"line":45,"column":24},"end":{"line":45,"column":25}},"loc":{"start":{"line":45,"column":43},"end":{"line":45,"column":67}},"line":45},"8":{"name":"(anonymous_8)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":25},"end":{"line":52,"column":5}},"line":47},"9":{"name":"(anonymous_9)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":43},"end":{"line":55,"column":5}},"line":53},"10":{"name":"(anonymous_10)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":50},"end":{"line":62,"column":5}},"line":56}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":17,"column":11},"end":{"line":17,"column":43}},"type":"binary-expr","locations":[{"start":{"line":17,"column":11},"end":{"line":17,"column":27}},{"start":{"line":17,"column":31},"end":{"line":17,"column":43}}],"line":17},"4":{"loc":{"start":{"line":21,"column":11},"end":{"line":21,"column":47}},"type":"binary-expr","locations":[{"start":{"line":21,"column":11},"end":{"line":21,"column":21}},{"start":{"line":21,"column":25},"end":{"line":21,"column":47}}],"line":21},"5":{"loc":{"start":{"line":26,"column":29},"end":{"line":28,"column":84}},"type":"cond-expr","locations":[{"start":{"line":27,"column":14},"end":{"line":27,"column":33}},{"start":{"line":28,"column":14},"end":{"line":28,"column":84}}],"line":26},"6":{"loc":{"start":{"line":28,"column":15},"end":{"line":28,"column":83}},"type":"binary-expr","locations":[{"start":{"line":28,"column":15},"end":{"line":28,"column":34}},{"start":{"line":28,"column":38},"end":{"line":28,"column":83}}],"line":28},"7":{"loc":{"start":{"line":31,"column":12},"end":{"line":37,"column":13}},"type":"if","locations":[{"start":{"line":31,"column":12},"end":{"line":37,"column":13}},{"start":{"line":31,"column":12},"end":{"line":37,"column":13}}],"line":31},"8":{"loc":{"start":{"line":33,"column":16},"end":{"line":36,"column":17}},"type":"if","locations":[{"start":{"line":33,"column":16},"end":{"line":36,"column":17}},{"start":{"line":33,"column":16},"end":{"line":36,"column":17}}],"line":33},"9":{"loc":{"start":{"line":34,"column":42},"end":{"line":34,"column":116}},"type":"cond-expr","locations":[{"start":{"line":34,"column":88},"end":{"line":34,"column":111}},{"start":{"line":34,"column":114},"end":{"line":34,"column":116}}],"line":34},"10":{"loc":{"start":{"line":35,"column":29},"end":{"line":35,"column":142}},"type":"binary-expr","locations":[{"start":{"line":35,"column":29},"end":{"line":35,"column":132}},{"start":{"line":35,"column":136},"end":{"line":35,"column":142}}],"line":35},"11":{"loc":{"start":{"line":42,"column":8},"end":{"line":43,"column":19}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":43,"column":19}},{"start":{"line":42,"column":8},"end":{"line":43,"column":19}}],"line":42},"12":{"loc":{"start":{"line":48,"column":21},"end":{"line":48,"column":75}},"type":"cond-expr","locations":[{"start":{"line":48,"column":45},"end":{"line":48,"column":47}},{"start":{"line":48,"column":50},"end":{"line":48,"column":75}}],"line":48},"13":{"loc":{"start":{"line":49,"column":8},"end":{"line":50,"column":66}},"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":50,"column":66}},{"start":{"line":49,"column":8},"end":{"line":50,"column":66}}],"line":49},"14":{"loc":{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},{"start":{"line":58,"column":8},"end":{"line":60,"column":9}}],"line":58}},"s":{"0":1,"1":3,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":17,"10":1,"11":3,"12":1,"13":3,"14":1,"15":3,"16":3,"17":3,"18":3,"19":3,"20":3,"21":0,"22":0,"23":3,"24":3,"25":0,"26":3,"27":498,"28":3,"29":7,"30":3,"31":3,"32":3,"33":3,"34":18,"35":14,"36":14,"37":1,"38":13,"39":1},"f":{"0":3,"1":17,"2":3,"3":3,"4":3,"5":3,"6":498,"7":7,"8":3,"9":18,"10":14},"b":{"0":[1,1,1],"1":[0,3],"2":[3,3],"3":[3,3],"4":[3,3],"5":[0,3],"6":[3,0],"7":[3,0],"8":[0,3],"9":[0,0],"10":[0,0],"11":[0,3],"12":[0,3],"13":[3,0],"14":[1,13]},"inputSourceMap":{"version":3,"file":"file:///Users/microld/Desktop/interview-assignments/fullstack/shorturl/src/infra/Configuration.ts","sources":["file:///Users/microld/Desktop/interview-assignments/fullstack/shorturl/src/infra/Configuration.ts"],"names":[],"mappings":"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","sourcesContent":["import dotenv from 'dotenv';\n\nimport { DotenvExpandOptions, expand } from 'dotenv-expand';\n\nimport fse from 'fs-extra';\n\nimport path from 'path';\n\nimport { get } from 'lodash';\n\ntype KeyOf<T> = keyof T extends never ? string : keyof T;\n\nexport function isUndefined(obj: any): obj is undefined {\n  return typeof obj === 'undefined';\n}\n\nexport function isNil(val: any): val is null | undefined {\n  return isUndefined(val) || val === null;\n}\n\nexport function isObject(fn: any): fn is object {\n  return !isNil(fn) && typeof fn === 'object';\n}\n\nexport interface ConfigurationOptions {\n  ignoreEnvVars?: boolean;\n  ignoreEnvFile?: boolean;\n  envFilePath?: string | string[];\n  expandVariables?: boolean | DotenvExpandOptions;\n}\n\nexport default class Configuration {\n  private static loadEnvFile(options: ConfigurationOptions): Record<string, any> {\n    const envFilePaths = Array.isArray(options.envFilePath)\n      ? options.envFilePath\n      : [options.envFilePath || path.resolve(process.cwd(), '.env')];\n\n    let config: ReturnType<typeof dotenv.parse> = {};\n\n    for (const envFilePath of envFilePaths) {\n      if (fse.existsSync(envFilePath)) {\n        config = Object.assign(dotenv.parse(fse.readFileSync(envFilePath)), config);\n\n        if (options.expandVariables) {\n          const expandOptions: DotenvExpandOptions = typeof options.expandVariables === 'object' ? options.expandVariables : {};\n          config = expand({ ...expandOptions, parsed: config }).parsed || config;\n        }\n      }\n    }\n\n    return config;\n  }\n\n  private static assignVariablesToProcess(config: Record<string, any>) {\n    if (!isObject(config)) return;\n    const entries = Object.entries(config).filter(([key]) => !(key in process.env));\n    entries.forEach(([key, value]) => (process.env[key] = value),);\n  }\n\n  public static init(options: ConfigurationOptions) {\n    let config = options.ignoreEnvFile ? {} : this.loadEnvFile(options);\n    if (!options.ignoreEnvVars) Object.assign(config, { ...process.env });\n    this.assignVariablesToProcess(config);\n  }\n\n  public static get<T = any>(propertyPath: string, defaultValue?: T): T | undefined {\n    return get(process.env as Record<string, any>, propertyPath, defaultValue);\n  }\n\n  public static getOrThrow<T = any>(propertyPath: string, defaultValue?: T): Exclude<T, undefined> {\n    const value = this.get(propertyPath, defaultValue) as | T | undefined;\n\n    if (isUndefined(value)) {\n      throw new TypeError(`Configuration key \"${propertyPath.toString()}\" does not exist`);\n    }\n\n    return value as Exclude<T, undefined>;\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b3db93098fae121cf3ebfe12e3bdf930ef58931f","contentHash":"6e94568b7ad00b0884ce8b209ca9e45e26f4f12d9222ed9c54bc5a4523e8780c"},"/Users/microld/Desktop/interview-assignments/fullstack/shorturl/test/Database.spec.ts":{"path":"/Users/microld/Desktop/interview-assignments/fullstack/shorturl/test/Database.spec.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":15},"end":{"line":6,"column":30}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":47}},"5":{"start":{"line":8,"column":24},"end":{"line":8,"column":78}},"6":{"start":{"line":9,"column":19},"end":{"line":9,"column":68}},"7":{"start":{"line":10,"column":16},"end":{"line":10,"column":65}},"8":{"start":{"line":11,"column":0},"end":{"line":177,"column":3}},"9":{"start":{"line":12,"column":4},"end":{"line":14,"column":7}},"10":{"start":{"line":15,"column":17},"end":{"line":21,"column":6}},"11":{"start":{"line":22,"column":4},"end":{"line":26,"column":7}},"12":{"start":{"line":23,"column":8},"end":{"line":25,"column":11}},"13":{"start":{"line":24,"column":12},"end":{"line":24,"column":72}},"14":{"start":{"line":27,"column":4},"end":{"line":93,"column":7}},"15":{"start":{"line":28,"column":26},"end":{"line":28,"column":42}},"16":{"start":{"line":29,"column":8},"end":{"line":31,"column":11}},"17":{"start":{"line":30,"column":12},"end":{"line":30,"column":108}},"18":{"start":{"line":32,"column":8},"end":{"line":42,"column":11}},"19":{"start":{"line":33,"column":29},"end":{"line":40,"column":8}},"20":{"start":{"line":41,"column":12},"end":{"line":41,"column":63}},"21":{"start":{"line":43,"column":8},"end":{"line":52,"column":11}},"22":{"start":{"line":44,"column":29},"end":{"line":49,"column":8}},"23":{"start":{"line":50,"column":12},"end":{"line":50,"column":63}},"24":{"start":{"line":51,"column":12},"end":{"line":51,"column":65}},"25":{"start":{"line":53,"column":8},"end":{"line":59,"column":11}},"26":{"start":{"line":54,"column":27},"end":{"line":57,"column":8}},"27":{"start":{"line":58,"column":12},"end":{"line":58,"column":57}},"28":{"start":{"line":60,"column":8},"end":{"line":69,"column":11}},"29":{"start":{"line":61,"column":27},"end":{"line":65,"column":8}},"30":{"start":{"line":66,"column":12},"end":{"line":66,"column":65}},"31":{"start":{"line":67,"column":12},"end":{"line":67,"column":56}},"32":{"start":{"line":68,"column":12},"end":{"line":68,"column":79}},"33":{"start":{"line":70,"column":8},"end":{"line":79,"column":11}},"34":{"start":{"line":71,"column":29},"end":{"line":76,"column":8}},"35":{"start":{"line":77,"column":12},"end":{"line":77,"column":63}},"36":{"start":{"line":78,"column":12},"end":{"line":78,"column":65}},"37":{"start":{"line":80,"column":8},"end":{"line":88,"column":11}},"38":{"start":{"line":81,"column":29},"end":{"line":85,"column":8}},"39":{"start":{"line":86,"column":12},"end":{"line":86,"column":63}},"40":{"start":{"line":87,"column":12},"end":{"line":87,"column":65}},"41":{"start":{"line":89,"column":8},"end":{"line":92,"column":11}},"42":{"start":{"line":90,"column":29},"end":{"line":90,"column":96}},"43":{"start":{"line":91,"column":12},"end":{"line":91,"column":63}},"44":{"start":{"line":94,"column":4},"end":{"line":121,"column":7}},"45":{"start":{"line":95,"column":26},"end":{"line":95,"column":43}},"46":{"start":{"line":96,"column":8},"end":{"line":120,"column":11}},"47":{"start":{"line":97,"column":12},"end":{"line":104,"column":9}},"48":{"start":{"line":105,"column":12},"end":{"line":110,"column":9}},"49":{"start":{"line":111,"column":24},"end":{"line":115,"column":8}},"50":{"start":{"line":116,"column":12},"end":{"line":116,"column":83}},"51":{"start":{"line":117,"column":12},"end":{"line":117,"column":61}},"52":{"start":{"line":118,"column":12},"end":{"line":118,"column":52}},"53":{"start":{"line":119,"column":12},"end":{"line":119,"column":75}},"54":{"start":{"line":122,"column":4},"end":{"line":153,"column":7}},"55":{"start":{"line":123,"column":26},"end":{"line":123,"column":43}},"56":{"start":{"line":124,"column":8},"end":{"line":152,"column":11}},"57":{"start":{"line":125,"column":12},"end":{"line":132,"column":9}},"58":{"start":{"line":133,"column":12},"end":{"line":138,"column":9}},"59":{"start":{"line":139,"column":25},"end":{"line":142,"column":8}},"60":{"start":{"line":143,"column":12},"end":{"line":143,"column":80}},"61":{"start":{"line":144,"column":34},"end":{"line":144,"column":38}},"62":{"start":{"line":145,"column":12},"end":{"line":145,"column":57}},"63":{"start":{"line":146,"column":12},"end":{"line":146,"column":63}},"64":{"start":{"line":147,"column":12},"end":{"line":147,"column":54}},"65":{"start":{"line":148,"column":12},"end":{"line":148,"column":77}},"66":{"start":{"line":149,"column":12},"end":{"line":149,"column":63}},"67":{"start":{"line":150,"column":12},"end":{"line":150,"column":53}},"68":{"start":{"line":151,"column":12},"end":{"line":151,"column":77}},"69":{"start":{"line":154,"column":4},"end":{"line":176,"column":7}},"70":{"start":{"line":155,"column":26},"end":{"line":155,"column":43}},"71":{"start":{"line":156,"column":8},"end":{"line":175,"column":11}},"72":{"start":{"line":157,"column":12},"end":{"line":164,"column":9}},"73":{"start":{"line":165,"column":23},"end":{"line":172,"column":2}},"74":{"start":{"line":173,"column":12},"end":{"line":173,"column":80}},"75":{"start":{"line":174,"column":12},"end":{"line":174,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":21},"end":{"line":11,"column":22}},"loc":{"start":{"line":11,"column":27},"end":{"line":177,"column":1}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":21},"end":{"line":22,"column":22}},"loc":{"start":{"line":22,"column":27},"end":{"line":26,"column":5}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":26},"end":{"line":23,"column":27}},"loc":{"start":{"line":23,"column":32},"end":{"line":25,"column":9}},"line":23},"4":{"name":"(anonymous_4)","decl":{"start":{"line":27,"column":21},"end":{"line":27,"column":22}},"loc":{"start":{"line":27,"column":27},"end":{"line":93,"column":5}},"line":27},"5":{"name":"(anonymous_5)","decl":{"start":{"line":29,"column":36},"end":{"line":29,"column":37}},"loc":{"start":{"line":29,"column":48},"end":{"line":31,"column":9}},"line":29},"6":{"name":"(anonymous_6)","decl":{"start":{"line":32,"column":34},"end":{"line":32,"column":35}},"loc":{"start":{"line":32,"column":46},"end":{"line":42,"column":9}},"line":32},"7":{"name":"(anonymous_7)","decl":{"start":{"line":43,"column":33},"end":{"line":43,"column":34}},"loc":{"start":{"line":43,"column":45},"end":{"line":52,"column":9}},"line":43},"8":{"name":"(anonymous_8)","decl":{"start":{"line":53,"column":31},"end":{"line":53,"column":32}},"loc":{"start":{"line":53,"column":43},"end":{"line":59,"column":9}},"line":53},"9":{"name":"(anonymous_9)","decl":{"start":{"line":60,"column":35},"end":{"line":60,"column":36}},"loc":{"start":{"line":60,"column":47},"end":{"line":69,"column":9}},"line":60},"10":{"name":"(anonymous_10)","decl":{"start":{"line":70,"column":33},"end":{"line":70,"column":34}},"loc":{"start":{"line":70,"column":45},"end":{"line":79,"column":9}},"line":70},"11":{"name":"(anonymous_11)","decl":{"start":{"line":80,"column":33},"end":{"line":80,"column":34}},"loc":{"start":{"line":80,"column":45},"end":{"line":88,"column":9}},"line":80},"12":{"name":"(anonymous_12)","decl":{"start":{"line":89,"column":32},"end":{"line":89,"column":33}},"loc":{"start":{"line":89,"column":44},"end":{"line":92,"column":9}},"line":89},"13":{"name":"(anonymous_13)","decl":{"start":{"line":94,"column":24},"end":{"line":94,"column":25}},"loc":{"start":{"line":94,"column":30},"end":{"line":121,"column":5}},"line":94},"14":{"name":"(anonymous_14)","decl":{"start":{"line":96,"column":35},"end":{"line":96,"column":36}},"loc":{"start":{"line":96,"column":47},"end":{"line":120,"column":9}},"line":96},"15":{"name":"(anonymous_15)","decl":{"start":{"line":122,"column":21},"end":{"line":122,"column":22}},"loc":{"start":{"line":122,"column":27},"end":{"line":153,"column":5}},"line":122},"16":{"name":"(anonymous_16)","decl":{"start":{"line":124,"column":31},"end":{"line":124,"column":32}},"loc":{"start":{"line":124,"column":43},"end":{"line":152,"column":9}},"line":124},"17":{"name":"(anonymous_17)","decl":{"start":{"line":154,"column":23},"end":{"line":154,"column":24}},"loc":{"start":{"line":154,"column":29},"end":{"line":176,"column":5}},"line":154},"18":{"name":"(anonymous_18)","decl":{"start":{"line":156,"column":33},"end":{"line":156,"column":34}},"loc":{"start":{"line":156,"column":45},"end":{"line":175,"column":9}},"line":156}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":4,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1},"f":{"0":4,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1},"b":{"0":[1,1,1],"1":[3,1],"2":[4,4]},"inputSourceMap":{"version":3,"file":"file:///Users/microld/Desktop/interview-assignments/fullstack/shorturl/test/Database.spec.ts","sources":["file:///Users/microld/Desktop/interview-assignments/fullstack/shorturl/test/Database.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect } from 'chai';\n\nimport path from 'path';\n\nimport Configuration from '../src/infra/Configuration';\n\nimport Database from '../src/infra/Database';\n\nimport { createPool, PoolOptions, Pool, ResultSetHeader, RowDataPacket, OkPacket } from 'mysql2/promise';\n\nimport Short, { ShortPO } from '../src/services/short';\n\ndescribe('Database', () => {\n  Configuration.init({\n    envFilePath: path.resolve(__dirname, '.env')\n  });\n\n  const pool = Database.init({\n    host: Configuration.getOrThrow<string>('MYSQL_HOST'),\n    port: Configuration.getOrThrow<number>('MYSQL_PORT'),\n    user: Configuration.getOrThrow<string>('MYSQL_USER'),\n    password: Configuration.getOrThrow<string>('MYSQL_PASSWORD'),\n    database: Configuration.getOrThrow<string>('MYSQL_DATABASE'),\n  });\n\n  describe('init', () => {\n    it('should init', () => {\n      expect(pool).to.be.eql(Database.pool);\n    });\n  });\n\n  describe('exec',  () => {\n    const tableName = 'std_test_table';\n\n    it('should SHOW DATABASES', async () => {\n      expect(await Database.exec(`SHOW DATABASES;`)).to.be.an.instanceof(Array);\n    });\n\n    it('should CREATE TABLE', async () => {\n      const [result] = await Database.exec<ResultSetHeader>(`\n        CREATE TABLE IF NOT EXISTS ${tableName} (\n          id INT(20) NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'ID', \n          url TEXT NULL COMMENT '链接', \n          alias VARCHAR(50) NULL COMMENT '别名', \n          KEY alias (alias)\n        ) COMMENT 'URL' ENGINE=InnoDB CHARSET=utf8mb4 AUTO_INCREMENT=0;\n      `);\n\n      expect(result.fieldCount).to.be.eql(0);\n    });\n\n    it('should INSERT ROWS', async () => {\n      const [result] = await Database.exec<ResultSetHeader>(`\n          INSERT INTO ${tableName} (url, alias)\n          VALUES \n              ('https://www.baidu.com', 'baidu'),\n              ('https://www.google.com', 'google');\n      `);\n\n      expect(result.fieldCount).to.be.eql(0);\n      expect(result.affectedRows).to.be.eql(2);\n    });\n\n    it('should FIND ROWS', async () => {\n      const [rows] = await Database.exec<ShortPO[]>(`\n        SELECT *\n        FROM ${tableName}\n      `);\n\n      expect(rows).to.have.lengthOf(2);\n    });\n\n    it('should FIND ONE ROWS', async () => {\n      const [rows] = await Database.exec<ShortPO[]>(`\n        SELECT *\n        FROM ${tableName}\n        WHERE id = 1;\n      `);\n\n      expect(rows[0].alias).to.be.eql('baidu');\n      expect(rows[0].id).to.be.eql(1);\n      expect(rows[0].url).to.be.eql(\"https://www.baidu.com\");\n    });\n\n    it('should UPDATE ROWS', async () => {\n      const [result] = await Database.exec<ResultSetHeader>(`\n        UPDATE ${tableName}\n        SET url   = 'https://www.google.com',\n            alias = '${Short.rand()}'\n        WHERE id = 1;\n      `);\n\n      expect(result.fieldCount).to.be.eql(0);\n      expect(result.affectedRows).to.be.eql(1);\n    });\n\n    it('should DELETE ROWS', async () => {\n      const [result] = await Database.exec<ResultSetHeader>(`\n        DELETE\n        FROM ${tableName}\n        WHERE id = 2;\n      `);\n\n      expect(result.fieldCount).to.be.eql(0);\n      expect(result.affectedRows).to.be.eql(1);\n    });\n\n    it('should DROP TABLE', async () => {\n      const [result] = await Database.exec<ResultSetHeader>(`DROP TABLE IF EXISTS ${tableName};`);\n      expect(result.fieldCount).to.be.eql(0);\n    });\n\n  });\n\n  describe('findOne',  () => {\n    const tableName = 'std_test_table1';\n\n    it('should FIND ONE ROWS', async () => {\n      await Database.exec<ResultSetHeader>(`\n        CREATE TABLE IF NOT EXISTS ${tableName} (\n          id INT(20) NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'ID', \n          url TEXT NULL COMMENT '链接', \n          alias VARCHAR(50) NULL COMMENT '别名', \n          KEY alias (alias)\n        ) COMMENT 'URL' ENGINE=InnoDB CHARSET=utf8mb4 AUTO_INCREMENT=0;\n      `);\n\n      await Database.exec<ResultSetHeader>(`\n          INSERT INTO ${tableName} (url, alias)\n          VALUES \n              ('https://www.baidu.com', 'baidu'),\n              ('https://www.google.com', 'google');\n      `);\n\n      const row = await Database.findOne<ShortPO>(`\n        SELECT *\n        FROM ${tableName}\n        WHERE id = 1;\n      `);\n\n      await Database.exec<ResultSetHeader>(`DROP TABLE IF EXISTS std_test_table1;`);\n\n      expect(row.alias).to.be.eql('baidu');\n      expect(row.id).to.be.eql(1);\n      expect(row.url).to.be.eql(\"https://www.baidu.com\");\n    });\n  });\n\n  describe('find',  () => {\n    const tableName = 'std_test_table2';\n    it('should FIND ROWS', async () => {\n      await Database.exec<ResultSetHeader>(`\n        CREATE TABLE IF NOT EXISTS ${tableName} (\n          id INT(20) NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'ID', \n          url TEXT NULL COMMENT '链接', \n          alias VARCHAR(50) NULL COMMENT '别名', \n          KEY alias (alias)\n        ) COMMENT 'URL' ENGINE=InnoDB CHARSET=utf8mb4 AUTO_INCREMENT=0;\n      `);\n\n      await Database.exec<ResultSetHeader>(`\n          INSERT INTO ${tableName} (url, alias)\n          VALUES \n              ('https://www.baidu.com', 'baidu'),\n              ('https://www.google.com', 'google');\n      `);\n\n      const rows = await Database.find<ShortPO[]>(`\n        SELECT *\n        FROM ${tableName}\n      `);\n\n      await Database.exec<ResultSetHeader>(`DROP TABLE IF EXISTS ${tableName};`);\n\n      const [first, last] = rows;\n\n      expect(rows).to.have.lengthOf(2);\n\n      expect(first.alias).to.be.eql('baidu');\n      expect(first.id).to.be.eql(1);\n      expect(first.url).to.be.eql(\"https://www.baidu.com\");\n\n      expect(last.alias).to.be.eql('google');\n      expect(last.id).to.be.eql(2);\n      expect(last.url).to.be.eql(\"https://www.google.com\");\n    });\n  });\n\n  describe('insert', () => {\n    const tableName = 'std_test_table3';\n\n    it('should INSERT ROWS', async () => {\n      await Database.exec<ResultSetHeader>(`\n        CREATE TABLE IF NOT EXISTS ${tableName} (\n          id INT(20) NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'ID', \n          url TEXT NULL COMMENT '链接', \n          alias VARCHAR(50) NULL COMMENT '别名', \n          KEY alias (alias)\n        ) COMMENT 'URL' ENGINE=InnoDB CHARSET=utf8mb4 AUTO_INCREMENT=0;\n      `);\n\n      const id = await Database.insert(`\n        INSERT \n          INTO\n              ${tableName} (url, alias)\n          VALUES \n            ('https://www.baidu.com', 'baidu'),\n            ('https://www.google.com', 'google');\n`     );\n\n      await Database.exec<ResultSetHeader>(`DROP TABLE IF EXISTS ${tableName};`);\n\n      expect(id).to.be.eql(1);\n    });\n  })\n});"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"df74c81b9728370fdb6bce36042b022206622b86","contentHash":"d84bd97d526daa1a4ee651e301af2cfb522a83b1f240014dbb8538fdead74442"},"/Users/microld/Desktop/interview-assignments/fullstack/shorturl/src/infra/Database.ts":{"path":"/Users/microld/Desktop/interview-assignments/fullstack/shorturl/src/infra/Database.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":43}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":36}},"3":{"start":{"line":7,"column":8},"end":{"line":8,"column":165}},"4":{"start":{"line":8,"column":12},"end":{"line":8,"column":165}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":25}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":46}},"7":{"start":{"line":15,"column":23},"end":{"line":15,"column":51}},"8":{"start":{"line":16,"column":8},"end":{"line":16,"column":42}},"9":{"start":{"line":19,"column":23},"end":{"line":19,"column":51}},"10":{"start":{"line":20,"column":8},"end":{"line":20,"column":20}},"11":{"start":{"line":23,"column":25},"end":{"line":23,"column":53}},"12":{"start":{"line":24,"column":8},"end":{"line":25,"column":35}},"13":{"start":{"line":25,"column":12},"end":{"line":25,"column":35}},"14":{"start":{"line":26,"column":8},"end":{"line":26,"column":20}},"15":{"start":{"line":29,"column":0},"end":{"line":29,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":25},"end":{"line":10,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":35},"end":{"line":13,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":38},"end":{"line":17,"column":5}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":35},"end":{"line":21,"column":5}},"line":18},"4":{"name":"(anonymous_4)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":37},"end":{"line":27,"column":5}},"line":22}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":8},"end":{"line":8,"column":165}},"type":"if","locations":[{"start":{"line":7,"column":8},"end":{"line":8,"column":165}},{"start":{"line":7,"column":8},"end":{"line":8,"column":165}}],"line":7},"1":{"loc":{"start":{"line":24,"column":8},"end":{"line":25,"column":35}},"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":25,"column":35}},{"start":{"line":24,"column":8},"end":{"line":25,"column":35}}],"line":24}},"s":{"0":1,"1":1,"2":1,"3":2,"4":1,"5":2,"6":30,"7":8,"8":8,"9":1,"10":1,"11":2,"12":2,"13":2,"14":0,"15":1},"f":{"0":2,"1":30,"2":8,"3":1,"4":2},"b":{"0":[1,1],"1":[2,0]},"inputSourceMap":{"version":3,"file":"file:///Users/microld/Desktop/interview-assignments/fullstack/shorturl/src/infra/Database.ts","sources":["file:///Users/microld/Desktop/interview-assignments/fullstack/shorturl/src/infra/Database.ts"],"names":[],"mappings":";;AAAA,4CAAyG;AAEzG,qCAAkC;AAElC,MAAqB,QAAQ;IAuBpB,MAAM,CAAC,IAAI,CAAC,OAAoB;QACrC,IAAI,CAAC,IAAI,CAAC,IAAI;YACZ,IAAI,CAAC,IAAI,GAAG,IAAA,oBAAU,kBACpB,kBAAkB,EAAE,IAAI,EACxB,eAAe,EAAE,EAAE,EACnB,UAAU,EAAE,CAAC,EACb,iBAAiB,EAAE,IAAI,IACpB,OAAO,EACV,CAAC;QAEL,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAmBM,MAAM,CAAC,KAAK,CAAC,IAAI,CAKH,GAAW,EAAE,MAA0C;QAC1E,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAI,GAAG,EAAE,MAAM,CAAC,CAAC;IAC3C,CAAC;IAmBD,MAAM,CAAC,KAAK,CAAC,OAAO,CAA0B,GAAW,EAAE,MAA0C;QACnG,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,IAAI,CAAC,IAAI,CAAM,GAAG,EAAE,MAAM,CAAC,CAAC;QACjD,OAAO,eAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAmBD,MAAM,CAAC,KAAK,CAAC,IAAI,CAA4B,GAAW,EAAE,MAA0C;QAClG,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,IAAI,CAAC,IAAI,CAAI,GAAG,EAAE,MAAM,CAAC,CAAC;QAC/C,OAAO,IAAI,CAAC;IACd,CAAC;IAcD,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,GAAW,EAAE,MAA0C;QACzE,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,IAAI,CAAC,IAAI,CAAkB,GAAG,EAAE,MAAM,CAAC,CAAC;QAC/D,IAAI,MAAM,CAAC,UAAU,KAAK,CAAC;YAAE,OAAO,MAAM,CAAC,QAAQ,CAAC;QACpD,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AA3HD,2BA2HC","sourcesContent":["import { createPool, PoolOptions, Pool, ResultSetHeader, RowDataPacket, OkPacket } from 'mysql2/promise';\n\nimport { Helper } from \"./Helper\";\n\nexport default class Database {\n  /**\n   * 数据库连接池实例\n   *\n   * @author microld\n   *\n   * @version 1.0.0\n   *\n   * @public\n   */\n  public static pool: Pool;\n\n  /**\n   * 初始化数据库\n   *\n   * @author microld\n   *\n   * @version 1.0.0\n   *\n   * @param options - 配置选项\n   *\n   * @returns 返回数据库连接池\n   */\n  public static init(options: PoolOptions) {\n    if (!this.pool)\n      this.pool = createPool({\n        waitForConnections: true,\n        connectionLimit: 10,\n        queueLimit: 0,\n        namedPlaceholders: true,\n        ...options,\n      });\n\n    return this.pool;\n  }\n\n  /**\n   * 执行 SQL 语句\n   *\n   * @author microld\n   *\n   * @version 1.0.0\n   *\n   * @param sql - SQL 语句\n   * @param params - SQL 需要的参数\n   *\n   * @example\n   *\n   * Database.exec(`show databases`);\n   * // => [rows, fields]\n   *\n   * @returns 返回数据库执行结果\n   */\n  public static async exec<T extends\n      | RowDataPacket[][]\n    | RowDataPacket[]\n    | OkPacket\n    | OkPacket[]\n    | ResultSetHeader>(sql: string, params?: any | any[] | Record<string, any>) {\n    return this.pool.execute<T>(sql, params);\n  }\n\n  /**\n   * 查找一条数据\n   *\n   * @author microld\n   *\n   * @version 1.0.0\n   *\n   * @param sql - SQL 语句\n   * @param params - SQL 需要的参数\n   *\n   * @example\n   *\n   * Database.findOne(`show databases`);\n   * // => row\n   *\n   * @returns 返回查找到的数据\n   */\n  static async findOne<T extends RowDataPacket>(sql: string, params?: any | any[] | Record<string, any>): Promise<T> {\n    const [rows] = await this.exec<T[]>(sql, params);\n    return Helper.head(rows);\n  }\n\n  /**\n   * 查找多条数据\n   *\n   * @author microld\n   *\n   * @version 1.0.0\n   *\n   * @param sql - SQL 语句\n   * @param params - SQL 需要的参数\n   *\n   * @example\n   *\n   * Database.find(`show databases`);\n   * // => [row, row]\n   *\n   * @returns 返回查找到的数据\n   */\n  static async find<T extends RowDataPacket[]>(sql: string, params?: any | any[] | Record<string, any>): Promise<T> {\n    const [rows] = await this.exec<T>(sql, params);\n    return rows;\n  }\n\n  /**\n   * 插入一条数据\n   *\n   * @author microld\n   *\n   * @version 1.0.0\n   *\n   * @param sql - SQL 语句\n   * @param params - SQL 需要的参数\n   *\n   * @returns 返回插入的数据\n   */\n  static async insert(sql: string, params?: any | any[] | Record<string, any>): Promise<number | null> {\n    const [result] = await this.exec<ResultSetHeader>(sql, params);\n    if (result.fieldCount === 0) return result.insertId;\n    return null;\n  }\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"be5953f48eaeb91967548ea341ed1acfc8dafd7c","contentHash":"73f9f9f0cdb7f734db999768f5cbce6816857787f734d5e8a20430bd27bdef9d"},"/Users/microld/Desktop/interview-assignments/fullstack/shorturl/src/infra/Helper.ts":{"path":"/Users/microld/Desktop/interview-assignments/fullstack/shorturl/src/infra/Helper.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":62}},"3":{"start":{"line":9,"column":8},"end":{"line":9,"column":90}},"4":{"start":{"line":12,"column":8},"end":{"line":15,"column":9}},"5":{"start":{"line":13,"column":12},"end":{"line":13,"column":42}},"6":{"start":{"line":14,"column":12},"end":{"line":14,"column":28}},"7":{"start":{"line":16,"column":8},"end":{"line":16,"column":25}},"8":{"start":{"line":19,"column":8},"end":{"line":19,"column":31}},"9":{"start":{"line":20,"column":8},"end":{"line":21,"column":30}},"10":{"start":{"line":21,"column":12},"end":{"line":21,"column":30}},"11":{"start":{"line":22,"column":8},"end":{"line":23,"column":29}},"12":{"start":{"line":23,"column":12},"end":{"line":23,"column":29}},"13":{"start":{"line":24,"column":8},"end":{"line":24,"column":24}},"14":{"start":{"line":27,"column":0},"end":{"line":27,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":23},"end":{"line":7,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":23},"end":{"line":10,"column":5}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":25},"end":{"line":17,"column":5}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":24},"end":{"line":25,"column":5}},"line":18}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":15},"end":{"line":6,"column":61}},"type":"cond-expr","locations":[{"start":{"line":6,"column":41},"end":{"line":6,"column":49}},{"start":{"line":6,"column":52},"end":{"line":6,"column":61}}],"line":6},"1":{"loc":{"start":{"line":6,"column":16},"end":{"line":6,"column":37}},"type":"binary-expr","locations":[{"start":{"line":6,"column":16},"end":{"line":6,"column":21}},{"start":{"line":6,"column":25},"end":{"line":6,"column":37}}],"line":6},"2":{"loc":{"start":{"line":9,"column":15},"end":{"line":9,"column":89}},"type":"cond-expr","locations":[{"start":{"line":9,"column":54},"end":{"line":9,"column":77}},{"start":{"line":9,"column":80},"end":{"line":9,"column":89}}],"line":9},"3":{"loc":{"start":{"line":9,"column":15},"end":{"line":9,"column":51}},"type":"binary-expr","locations":[{"start":{"line":9,"column":15},"end":{"line":9,"column":35}},{"start":{"line":9,"column":39},"end":{"line":9,"column":51}}],"line":9},"4":{"loc":{"start":{"line":12,"column":8},"end":{"line":15,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":15,"column":9}},{"start":{"line":12,"column":8},"end":{"line":15,"column":9}}],"line":12},"5":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":17}},{"start":{"line":12,"column":21},"end":{"line":12,"column":33}}],"line":12},"6":{"loc":{"start":{"line":13,"column":17},"end":{"line":13,"column":41}},"type":"cond-expr","locations":[{"start":{"line":13,"column":25},"end":{"line":13,"column":37}},{"start":{"line":13,"column":40},"end":{"line":13,"column":41}}],"line":13},"7":{"loc":{"start":{"line":19,"column":12},"end":{"line":19,"column":30}},"type":"binary-expr","locations":[{"start":{"line":19,"column":12},"end":{"line":19,"column":25}},{"start":{"line":19,"column":29},"end":{"line":19,"column":30}}],"line":19},"8":{"loc":{"start":{"line":20,"column":8},"end":{"line":21,"column":30}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":21,"column":30}},{"start":{"line":20,"column":8},"end":{"line":21,"column":30}}],"line":20},"9":{"loc":{"start":{"line":22,"column":8},"end":{"line":23,"column":29}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":23,"column":29}},{"start":{"line":22,"column":8},"end":{"line":23,"column":29}}],"line":22},"10":{"loc":{"start":{"line":22,"column":12},"end":{"line":22,"column":38}},"type":"binary-expr","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":17}},{"start":{"line":22,"column":21},"end":{"line":22,"column":38}}],"line":22}},"s":{"0":1,"1":1,"2":11,"3":3,"4":8,"5":6,"6":6,"7":2,"8":3,"9":3,"10":1,"11":3,"12":1,"13":2,"14":1},"f":{"0":11,"1":3,"2":8,"3":3},"b":{"0":[7,4],"1":[11,11],"2":[2,1],"3":[3,3],"4":[6,2],"5":[8,8],"6":[3,3],"7":[3,2],"8":[1,2],"9":[1,2],"10":[3,3]},"inputSourceMap":{"version":3,"file":"file:///Users/microld/Desktop/interview-assignments/fullstack/shorturl/src/infra/Helper.ts","sources":["file:///Users/microld/Desktop/interview-assignments/fullstack/shorturl/src/infra/Helper.ts"],"names":[],"mappings":";;;AACA,MAAa,MAAM;IAsBV,MAAM,CAAC,IAAI,CAAI,KAAU;QAC9B,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IACxD,CAAC;IAuBM,MAAM,CAAC,IAAI,CAAI,KAAU;QAC9B,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IACpF,CAAC;IAuBM,MAAM,CAAC,GAAG,CAAI,KAAU,EAAE,CAAS;QACxC,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE;YACzB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;SACjB;QAED,OAAO,SAAS,CAAC;IACnB,CAAC;IAuBM,MAAM,CAAC,EAAE,CAAI,KAAU,EAAE,CAAS;QACvC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,GAAG,CAAC;YAAE,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC;QAC7B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM;YAAE,OAAO,SAAS,CAAC;QACjD,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC;CACF;AA5GD,wBA4GC","sourcesContent":["\nexport class Helper {\n  /**\n   * 获取数组的第一个元素。\n   *\n   * @author microld\n   *\n   * @version 1.0.0\n   *\n   * @param array - 要查询的数组\n   *\n   * @returns 返回数组的第一个元素。\n   *\n   * @example\n   *\n   * Helper.head([1, 2, 3]);\n   * // => 1\n   *\n   * Helper.head([]);\n   * // => undefined\n   *\n   * @public\n   */\n  public static head<T>(array: T[]): T | undefined {\n    return (array && array.length) ? array[0] : undefined;\n  }\n\n  /**\n   * 获取数组的第一个元素。\n   *\n   * @author microld\n   *\n   * @version 1.0.0\n   *\n   * @param array - 要查询的数组\n   *\n   * @returns 返回数组的最后一个元素。\n   *\n   * @example\n   *\n   * Helper.last([1, 2, 3]);\n   * // => 3\n   *\n   * Helper.last([]);\n   * // => undefined\n   *\n   * @public\n   */\n  public static last<T>(array: T[]): T | undefined {\n    return Array.isArray(array) && array.length ? array[array.length - 1] : undefined;\n  }\n\n  /**\n   * 获取数组索引 `n` 处的元素。 如果 `n` 为负数，则返回倒数第 `n` 个元素。\n   *\n   * @author microld\n   *\n   * @version 1.0.0\n   *\n   * @param array - 要查询的数组\n   *\n   * @returns 返回数组的第 n 个元素。\n   *\n   * @example\n   *\n   * Helper.nth([1, 2, 3, 4], 1);\n   * // => 2\n   *\n   * Helper.nth([1, 2, 3, 4], -2);\n   * // => 3\n   *\n   * @public\n   */\n  public static nth<T>(array: T[], n: number): T | undefined {\n    if (array && array.length) {\n      n += n < 0 ? array.length : 0;\n      return array[n];\n    }\n\n    return undefined;\n  }\n\n  /**\n   * 获取数组索引 `n` 处的元素。 如果 `n` 为负数，则返回倒数第 `n` 个元素。\n   *\n   * @author microld\n   *\n   * @version 1.0.0\n   *\n   * @param array - 要查询的数组\n   *\n   * @returns 返回数组的第 n 个元素。\n   *\n   * @example\n   *\n   * Helper.nth([1, 2, 3, 4], 1);\n   * // => 2\n   *\n   * Helper.nth([1, 2, 3, 4], -2);\n   * // => 3\n   *\n   * @public\n   */\n  public static at<T>(array: T[], n: number): T | undefined {\n    n = Math.trunc(n) || 0;\n    if (n < 0) n += array.length;\n    if (n < 0 || n >= array.length) return undefined;\n    return array[n];\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0d99585c4f3be1c536b678e2552d85472947c0c1","contentHash":"2256e8d3aa4835017b966a3ee9d20e2216922458568732ef4c2418c83432e0ec"},"/Users/microld/Desktop/interview-assignments/fullstack/shorturl/src/services/short.ts":{"path":"/Users/microld/Desktop/interview-assignments/fullstack/shorturl/src/services/short.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":19},"end":{"line":6,"column":64}},"4":{"start":{"line":9,"column":25},"end":{"line":9,"column":79}},"5":{"start":{"line":10,"column":16},"end":{"line":10,"column":20}},"6":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"7":{"start":{"line":12,"column":12},"end":{"line":12,"column":66}},"8":{"start":{"line":14,"column":8},"end":{"line":14,"column":18}},"9":{"start":{"line":17,"column":21},"end":{"line":17,"column":26}},"10":{"start":{"line":18,"column":24},"end":{"line":18,"column":26}},"11":{"start":{"line":19,"column":16},"end":{"line":19,"column":17}},"12":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"13":{"start":{"line":21,"column":12},"end":{"line":21,"column":23}},"14":{"start":{"line":23,"column":20},"end":{"line":23,"column":22}},"15":{"start":{"line":24,"column":8},"end":{"line":35,"column":9}},"16":{"start":{"line":25,"column":12},"end":{"line":28,"column":13}},"17":{"start":{"line":26,"column":16},"end":{"line":26,"column":25}},"18":{"start":{"line":27,"column":16},"end":{"line":27,"column":22}},"19":{"start":{"line":29,"column":12},"end":{"line":29,"column":38}},"20":{"start":{"line":30,"column":26},"end":{"line":30,"column":63}},"21":{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},"22":{"start":{"line":32,"column":16},"end":{"line":32,"column":30}},"23":{"start":{"line":34,"column":12},"end":{"line":34,"column":16}},"24":{"start":{"line":36,"column":8},"end":{"line":36,"column":21}},"25":{"start":{"line":39,"column":20},"end":{"line":39,"column":53}},"26":{"start":{"line":40,"column":8},"end":{"line":41,"column":25}},"27":{"start":{"line":41,"column":12},"end":{"line":41,"column":25}},"28":{"start":{"line":42,"column":22},"end":{"line":42,"column":40}},"29":{"start":{"line":43,"column":26},"end":{"line":43,"column":95}},"30":{"start":{"line":44,"column":19},"end":{"line":44,"column":129}},"31":{"start":{"line":45,"column":8},"end":{"line":45,"column":41}},"32":{"start":{"line":48,"column":26},"end":{"line":48,"column":95}},"33":{"start":{"line":49,"column":8},"end":{"line":49,"column":113}},"34":{"start":{"line":52,"column":26},"end":{"line":52,"column":95}},"35":{"start":{"line":53,"column":8},"end":{"line":53,"column":107}},"36":{"start":{"line":56,"column":26},"end":{"line":56,"column":95}},"37":{"start":{"line":57,"column":8},"end":{"line":57,"column":104}},"38":{"start":{"line":60,"column":0},"end":{"line":60,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":35},"end":{"line":15,"column":5}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":35},"end":{"line":37,"column":5}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":34},"end":{"line":46,"column":5}},"line":38},"4":{"name":"(anonymous_4)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":44},"end":{"line":50,"column":5}},"line":47},"5":{"name":"(anonymous_5)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":34},"end":{"line":54,"column":5}},"line":51},"6":{"name":"(anonymous_6)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":32},"end":{"line":58,"column":5}},"line":55}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":8,"column":16},"end":{"line":8,"column":24}},"type":"default-arg","locations":[{"start":{"line":8,"column":23},"end":{"line":8,"column":24}}],"line":8},"4":{"loc":{"start":{"line":8,"column":26},"end":{"line":8,"column":33}},"type":"default-arg","locations":[{"start":{"line":8,"column":31},"end":{"line":8,"column":33}}],"line":8},"5":{"loc":{"start":{"line":16,"column":23},"end":{"line":16,"column":33}},"type":"default-arg","locations":[{"start":{"line":16,"column":32},"end":{"line":16,"column":33}}],"line":16},"6":{"loc":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},{"start":{"line":20,"column":8},"end":{"line":22,"column":9}}],"line":20},"7":{"loc":{"start":{"line":25,"column":12},"end":{"line":28,"column":13}},"type":"if","locations":[{"start":{"line":25,"column":12},"end":{"line":28,"column":13}},{"start":{"line":25,"column":12},"end":{"line":28,"column":13}}],"line":25},"8":{"loc":{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},"type":"if","locations":[{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},{"start":{"line":31,"column":12},"end":{"line":33,"column":13}}],"line":31},"9":{"loc":{"start":{"line":40,"column":8},"end":{"line":41,"column":25}},"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":41,"column":25}},{"start":{"line":40,"column":8},"end":{"line":41,"column":25}}],"line":40},"10":{"loc":{"start":{"line":43,"column":26},"end":{"line":43,"column":95}},"type":"cond-expr","locations":[{"start":{"line":43,"column":63},"end":{"line":43,"column":83}},{"start":{"line":43,"column":86},"end":{"line":43,"column":95}}],"line":43},"11":{"loc":{"start":{"line":48,"column":26},"end":{"line":48,"column":95}},"type":"cond-expr","locations":[{"start":{"line":48,"column":63},"end":{"line":48,"column":83}},{"start":{"line":48,"column":86},"end":{"line":48,"column":95}}],"line":48},"12":{"loc":{"start":{"line":52,"column":26},"end":{"line":52,"column":95}},"type":"cond-expr","locations":[{"start":{"line":52,"column":63},"end":{"line":52,"column":83}},{"start":{"line":52,"column":86},"end":{"line":52,"column":95}}],"line":52},"13":{"loc":{"start":{"line":56,"column":26},"end":{"line":56,"column":95}},"type":"cond-expr","locations":[{"start":{"line":56,"column":63},"end":{"line":56,"column":83}},{"start":{"line":56,"column":86},"end":{"line":56,"column":95}}],"line":56}},"s":{"0":1,"1":1,"2":1,"3":1,"4":6,"5":6,"6":6,"7":30,"8":6,"9":2,"10":2,"11":2,"12":2,"13":0,"14":2,"15":2,"16":2,"17":0,"18":0,"19":2,"20":2,"21":2,"22":2,"23":2,"24":2,"25":1,"26":1,"27":0,"28":1,"29":1,"30":1,"31":1,"32":3,"33":3,"34":2,"35":2,"36":2,"37":2,"38":1},"f":{"0":1,"1":6,"2":2,"3":1,"4":3,"5":2,"6":2},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[3],"4":[6],"5":[2],"6":[0,2],"7":[0,2],"8":[2,0],"9":[0,1],"10":[1,0],"11":[3,0],"12":[2,0],"13":[2,0]},"inputSourceMap":{"version":3,"file":"file:///Users/microld/Desktop/interview-assignments/fullstack/shorturl/src/services/short.ts","sources":["file:///Users/microld/Desktop/interview-assignments/fullstack/shorturl/src/services/short.ts"],"names":[],"mappings":"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","sourcesContent":["import { RowDataPacket } from 'mysql2/promise';\n\nimport Database from '../infra/Database';\n\n/**\n * Short 持久化数据\n *\n * @public\n */\nexport interface ShortPO extends RowDataPacket {\n  /**\n   * 数据库序号\n   *\n   * @public\n   */\n  id: number;\n\n  /**\n   * 长链接\n   *\n   * @public\n   */\n  url: string;\n\n  /**\n   * 别名\n   *\n   * @public\n   */\n  alias: string;\n}\n\nexport default class Short {\n\n  /**\n   * 生成随机字符串\n   *\n   * @author microld\n   *\n   * @version 1.0.0\n   *\n   * @param size - 长度\n   * @param id - 前缀\n   *\n   * @returns 返回混合后的值。\n   */\n  public static rand(size: number = 5, id: string = ''): string {\n    const alphabet = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    let i = size;\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id;\n  }\n\n  /**\n   * 生成一个随机别名\n   *\n   * @remarks\n   *\n   * @author microld\n   *\n   * @version 1.0.0\n   *\n   * @returns 返回一个唯一别名。\n   */\n  public static async alias(length: number = 5): Promise<string> {\n    let unique = false;\n\n    const maxLoop = 20;\n\n    let i = 0;\n\n    if (length < 2) {\n      length = 2;\n    }\n\n    let alias = '';\n\n    while (!unique) {\n      // 循环 20 次后, 长度 +1\n      if (i >= maxLoop) {\n        length++;\n        i = 0;\n      }\n\n      alias = this.rand(length);\n\n      const exist = await this.findOneShortByAlias(alias);\n\n      // 如果不存在, 则代表是唯一值\n      if (!exist) {\n        unique = true;\n      }\n\n      i++;\n    }\n\n    return alias;\n  }\n\n  /**\n   * 插入一条短链接数据\n   *\n   * @author microld\n   *\n   * @version 1.0.0\n   *\n   * @param url - 长链接\n   *\n   * @returns 返回持久化对象\n   */\n  public static async insertShort(url: string) {\n    let exist = await this.findOneShortByURL(url);\n    if (exist) return exist;\n    const alias = await this.alias();\n    const tableName = process.env.NODE_ENV === 'testing' ? \"std_test_short_url\" : 'std_url';\n    const id = await Database.insert(`INSERT INTO ${tableName} (url, alias) VALUES (:url, :alias)`, { url, alias });\n    return this.findOneShortByID(id);\n  }\n\n  /**\n   * 根据别名检索短链接数据\n   *\n   * @author microld\n   *\n   * @version 1.0.0\n   *\n   * @param alias - 别名\n   *\n   * @returns 返回持久化对象\n   */\n  public static async findOneShortByAlias(alias: string) {\n    const tableName = process.env.NODE_ENV === 'testing' ? \"std_test_short_url\" : 'std_url';\n    return Database.findOne<ShortPO>(`SELECT * FROM ${tableName} WHERE alias = :alias LIMIT  1`, { alias });\n  }\n\n  /**\n   * 根据长链接检索短链接数据\n   *\n   * @author microld\n   *\n   * @version 1.0.0\n   *\n   * @param url - 长链接\n   *\n   * @returns 返回持久化对象\n   */\n  public static findOneShortByURL(url: string) {\n    const tableName = process.env.NODE_ENV === 'testing' ? \"std_test_short_url\" : 'std_url';\n    return Database.findOne<ShortPO>(`SELECT * FROM ${tableName} WHERE url = :url LIMIT  1`, { url });\n  }\n\n  /**\n   * 根据ID检索短链接数据\n   *\n   * @author microld\n   *\n   * @version 1.0.0\n   *\n   * @param alias - 别名\n   *\n   * @returns 返回持久化对象\n   */\n  public static findOneShortByID(id: number) {\n    const tableName = process.env.NODE_ENV === 'testing' ? \"std_test_short_url\" : 'std_url';\n    return Database.findOne<ShortPO>(`SELECT * FROM ${tableName} WHERE id = :id LIMIT  1`, { id });\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a1d9908733b2ec2ee2cdc8883c08b91cdeb43b93","contentHash":"1369dc81a46b869e612d815b94149b4dca3b567b8d6781abac69baaf25dae16d"},"/Users/microld/Desktop/interview-assignments/fullstack/shorturl/test/Helper.spec.ts":{"path":"/Users/microld/Desktop/interview-assignments/fullstack/shorturl/test/Helper.spec.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":15},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":47}},"3":{"start":{"line":5,"column":0},"end":{"line":54,"column":3}},"4":{"start":{"line":6,"column":4},"end":{"line":15,"column":7}},"5":{"start":{"line":7,"column":8},"end":{"line":10,"column":11}},"6":{"start":{"line":8,"column":26},"end":{"line":8,"column":41}},"7":{"start":{"line":9,"column":12},"end":{"line":9,"column":101}},"8":{"start":{"line":11,"column":8},"end":{"line":14,"column":11}},"9":{"start":{"line":12,"column":26},"end":{"line":12,"column":28}},"10":{"start":{"line":13,"column":12},"end":{"line":13,"column":81}},"11":{"start":{"line":16,"column":4},"end":{"line":25,"column":7}},"12":{"start":{"line":17,"column":8},"end":{"line":20,"column":11}},"13":{"start":{"line":18,"column":26},"end":{"line":18,"column":41}},"14":{"start":{"line":19,"column":12},"end":{"line":19,"column":102}},"15":{"start":{"line":21,"column":8},"end":{"line":24,"column":11}},"16":{"start":{"line":22,"column":26},"end":{"line":22,"column":28}},"17":{"start":{"line":23,"column":12},"end":{"line":23,"column":81}},"18":{"start":{"line":26,"column":4},"end":{"line":39,"column":7}},"19":{"start":{"line":27,"column":8},"end":{"line":30,"column":11}},"20":{"start":{"line":28,"column":26},"end":{"line":28,"column":41}},"21":{"start":{"line":29,"column":12},"end":{"line":29,"column":101}},"22":{"start":{"line":31,"column":8},"end":{"line":34,"column":11}},"23":{"start":{"line":32,"column":26},"end":{"line":32,"column":41}},"24":{"start":{"line":33,"column":12},"end":{"line":33,"column":102}},"25":{"start":{"line":35,"column":8},"end":{"line":38,"column":11}},"26":{"start":{"line":36,"column":26},"end":{"line":36,"column":28}},"27":{"start":{"line":37,"column":12},"end":{"line":37,"column":83}},"28":{"start":{"line":40,"column":4},"end":{"line":53,"column":7}},"29":{"start":{"line":41,"column":8},"end":{"line":44,"column":11}},"30":{"start":{"line":42,"column":26},"end":{"line":42,"column":41}},"31":{"start":{"line":43,"column":12},"end":{"line":43,"column":102}},"32":{"start":{"line":45,"column":8},"end":{"line":48,"column":11}},"33":{"start":{"line":46,"column":26},"end":{"line":46,"column":41}},"34":{"start":{"line":47,"column":12},"end":{"line":47,"column":104}},"35":{"start":{"line":49,"column":8},"end":{"line":52,"column":11}},"36":{"start":{"line":50,"column":26},"end":{"line":50,"column":28}},"37":{"start":{"line":51,"column":12},"end":{"line":51,"column":102}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":19},"end":{"line":5,"column":20}},"loc":{"start":{"line":5,"column":25},"end":{"line":54,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":21},"end":{"line":6,"column":22}},"loc":{"start":{"line":6,"column":27},"end":{"line":15,"column":5}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":7,"column":34},"end":{"line":7,"column":35}},"loc":{"start":{"line":7,"column":40},"end":{"line":10,"column":9}},"line":7},"3":{"name":"(anonymous_3)","decl":{"start":{"line":11,"column":33},"end":{"line":11,"column":34}},"loc":{"start":{"line":11,"column":39},"end":{"line":14,"column":9}},"line":11},"4":{"name":"(anonymous_4)","decl":{"start":{"line":16,"column":21},"end":{"line":16,"column":22}},"loc":{"start":{"line":16,"column":27},"end":{"line":25,"column":5}},"line":16},"5":{"name":"(anonymous_5)","decl":{"start":{"line":17,"column":34},"end":{"line":17,"column":35}},"loc":{"start":{"line":17,"column":40},"end":{"line":20,"column":9}},"line":17},"6":{"name":"(anonymous_6)","decl":{"start":{"line":21,"column":33},"end":{"line":21,"column":34}},"loc":{"start":{"line":21,"column":39},"end":{"line":24,"column":9}},"line":21},"7":{"name":"(anonymous_7)","decl":{"start":{"line":26,"column":20},"end":{"line":26,"column":21}},"loc":{"start":{"line":26,"column":26},"end":{"line":39,"column":5}},"line":26},"8":{"name":"(anonymous_8)","decl":{"start":{"line":27,"column":53},"end":{"line":27,"column":54}},"loc":{"start":{"line":27,"column":59},"end":{"line":30,"column":9}},"line":27},"9":{"name":"(anonymous_9)","decl":{"start":{"line":31,"column":53},"end":{"line":31,"column":54}},"loc":{"start":{"line":31,"column":59},"end":{"line":34,"column":9}},"line":31},"10":{"name":"(anonymous_10)","decl":{"start":{"line":35,"column":33},"end":{"line":35,"column":34}},"loc":{"start":{"line":35,"column":39},"end":{"line":38,"column":9}},"line":35},"11":{"name":"(anonymous_11)","decl":{"start":{"line":40,"column":19},"end":{"line":40,"column":20}},"loc":{"start":{"line":40,"column":25},"end":{"line":53,"column":5}},"line":40},"12":{"name":"(anonymous_12)","decl":{"start":{"line":41,"column":53},"end":{"line":41,"column":54}},"loc":{"start":{"line":41,"column":59},"end":{"line":44,"column":9}},"line":41},"13":{"name":"(anonymous_13)","decl":{"start":{"line":45,"column":53},"end":{"line":45,"column":54}},"loc":{"start":{"line":45,"column":59},"end":{"line":48,"column":9}},"line":45},"14":{"name":"(anonymous_14)","decl":{"start":{"line":49,"column":33},"end":{"line":49,"column":34}},"loc":{"start":{"line":49,"column":39},"end":{"line":52,"column":9}},"line":49}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1},"b":{},"inputSourceMap":{"version":3,"file":"file:///Users/microld/Desktop/interview-assignments/fullstack/shorturl/test/Helper.spec.ts","sources":["file:///Users/microld/Desktop/interview-assignments/fullstack/shorturl/test/Helper.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect } from 'chai';\n\nimport { Helper } from \"../src/infra/Helper\";\n\ndescribe('Helper', () => {\n  describe('head', () => {\n    it('should normal array', () => {\n      const array = [1, 2, 3, 4, 5];\n      expect(Helper.head(array)).to.be.eql(Helper.nth(array, 0));\n    });\n\n    it('should empty array', () => {\n      const array = [];\n      expect(Helper.head(array)).to.be.eql(undefined);\n    });\n  });\n\n  describe('last', () => {\n    it('should normal array', () => {\n      const array = [1, 2, 3, 4, 5];\n      expect(Helper.last(array)).to.be.eql(Helper.nth(array, -1));\n    });\n\n    it('should empty array', () => {\n      const array = [];\n      expect(Helper.last(array)).to.be.eql(undefined);\n    });\n  });\n\n  describe('nth', () => {\n    it('should normal array and positive index', () => {\n      const array = [1, 2, 3, 4, 5];\n      expect(Helper.nth(array, 0)).to.be.eql(Helper.head(array));\n    });\n\n    it('should normal array and negative index', () => {\n      const array = [1, 2, 3, 4, 5];\n      expect(Helper.nth(array, -1)).to.be.eql(Helper.last(array));\n    });\n\n    it('should empty array', () => {\n      const array = [];\n      expect(Helper.nth(array, 0)).to.be.eql(undefined);\n    });\n  });\n\n  describe('at', () => {\n    it('should normal array and positive index', () => {\n      const array = [1, 2, 3, 4, 5];\n      expect(Helper.nth(array, 0)).to.be.eql(Helper.at(array, 0));\n    });\n\n    it('should normal array and negative index', () => {\n      const array = [1, 2, 3, 4, 5];\n      expect(Helper.nth(array, -1)).to.be.eql(Helper.at(array, -1));\n    });\n\n    it('should empty array', () => {\n      const array = [];\n      expect(Helper.nth(array, 0)).to.be.eql(Helper.at(array, 0));\n    });\n  });\n});"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"84736ecb87344dbb169b740d4337a35a0215e5c8","contentHash":"a70f50fd8d4dc8df47e84dc0900877f3e3db377817de483160b9c77a529a432b"},"/Users/microld/Desktop/interview-assignments/fullstack/shorturl/test/RestResponse.spec.ts":{"path":"/Users/microld/Desktop/interview-assignments/fullstack/shorturl/test/RestResponse.spec.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":15},"end":{"line":6,"column":30}},"4":{"start":{"line":7,"column":23},"end":{"line":7,"column":76}},"5":{"start":{"line":8,"column":0},"end":{"line":57,"column":3}},"6":{"start":{"line":9,"column":4},"end":{"line":19,"column":7}},"7":{"start":{"line":10,"column":8},"end":{"line":12,"column":11}},"8":{"start":{"line":11,"column":12},"end":{"line":11,"column":106}},"9":{"start":{"line":13,"column":8},"end":{"line":15,"column":11}},"10":{"start":{"line":14,"column":12},"end":{"line":14,"column":100}},"11":{"start":{"line":16,"column":8},"end":{"line":18,"column":11}},"12":{"start":{"line":17,"column":12},"end":{"line":17,"column":122}},"13":{"start":{"line":20,"column":4},"end":{"line":30,"column":7}},"14":{"start":{"line":21,"column":8},"end":{"line":23,"column":11}},"15":{"start":{"line":22,"column":12},"end":{"line":22,"column":95}},"16":{"start":{"line":24,"column":8},"end":{"line":26,"column":11}},"17":{"start":{"line":25,"column":12},"end":{"line":25,"column":92}},"18":{"start":{"line":27,"column":8},"end":{"line":29,"column":11}},"19":{"start":{"line":28,"column":12},"end":{"line":28,"column":103}},"20":{"start":{"line":31,"column":4},"end":{"line":41,"column":7}},"21":{"start":{"line":32,"column":8},"end":{"line":34,"column":11}},"22":{"start":{"line":33,"column":12},"end":{"line":33,"column":105}},"23":{"start":{"line":35,"column":8},"end":{"line":37,"column":11}},"24":{"start":{"line":36,"column":12},"end":{"line":36,"column":107}},"25":{"start":{"line":38,"column":8},"end":{"line":40,"column":11}},"26":{"start":{"line":39,"column":12},"end":{"line":39,"column":117}},"27":{"start":{"line":42,"column":4},"end":{"line":46,"column":7}},"28":{"start":{"line":43,"column":8},"end":{"line":45,"column":11}},"29":{"start":{"line":44,"column":12},"end":{"line":44,"column":100}},"30":{"start":{"line":47,"column":4},"end":{"line":51,"column":7}},"31":{"start":{"line":48,"column":8},"end":{"line":50,"column":11}},"32":{"start":{"line":49,"column":12},"end":{"line":49,"column":122}},"33":{"start":{"line":52,"column":4},"end":{"line":56,"column":7}},"34":{"start":{"line":53,"column":8},"end":{"line":55,"column":11}},"35":{"start":{"line":54,"column":12},"end":{"line":54,"column":116}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":25},"end":{"line":8,"column":26}},"loc":{"start":{"line":8,"column":31},"end":{"line":57,"column":1}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":28},"end":{"line":9,"column":29}},"loc":{"start":{"line":9,"column":34},"end":{"line":19,"column":5}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":10,"column":26},"end":{"line":10,"column":27}},"loc":{"start":{"line":10,"column":32},"end":{"line":12,"column":9}},"line":10},"4":{"name":"(anonymous_4)","decl":{"start":{"line":13,"column":33},"end":{"line":13,"column":34}},"loc":{"start":{"line":13,"column":39},"end":{"line":15,"column":9}},"line":13},"5":{"name":"(anonymous_5)","decl":{"start":{"line":16,"column":29},"end":{"line":16,"column":30}},"loc":{"start":{"line":16,"column":35},"end":{"line":18,"column":9}},"line":16},"6":{"name":"(anonymous_6)","decl":{"start":{"line":20,"column":19},"end":{"line":20,"column":20}},"loc":{"start":{"line":20,"column":25},"end":{"line":30,"column":5}},"line":20},"7":{"name":"(anonymous_7)","decl":{"start":{"line":21,"column":26},"end":{"line":21,"column":27}},"loc":{"start":{"line":21,"column":32},"end":{"line":23,"column":9}},"line":21},"8":{"name":"(anonymous_8)","decl":{"start":{"line":24,"column":33},"end":{"line":24,"column":34}},"loc":{"start":{"line":24,"column":39},"end":{"line":26,"column":9}},"line":24},"9":{"name":"(anonymous_9)","decl":{"start":{"line":27,"column":29},"end":{"line":27,"column":30}},"loc":{"start":{"line":27,"column":35},"end":{"line":29,"column":9}},"line":27},"10":{"name":"(anonymous_10)","decl":{"start":{"line":31,"column":24},"end":{"line":31,"column":25}},"loc":{"start":{"line":31,"column":30},"end":{"line":41,"column":5}},"line":31},"11":{"name":"(anonymous_11)","decl":{"start":{"line":32,"column":34},"end":{"line":32,"column":35}},"loc":{"start":{"line":32,"column":40},"end":{"line":34,"column":9}},"line":32},"12":{"name":"(anonymous_12)","decl":{"start":{"line":35,"column":41},"end":{"line":35,"column":42}},"loc":{"start":{"line":35,"column":47},"end":{"line":37,"column":9}},"line":35},"13":{"name":"(anonymous_13)","decl":{"start":{"line":38,"column":37},"end":{"line":38,"column":38}},"loc":{"start":{"line":38,"column":43},"end":{"line":40,"column":9}},"line":38},"14":{"name":"(anonymous_14)","decl":{"start":{"line":42,"column":24},"end":{"line":42,"column":25}},"loc":{"start":{"line":42,"column":30},"end":{"line":46,"column":5}},"line":42},"15":{"name":"(anonymous_15)","decl":{"start":{"line":43,"column":30},"end":{"line":43,"column":31}},"loc":{"start":{"line":43,"column":36},"end":{"line":45,"column":9}},"line":43},"16":{"name":"(anonymous_16)","decl":{"start":{"line":47,"column":27},"end":{"line":47,"column":28}},"loc":{"start":{"line":47,"column":33},"end":{"line":51,"column":5}},"line":47},"17":{"name":"(anonymous_17)","decl":{"start":{"line":48,"column":33},"end":{"line":48,"column":34}},"loc":{"start":{"line":48,"column":39},"end":{"line":50,"column":9}},"line":48},"18":{"name":"(anonymous_18)","decl":{"start":{"line":52,"column":27},"end":{"line":52,"column":28}},"loc":{"start":{"line":52,"column":33},"end":{"line":56,"column":5}},"line":52},"19":{"name":"(anonymous_19)","decl":{"start":{"line":53,"column":30},"end":{"line":53,"column":31}},"loc":{"start":{"line":53,"column":36},"end":{"line":55,"column":9}},"line":53}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"file:///Users/microld/Desktop/interview-assignments/fullstack/shorturl/test/RestResponse.spec.ts","sources":["file:///Users/microld/Desktop/interview-assignments/fullstack/shorturl/test/RestResponse.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect } from 'chai';\n\nimport RestResponse from '../src/infra/RestResponse';\n\ndescribe('RestResponse', () => {\n\n  describe('constructor', () => {\n    it('should data', () => {\n      expect(new RestResponse({ data: 'ok' })).to.have.property('data', 'ok');\n    });\n\n    it('should status code', () => {\n      expect(new RestResponse({ code: 0 })).to.have.property('code', 0);\n    });\n\n    it('should message', () => {\n      expect(new RestResponse({ message: 'success' })).to.have.property('message', 'success');\n    });\n  });\n\n  describe('ok', () => {\n    it('should data', () => {\n      expect(RestResponse.ok('ok')).to.have.property('data', 'ok');\n    });\n\n    it('should status code', () => {\n      expect(RestResponse.ok('ok')).to.have.property('code', 0);\n    });\n\n    it('should message', () => {\n      expect(RestResponse.ok('ok')).to.have.property('message', 'success');\n    });\n  });\n\n  describe('failure', () => {\n    it('should failure data', () => {\n      expect(RestResponse.failure('failure')).to.have.property('data', null);\n    });\n\n    it('should failure status code', () => {\n      expect(RestResponse.failure(-1, 'failure')).to.have.property('code', -1);\n    });\n\n    it('should failure message', () => {\n      expect(RestResponse.failure(-1, 'failure')).to.have.property('message', 'failure');\n    });\n  });\n\n  describe('setCode', () => {\n    it('should set code', () => {\n      expect(new RestResponse().setCode(0)).to.have.property('code', 0);\n    });\n  });\n\n  describe('setMessage', () => {\n    it('should set message', () => {\n      expect(new RestResponse().setMessage('success')).to.have.property('message', 'success');\n    });\n  });\n\n  describe('setMessage', () => {\n    it('should set data', () => {\n      expect(new RestResponse().setData('success')).to.have.property('data', 'success');\n    });\n  });\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4ba387548c300a00ff289087a3760866873278f9","contentHash":"f5071d78d0a6870eace4462d656582c3f726bf47a891fec7094a51efeac32b31"},"/Users/microld/Desktop/interview-assignments/fullstack/shorturl/src/infra/RestResponse.ts":{"path":"/Users/microld/Desktop/interview-assignments/fullstack/shorturl/src/infra/RestResponse.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":37}},"2":{"start":{"line":8,"column":8},"end":{"line":11,"column":9}},"3":{"start":{"line":9,"column":12},"end":{"line":9,"column":27}},"4":{"start":{"line":10,"column":12},"end":{"line":10,"column":21}},"5":{"start":{"line":12,"column":8},"end":{"line":12,"column":49}},"6":{"start":{"line":15,"column":8},"end":{"line":18,"column":9}},"7":{"start":{"line":16,"column":12},"end":{"line":16,"column":27}},"8":{"start":{"line":17,"column":12},"end":{"line":17,"column":22}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":55}},"10":{"start":{"line":22,"column":8},"end":{"line":22,"column":25}},"11":{"start":{"line":23,"column":8},"end":{"line":23,"column":20}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":31}},"13":{"start":{"line":27,"column":8},"end":{"line":27,"column":20}},"14":{"start":{"line":30,"column":8},"end":{"line":30,"column":25}},"15":{"start":{"line":31,"column":8},"end":{"line":31,"column":20}},"16":{"start":{"line":34,"column":0},"end":{"line":34,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":25},"end":{"line":6,"column":5}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":51},"end":{"line":13,"column":5}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":34},"end":{"line":20,"column":5}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":18},"end":{"line":24,"column":5}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":24},"end":{"line":28,"column":5}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":18},"end":{"line":32,"column":5}},"line":29}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":20},"end":{"line":7,"column":28}},"type":"default-arg","locations":[{"start":{"line":7,"column":27},"end":{"line":7,"column":28}}],"line":7},"1":{"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":49}},"type":"default-arg","locations":[{"start":{"line":7,"column":40},"end":{"line":7,"column":49}}],"line":7},"2":{"loc":{"start":{"line":8,"column":8},"end":{"line":11,"column":9}},"type":"if","locations":[{"start":{"line":8,"column":8},"end":{"line":11,"column":9}},{"start":{"line":8,"column":8},"end":{"line":11,"column":9}}],"line":8},"3":{"loc":{"start":{"line":15,"column":8},"end":{"line":18,"column":9}},"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":18,"column":9}},{"start":{"line":15,"column":8},"end":{"line":18,"column":9}}],"line":15}},"s":{"0":1,"1":12,"2":3,"3":0,"4":0,"5":3,"6":3,"7":1,"8":1,"9":3,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1},"f":{"0":12,"1":3,"2":3,"3":1,"4":1,"5":1},"b":{"0":[3],"1":[3],"2":[0,3],"3":[1,2]},"inputSourceMap":{"version":3,"file":"file:///Users/microld/Desktop/interview-assignments/fullstack/shorturl/src/infra/RestResponse.ts","sources":["file:///Users/microld/Desktop/interview-assignments/fullstack/shorturl/src/infra/RestResponse.ts"],"names":[],"mappings":";;AAWA,MAAqB,YAAY;IA6G/B,YAAmB,OAAkC;QACnD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC/B,CAAC;IAtFM,MAAM,CAAC,EAAE,CAAI,IAAO,EAAE,OAAwB,CAAC,EAAE,UAAkB,SAAS;QACjF,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC5B,OAAO,GAAG,IAAI,CAAC;YACf,IAAI,GAAG,CAAC,CAAC;SACV;QAED,OAAO,IAAI,IAAI,CAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;IAC9C,CAAC;IAwBM,MAAM,CAAC,OAAO,CAAW,IAAqB,EAAE,OAAgB;QACrE,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC5B,OAAO,GAAG,IAAI,CAAC;YACf,IAAI,GAAG,CAAC,CAAC,CAAC;SACX;QAED,OAAO,IAAI,IAAI,CAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;IACpD,CAAC;IAgEM,OAAO,CAAC,IAAY;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,OAAO,IAAI,CAAC;IACd,CAAC;IAgBM,UAAU,CAAC,OAAe;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,OAAO,IAAI,CAAC;IACd,CAAC;IAkBM,OAAO,CAAC,IAAO;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AA3KD,+BA2KC","sourcesContent":["/**\n * Restful 响应类\n *\n * @class\n *\n * @author microld\n *\n * @version 1.0.0\n *\n * @public\n */\nexport default class RestResponse<T> {\n\n  public static ok<T>(data: T): RestResponse<T>;\n  public static ok<T>(data: T, code: number): RestResponse<T>;\n  public static ok<T>(data: T, message: string): RestResponse<T>;\n  /**\n   * 成功响应\n   *\n   * @author microld\n   *\n   * @version 1.0.0\n   *\n   * @param data - 数据\n   * @param code - 状态码\n   * @param message - 响应消息\n   *\n   * @public\n   *\n   * @example\n   *\n   * RestResponse.ok(null);\n   * // => { code: 0, message: 'success', data: null }\n   *\n   * @returns RestResponse 实例\n   */\n  public static ok<T>(data: T, code: number | string = 0, message: string = 'success'): RestResponse<T> {\n    if (typeof code === 'string') {\n      message = code;\n      code = 0;\n    }\n\n    return new this<T>({ data, code, message });\n  }\n\n  public static failure<T>(message: string): RestResponse<T>;\n  public static failure<T>(code: number, message: string): RestResponse<T>;\n\n  /**\n   * 失败响应\n   *\n   * @author microld\n   *\n   * @version 1.0.0\n   *\n   * @param code - 状态码\n   * @param message - 响应消息\n   *\n   * @public\n   *\n   * @example\n   *\n   * RestResponse.failure(-1, 'failure');\n   * // => { code: -1, message: 'failure', data: null }\n   *\n   * @returns RestResponse 实例\n   */\n  public static failure<T = null>(code: number | string, message?: string) {\n    if (typeof code === 'string') {\n      message = code;\n      code = -1;\n    }\n\n    return new this<T>({ code, message, data: null });\n  }\n\n  /**\n   * 状态码\n   *\n   * @author microld\n   *\n   * @version 1.0.0\n   *\n   * @public\n   */\n  public code: number;\n\n  /**\n   * 响应消息\n   *\n   * @author microld\n   *\n   * @version 1.0.0\n   *\n   * @public\n   */\n  public message: string;\n\n  /**\n   * 返回数据\n   *\n   * @author microld\n   *\n   * @version 1.0.0\n   *\n   * @public\n   */\n  public data: T;\n\n  /**\n   * Restful Response 构造函数\n   *\n   * @author microld\n   *\n   * @version 1.0.0\n   *\n   * @constructor\n   *\n   * @public\n   */\n  public constructor(partial?: Partial<RestResponse<T>>) {\n    Object.assign(this, partial);\n  }\n\n  /**\n   * 设置状态码\n   *\n   * @author microld\n   *\n   * @version 1.0.0\n   *\n   * @public\n   *\n   * @example\n   *\n   * RestResponse.ok('ok').setCode(200);\n   * // => { code: 200, message: 'success', data: 'ok' }\n   */\n  public setCode(code: number): RestResponse<T> {\n    this.code = code;\n    return this;\n  }\n\n  /**\n   * 设置响应消息\n   *\n   * @author microld\n   *\n   * @version 1.0.0\n   *\n   * @public\n   *\n   * @example\n   *\n   * RestResponse.ok(null).setMessage(\"ok\");\n   * // => { code: 0, message: 'ok', data: null }\n   */\n  public setMessage(message: string): RestResponse<T> {\n    this.message = message;\n    return this;\n  }\n\n  /**\n   * 设置返回数据\n   *\n   * @author microld\n   *\n   * @version 1.0.0\n   *\n   * @public\n   *\n   * @example\n   *\n   * RestResponse.ok(null).setData(\"ok\");\n   * // => { code: 0, message: 'success', data: 'ok' }\n   *\n   * @returns this\n   */\n  public setData(data: T): RestResponse<T> {\n    this.data = data;\n    return this;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0bf747004f842c5b7168e6411028d408059d01a1","contentHash":"d1a9a1faea2dde1b71c7091ede989a58c0ca9a4305e39375020bc44f419abf99"},"/Users/microld/Desktop/interview-assignments/fullstack/shorturl/test/ShortService.spec.ts":{"path":"/Users/microld/Desktop/interview-assignments/fullstack/shorturl/test/ShortService.spec.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":15},"end":{"line":6,"column":30}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":65}},"5":{"start":{"line":8,"column":24},"end":{"line":8,"column":78}},"6":{"start":{"line":9,"column":15},"end":{"line":9,"column":47}},"7":{"start":{"line":10,"column":19},"end":{"line":10,"column":68}},"8":{"start":{"line":11,"column":0},"end":{"line":81,"column":3}},"9":{"start":{"line":12,"column":4},"end":{"line":14,"column":7}},"10":{"start":{"line":15,"column":17},"end":{"line":21,"column":6}},"11":{"start":{"line":22,"column":22},"end":{"line":22,"column":91}},"12":{"start":{"line":23,"column":4},"end":{"line":33,"column":7}},"13":{"start":{"line":24,"column":8},"end":{"line":26,"column":11}},"14":{"start":{"line":25,"column":12},"end":{"line":25,"column":73}},"15":{"start":{"line":27,"column":8},"end":{"line":29,"column":11}},"16":{"start":{"line":28,"column":12},"end":{"line":28,"column":71}},"17":{"start":{"line":30,"column":8},"end":{"line":32,"column":11}},"18":{"start":{"line":31,"column":12},"end":{"line":31,"column":76}},"19":{"start":{"line":34,"column":4},"end":{"line":56,"column":7}},"20":{"start":{"line":35,"column":8},"end":{"line":55,"column":11}},"21":{"start":{"line":36,"column":12},"end":{"line":36,"column":80}},"22":{"start":{"line":37,"column":12},"end":{"line":44,"column":9}},"23":{"start":{"line":45,"column":12},"end":{"line":50,"column":9}},"24":{"start":{"line":51,"column":26},"end":{"line":51,"column":55}},"25":{"start":{"line":52,"column":12},"end":{"line":52,"column":56}},"26":{"start":{"line":53,"column":12},"end":{"line":53,"column":54}},"27":{"start":{"line":54,"column":12},"end":{"line":54,"column":58}},"28":{"start":{"line":57,"column":4},"end":{"line":62,"column":7}},"29":{"start":{"line":58,"column":8},"end":{"line":61,"column":11}},"30":{"start":{"line":59,"column":23},"end":{"line":59,"column":80}},"31":{"start":{"line":60,"column":12},"end":{"line":60,"column":91}},"32":{"start":{"line":63,"column":4},"end":{"line":68,"column":7}},"33":{"start":{"line":64,"column":8},"end":{"line":67,"column":11}},"34":{"start":{"line":65,"column":23},"end":{"line":65,"column":73}},"35":{"start":{"line":66,"column":12},"end":{"line":66,"column":92}},"36":{"start":{"line":69,"column":4},"end":{"line":74,"column":7}},"37":{"start":{"line":70,"column":8},"end":{"line":73,"column":11}},"38":{"start":{"line":71,"column":23},"end":{"line":71,"column":64}},"39":{"start":{"line":72,"column":12},"end":{"line":72,"column":92}},"40":{"start":{"line":75,"column":4},"end":{"line":80,"column":7}},"41":{"start":{"line":76,"column":8},"end":{"line":79,"column":11}},"42":{"start":{"line":77,"column":23},"end":{"line":77,"column":87}},"43":{"start":{"line":78,"column":12},"end":{"line":78,"column":92}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":25},"end":{"line":11,"column":26}},"loc":{"start":{"line":11,"column":31},"end":{"line":81,"column":1}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":21},"end":{"line":23,"column":22}},"loc":{"start":{"line":23,"column":27},"end":{"line":33,"column":5}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":44},"end":{"line":24,"column":45}},"loc":{"start":{"line":24,"column":50},"end":{"line":26,"column":9}},"line":24},"4":{"name":"(anonymous_4)","decl":{"start":{"line":27,"column":47},"end":{"line":27,"column":48}},"loc":{"start":{"line":27,"column":53},"end":{"line":29,"column":9}},"line":27},"5":{"name":"(anonymous_5)","decl":{"start":{"line":30,"column":56},"end":{"line":30,"column":57}},"loc":{"start":{"line":30,"column":62},"end":{"line":32,"column":9}},"line":30},"6":{"name":"(anonymous_6)","decl":{"start":{"line":34,"column":22},"end":{"line":34,"column":23}},"loc":{"start":{"line":34,"column":28},"end":{"line":56,"column":5}},"line":34},"7":{"name":"(anonymous_7)","decl":{"start":{"line":35,"column":44},"end":{"line":35,"column":45}},"loc":{"start":{"line":35,"column":56},"end":{"line":55,"column":9}},"line":35},"8":{"name":"(anonymous_8)","decl":{"start":{"line":57,"column":28},"end":{"line":57,"column":29}},"loc":{"start":{"line":57,"column":34},"end":{"line":62,"column":5}},"line":57},"9":{"name":"(anonymous_9)","decl":{"start":{"line":58,"column":44},"end":{"line":58,"column":45}},"loc":{"start":{"line":58,"column":56},"end":{"line":61,"column":9}},"line":58},"10":{"name":"(anonymous_10)","decl":{"start":{"line":63,"column":36},"end":{"line":63,"column":37}},"loc":{"start":{"line":63,"column":42},"end":{"line":68,"column":5}},"line":63},"11":{"name":"(anonymous_11)","decl":{"start":{"line":64,"column":38},"end":{"line":64,"column":39}},"loc":{"start":{"line":64,"column":50},"end":{"line":67,"column":9}},"line":64},"12":{"name":"(anonymous_12)","decl":{"start":{"line":69,"column":33},"end":{"line":69,"column":34}},"loc":{"start":{"line":69,"column":39},"end":{"line":74,"column":5}},"line":69},"13":{"name":"(anonymous_13)","decl":{"start":{"line":70,"column":35},"end":{"line":70,"column":36}},"loc":{"start":{"line":70,"column":47},"end":{"line":73,"column":9}},"line":70},"14":{"name":"(anonymous_14)","decl":{"start":{"line":75,"column":33},"end":{"line":75,"column":34}},"loc":{"start":{"line":75,"column":39},"end":{"line":80,"column":5}},"line":75},"15":{"name":"(anonymous_15)","decl":{"start":{"line":76,"column":36},"end":{"line":76,"column":37}},"loc":{"start":{"line":76,"column":48},"end":{"line":79,"column":9}},"line":76}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":22,"column":22},"end":{"line":22,"column":91}},"type":"cond-expr","locations":[{"start":{"line":22,"column":59},"end":{"line":22,"column":79}},{"start":{"line":22,"column":82},"end":{"line":22,"column":91}}],"line":22}},"s":{"0":1,"1":4,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1},"f":{"0":4,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"b":{"0":[1,1,1],"1":[3,1],"2":[4,4],"3":[1,0]},"inputSourceMap":{"version":3,"file":"file:///Users/microld/Desktop/interview-assignments/fullstack/shorturl/test/ShortService.spec.ts","sources":["file:///Users/microld/Desktop/interview-assignments/fullstack/shorturl/test/ShortService.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect } from 'chai';\n\nimport ShortService from '../src/services/short';\nimport Configuration from '../src/infra/Configuration';\nimport path from 'path';\nimport Database from '../src/infra/Database';\nimport { ResultSetHeader } from 'mysql2/promise';\n\ndescribe('ShortService', () => {\n  Configuration.init({\n    envFilePath: path.resolve(__dirname, '.env')\n  });\n\n  const pool = Database.init({\n    host: Configuration.getOrThrow<string>('MYSQL_HOST'),\n    port: Configuration.getOrThrow<number>('MYSQL_PORT'),\n    user: Configuration.getOrThrow<string>('MYSQL_USER'),\n    password: Configuration.getOrThrow<string>('MYSQL_PASSWORD'),\n    database: Configuration.getOrThrow<string>('MYSQL_DATABASE'),\n  });\n\n  const tableName = process.env.NODE_ENV === 'testing' ? \"std_test_short_url\" : 'std_url';\n\n  describe('rand', () => {\n    it('should generate random string', () => {\n      expect(ShortService.rand()).to.be.a('string');\n    });\n\n    it('should generate random not empty', () => {\n      expect(ShortService.rand()).to.not.be.empty;\n    });\n\n    it('should generate random string length eq 5', () => {\n      expect(ShortService.rand(5)).to.have.lengthOf(5);\n    });\n  });\n\n  describe('alias', () => {\n    it('should generate random string', async () => {\n      await Database.exec<ResultSetHeader>(`DROP TABLE IF EXISTS ${tableName};`);\n\n      await Database.exec(`\n        CREATE TABLE IF NOT EXISTS ${tableName} (\n          id INT(20) NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'ID', \n          url TEXT NULL COMMENT '链接', \n          alias VARCHAR(50) NULL COMMENT '别名', \n          KEY alias (alias)\n        ) COMMENT 'URL' ENGINE=InnoDB CHARSET=utf8mb4 AUTO_INCREMENT=0;\n      `);\n\n      await Database.exec<ResultSetHeader>(`\n          INSERT INTO ${tableName} (url, alias)\n          VALUES \n              ('https://www.baidu.com', 'baidu'),\n              ('https://www.google.com', 'google');\n      `);\n\n      const alias = await ShortService.alias();\n\n      expect(alias).to.be.a('string')\n      expect(alias).to.not.be.empty;\n      expect(alias).to.have.lengthOf(5);\n    });\n  });\n\n  describe('insertShort', () => {\n    it('should generate random string', async () => {\n      const po = await ShortService.insertShort(\"https://www.aa8i.com\");\n      expect(po.url).to.be.a('string').to.be.eql(\"https://www.aa8i.com\");\n    });\n  });\n\n  describe('findOneShortByAlias', () => {\n    it('should findOne by alias', async () => {\n      const po = await ShortService.findOneShortByAlias('baidu');\n      expect(po.url).to.be.a('string').to.be.eql(\"https://www.baidu.com\");\n    });\n  });\n\n  describe('findOneShortByID', () => {\n    it('should findOne by id', async () => {\n      const po = await ShortService.findOneShortByID(1);\n      expect(po.url).to.be.a('string').to.be.eql(\"https://www.baidu.com\");\n    });\n  });\n\n  describe('findOneShortByID', () => {\n    it('should findOne by url', async () => {\n      const po = await ShortService.findOneShortByURL(\"https://www.baidu.com\");\n      expect(po.url).to.be.a('string').to.be.eql(\"https://www.baidu.com\");\n    });\n  });\n\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"28a92e2ba6acf7e3e6f285e1ad5aee4272b99709","contentHash":"31c5d63e1ca14a213b130d2fbfc491cae0d34bb8200394d75495863f84167f1b"}}