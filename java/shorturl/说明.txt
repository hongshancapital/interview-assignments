原方案：
生成短链
  1. 校验参数
  2. 全链接生成md5，查找已生成的短链是否存在，存在直接返回
  3. 生成短链
  3.1 用组成短链可用字符：0-9/a-z/A-Z(62个)初始化一个数组;
  3.2 用全链接md5值截段转成数组下标，取对应的数组值作为短链内容；
  4. 1个全链接的md5可以生成三个长度为8的短链，取第一个作为结果
  5. 设置缓存，1 key: md5(fullUrl) value: shortUrl
             2 key:shortUrl  value: fullUrl
查找完整链接
  直接根据短链接到缓存种查找并返回；

上正式环境改进：
   用md5生成短链后，映射关系存入数据库(表索引：短链接)，用redis做缓存（key:短链接，value:长链接）
   redis缓存可以设置最近最少使用方式淘汰不常用的key，也可以监听key过期事件，给高频使用的短链缓存续命；
   可以增加布隆过滤器防止不存在的key全请求到数据库。


新方案：
   用redis计数器自增(当前用一个全局变量代替)为每个url生成id，初始值从 9999开始，防止短链过短；
   将urlId 转为62进制字(0-9/a-z/A-Z)符串作为短链,存入数据库(当前用map代替)；

   短链查找全链接的时候，将62进制字符串转成10进制urlId,到数据库查找对应的全链接就好；

   数据库主键用urlId；用memchached 做缓存；
   业务化的话，新方案实现起来比原方案会简单一点


