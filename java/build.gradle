plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group = 'com.jenche'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // https://mvnrepository.com/artifact/commons-codec/commons-codec
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.15'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    // https://mvnrepository.com/artifact/com.github.xiaoymin/knife4j-spring-boot-starter
    implementation group: 'com.github.xiaoymin', name: 'knife4j-spring-boot-starter', version: '3.0.3'

    // https://mvnrepository.com/artifact/com.alibaba/fastjson
    implementation 'com.alibaba:fastjson:1.2.78'

}

javadoc {
    options.tags = ["date", "project", "date", "description"]
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    //    自定义输出目录
        jacoco {
            destinationFile = layout.projectDirectory.file('jacoco/jacocoTest.exec').getAsFile()
            //classDumpDir = layout.projectDirectory.dir('jacoco/classpathdumps').getAsFile()

        }
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = false
        csv.required = false
        html.enabled true
        html.outputLocation = layout.projectDirectory.dir('jacoco/jacocoHtml')
    }
}
