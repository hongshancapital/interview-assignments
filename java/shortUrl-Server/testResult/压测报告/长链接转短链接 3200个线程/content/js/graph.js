/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 2592.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 3.0], [5.1, 4.0], [5.2, 6.0], [5.3, 15.0], [5.4, 22.0], [5.5, 26.0], [5.6, 28.0], [5.7, 30.0], [5.8, 32.0], [5.9, 33.0], [6.0, 35.0], [6.1, 37.0], [6.2, 39.0], [6.3, 41.0], [6.4, 43.0], [6.5, 46.0], [6.6, 49.0], [6.7, 52.0], [6.8, 55.0], [6.9, 58.0], [7.0, 60.0], [7.1, 62.0], [7.2, 64.0], [7.3, 66.0], [7.4, 68.0], [7.5, 71.0], [7.6, 73.0], [7.7, 75.0], [7.8, 77.0], [7.9, 80.0], [8.0, 82.0], [8.1, 85.0], [8.2, 88.0], [8.3, 90.0], [8.4, 94.0], [8.5, 97.0], [8.6, 100.0], [8.7, 104.0], [8.8, 108.0], [8.9, 113.0], [9.0, 118.0], [9.1, 123.0], [9.2, 129.0], [9.3, 135.0], [9.4, 142.0], [9.5, 150.0], [9.6, 159.0], [9.7, 168.0], [9.8, 178.0], [9.9, 189.0], [10.0, 202.0], [10.1, 216.0], [10.2, 231.0], [10.3, 244.0], [10.4, 255.0], [10.5, 261.0], [10.6, 268.0], [10.7, 273.0], [10.8, 278.0], [10.9, 281.0], [11.0, 285.0], [11.1, 288.0], [11.2, 292.0], [11.3, 296.0], [11.4, 299.0], [11.5, 304.0], [11.6, 309.0], [11.7, 313.0], [11.8, 317.0], [11.9, 321.0], [12.0, 327.0], [12.1, 332.0], [12.2, 337.0], [12.3, 342.0], [12.4, 346.0], [12.5, 351.0], [12.6, 357.0], [12.7, 364.0], [12.8, 370.0], [12.9, 378.0], [13.0, 385.0], [13.1, 392.0], [13.2, 398.0], [13.3, 403.0], [13.4, 408.0], [13.5, 412.0], [13.6, 414.0], [13.7, 416.0], [13.8, 418.0], [13.9, 421.0], [14.0, 423.0], [14.1, 425.0], [14.2, 427.0], [14.3, 429.0], [14.4, 430.0], [14.5, 432.0], [14.6, 433.0], [14.7, 435.0], [14.8, 436.0], [14.9, 438.0], [15.0, 439.0], [15.1, 441.0], [15.2, 442.0], [15.3, 443.0], [15.4, 444.0], [15.5, 444.0], [15.6, 445.0], [15.7, 446.0], [15.8, 447.0], [15.9, 448.0], [16.0, 449.0], [16.1, 450.0], [16.2, 451.0], [16.3, 451.0], [16.4, 452.0], [16.5, 453.0], [16.6, 454.0], [16.7, 454.0], [16.8, 455.0], [16.9, 456.0], [17.0, 456.0], [17.1, 457.0], [17.2, 458.0], [17.3, 458.0], [17.4, 459.0], [17.5, 460.0], [17.6, 460.0], [17.7, 461.0], [17.8, 461.0], [17.9, 462.0], [18.0, 462.0], [18.1, 463.0], [18.2, 463.0], [18.3, 464.0], [18.4, 464.0], [18.5, 465.0], [18.6, 465.0], [18.7, 466.0], [18.8, 466.0], [18.9, 466.0], [19.0, 467.0], [19.1, 467.0], [19.2, 468.0], [19.3, 468.0], [19.4, 469.0], [19.5, 469.0], [19.6, 469.0], [19.7, 470.0], [19.8, 470.0], [19.9, 471.0], [20.0, 471.0], [20.1, 471.0], [20.2, 472.0], [20.3, 472.0], [20.4, 473.0], [20.5, 473.0], [20.6, 473.0], [20.7, 474.0], [20.8, 474.0], [20.9, 475.0], [21.0, 475.0], [21.1, 476.0], [21.2, 476.0], [21.3, 476.0], [21.4, 477.0], [21.5, 477.0], [21.6, 478.0], [21.7, 478.0], [21.8, 479.0], [21.9, 479.0], [22.0, 479.0], [22.1, 480.0], [22.2, 480.0], [22.3, 481.0], [22.4, 481.0], [22.5, 482.0], [22.6, 482.0], [22.7, 483.0], [22.8, 483.0], [22.9, 484.0], [23.0, 484.0], [23.1, 484.0], [23.2, 485.0], [23.3, 485.0], [23.4, 486.0], [23.5, 486.0], [23.6, 487.0], [23.7, 487.0], [23.8, 488.0], [23.9, 488.0], [24.0, 489.0], [24.1, 489.0], [24.2, 490.0], [24.3, 490.0], [24.4, 491.0], [24.5, 491.0], [24.6, 491.0], [24.7, 492.0], [24.8, 492.0], [24.9, 493.0], [25.0, 493.0], [25.1, 494.0], [25.2, 494.0], [25.3, 495.0], [25.4, 495.0], [25.5, 496.0], [25.6, 496.0], [25.7, 497.0], [25.8, 497.0], [25.9, 497.0], [26.0, 498.0], [26.1, 498.0], [26.2, 499.0], [26.3, 499.0], [26.4, 500.0], [26.5, 500.0], [26.6, 501.0], [26.7, 501.0], [26.8, 501.0], [26.9, 502.0], [27.0, 502.0], [27.1, 503.0], [27.2, 503.0], [27.3, 504.0], [27.4, 504.0], [27.5, 504.0], [27.6, 505.0], [27.7, 505.0], [27.8, 506.0], [27.9, 506.0], [28.0, 506.0], [28.1, 507.0], [28.2, 507.0], [28.3, 508.0], [28.4, 508.0], [28.5, 508.0], [28.6, 509.0], [28.7, 509.0], [28.8, 510.0], [28.9, 510.0], [29.0, 511.0], [29.1, 511.0], [29.2, 511.0], [29.3, 512.0], [29.4, 512.0], [29.5, 513.0], [29.6, 513.0], [29.7, 514.0], [29.8, 514.0], [29.9, 515.0], [30.0, 515.0], [30.1, 515.0], [30.2, 516.0], [30.3, 516.0], [30.4, 517.0], [30.5, 517.0], [30.6, 518.0], [30.7, 518.0], [30.8, 518.0], [30.9, 519.0], [31.0, 519.0], [31.1, 520.0], [31.2, 520.0], [31.3, 520.0], [31.4, 521.0], [31.5, 521.0], [31.6, 522.0], [31.7, 522.0], [31.8, 522.0], [31.9, 523.0], [32.0, 523.0], [32.1, 524.0], [32.2, 524.0], [32.3, 524.0], [32.4, 525.0], [32.5, 525.0], [32.6, 526.0], [32.7, 526.0], [32.8, 526.0], [32.9, 527.0], [33.0, 527.0], [33.1, 528.0], [33.2, 528.0], [33.3, 528.0], [33.4, 529.0], [33.5, 529.0], [33.6, 530.0], [33.7, 530.0], [33.8, 530.0], [33.9, 531.0], [34.0, 531.0], [34.1, 532.0], [34.2, 532.0], [34.3, 532.0], [34.4, 533.0], [34.5, 533.0], [34.6, 534.0], [34.7, 534.0], [34.8, 534.0], [34.9, 535.0], [35.0, 535.0], [35.1, 536.0], [35.2, 536.0], [35.3, 537.0], [35.4, 537.0], [35.5, 537.0], [35.6, 538.0], [35.7, 538.0], [35.8, 539.0], [35.9, 539.0], [36.0, 539.0], [36.1, 540.0], [36.2, 540.0], [36.3, 541.0], [36.4, 541.0], [36.5, 542.0], [36.6, 542.0], [36.7, 542.0], [36.8, 543.0], [36.9, 543.0], [37.0, 544.0], [37.1, 544.0], [37.2, 544.0], [37.3, 545.0], [37.4, 545.0], [37.5, 546.0], [37.6, 546.0], [37.7, 547.0], [37.8, 547.0], [37.9, 547.0], [38.0, 548.0], [38.1, 548.0], [38.2, 549.0], [38.3, 549.0], [38.4, 550.0], [38.5, 550.0], [38.6, 551.0], [38.7, 551.0], [38.8, 552.0], [38.9, 552.0], [39.0, 552.0], [39.1, 553.0], [39.2, 553.0], [39.3, 554.0], [39.4, 554.0], [39.5, 555.0], [39.6, 555.0], [39.7, 556.0], [39.8, 556.0], [39.9, 557.0], [40.0, 557.0], [40.1, 558.0], [40.2, 558.0], [40.3, 559.0], [40.4, 559.0], [40.5, 560.0], [40.6, 560.0], [40.7, 561.0], [40.8, 561.0], [40.9, 562.0], [41.0, 562.0], [41.1, 563.0], [41.2, 563.0], [41.3, 564.0], [41.4, 564.0], [41.5, 565.0], [41.6, 565.0], [41.7, 566.0], [41.8, 566.0], [41.9, 566.0], [42.0, 567.0], [42.1, 568.0], [42.2, 568.0], [42.3, 569.0], [42.4, 569.0], [42.5, 570.0], [42.6, 570.0], [42.7, 571.0], [42.8, 571.0], [42.9, 572.0], [43.0, 572.0], [43.1, 573.0], [43.2, 573.0], [43.3, 574.0], [43.4, 574.0], [43.5, 575.0], [43.6, 575.0], [43.7, 576.0], [43.8, 576.0], [43.9, 577.0], [44.0, 577.0], [44.1, 578.0], [44.2, 578.0], [44.3, 579.0], [44.4, 579.0], [44.5, 580.0], [44.6, 580.0], [44.7, 581.0], [44.8, 581.0], [44.9, 582.0], [45.0, 582.0], [45.1, 583.0], [45.2, 583.0], [45.3, 584.0], [45.4, 584.0], [45.5, 585.0], [45.6, 585.0], [45.7, 586.0], [45.8, 586.0], [45.9, 587.0], [46.0, 587.0], [46.1, 588.0], [46.2, 589.0], [46.3, 589.0], [46.4, 590.0], [46.5, 590.0], [46.6, 591.0], [46.7, 591.0], [46.8, 592.0], [46.9, 593.0], [47.0, 593.0], [47.1, 594.0], [47.2, 594.0], [47.3, 595.0], [47.4, 595.0], [47.5, 596.0], [47.6, 596.0], [47.7, 597.0], [47.8, 598.0], [47.9, 598.0], [48.0, 599.0], [48.1, 599.0], [48.2, 600.0], [48.3, 600.0], [48.4, 601.0], [48.5, 601.0], [48.6, 602.0], [48.7, 603.0], [48.8, 603.0], [48.9, 604.0], [49.0, 604.0], [49.1, 605.0], [49.2, 605.0], [49.3, 606.0], [49.4, 607.0], [49.5, 607.0], [49.6, 608.0], [49.7, 608.0], [49.8, 609.0], [49.9, 610.0], [50.0, 610.0], [50.1, 611.0], [50.2, 612.0], [50.3, 612.0], [50.4, 613.0], [50.5, 613.0], [50.6, 614.0], [50.7, 615.0], [50.8, 615.0], [50.9, 616.0], [51.0, 617.0], [51.1, 617.0], [51.2, 618.0], [51.3, 619.0], [51.4, 619.0], [51.5, 620.0], [51.6, 620.0], [51.7, 621.0], [51.8, 622.0], [51.9, 622.0], [52.0, 623.0], [52.1, 624.0], [52.2, 624.0], [52.3, 625.0], [52.4, 626.0], [52.5, 626.0], [52.6, 627.0], [52.7, 628.0], [52.8, 628.0], [52.9, 629.0], [53.0, 630.0], [53.1, 630.0], [53.2, 631.0], [53.3, 632.0], [53.4, 632.0], [53.5, 633.0], [53.6, 634.0], [53.7, 634.0], [53.8, 635.0], [53.9, 635.0], [54.0, 636.0], [54.1, 637.0], [54.2, 637.0], [54.3, 638.0], [54.4, 639.0], [54.5, 639.0], [54.6, 640.0], [54.7, 641.0], [54.8, 641.0], [54.9, 642.0], [55.0, 643.0], [55.1, 643.0], [55.2, 644.0], [55.3, 645.0], [55.4, 645.0], [55.5, 646.0], [55.6, 646.0], [55.7, 647.0], [55.8, 648.0], [55.9, 648.0], [56.0, 649.0], [56.1, 650.0], [56.2, 650.0], [56.3, 651.0], [56.4, 652.0], [56.5, 652.0], [56.6, 653.0], [56.7, 654.0], [56.8, 655.0], [56.9, 655.0], [57.0, 656.0], [57.1, 657.0], [57.2, 657.0], [57.3, 658.0], [57.4, 659.0], [57.5, 659.0], [57.6, 660.0], [57.7, 661.0], [57.8, 661.0], [57.9, 662.0], [58.0, 663.0], [58.1, 664.0], [58.2, 664.0], [58.3, 665.0], [58.4, 666.0], [58.5, 666.0], [58.6, 667.0], [58.7, 668.0], [58.8, 669.0], [58.9, 669.0], [59.0, 670.0], [59.1, 671.0], [59.2, 671.0], [59.3, 672.0], [59.4, 673.0], [59.5, 673.0], [59.6, 674.0], [59.7, 675.0], [59.8, 675.0], [59.9, 676.0], [60.0, 677.0], [60.1, 677.0], [60.2, 678.0], [60.3, 679.0], [60.4, 679.0], [60.5, 680.0], [60.6, 681.0], [60.7, 681.0], [60.8, 682.0], [60.9, 683.0], [61.0, 683.0], [61.1, 684.0], [61.2, 685.0], [61.3, 685.0], [61.4, 686.0], [61.5, 686.0], [61.6, 687.0], [61.7, 688.0], [61.8, 688.0], [61.9, 689.0], [62.0, 690.0], [62.1, 690.0], [62.2, 691.0], [62.3, 692.0], [62.4, 692.0], [62.5, 693.0], [62.6, 693.0], [62.7, 694.0], [62.8, 695.0], [62.9, 695.0], [63.0, 696.0], [63.1, 697.0], [63.2, 697.0], [63.3, 698.0], [63.4, 698.0], [63.5, 699.0], [63.6, 700.0], [63.7, 700.0], [63.8, 701.0], [63.9, 702.0], [64.0, 702.0], [64.1, 703.0], [64.2, 704.0], [64.3, 704.0], [64.4, 705.0], [64.5, 706.0], [64.6, 706.0], [64.7, 707.0], [64.8, 708.0], [64.9, 709.0], [65.0, 709.0], [65.1, 710.0], [65.2, 711.0], [65.3, 711.0], [65.4, 712.0], [65.5, 713.0], [65.6, 713.0], [65.7, 714.0], [65.8, 714.0], [65.9, 715.0], [66.0, 716.0], [66.1, 716.0], [66.2, 717.0], [66.3, 718.0], [66.4, 718.0], [66.5, 719.0], [66.6, 719.0], [66.7, 720.0], [66.8, 721.0], [66.9, 721.0], [67.0, 722.0], [67.1, 723.0], [67.2, 723.0], [67.3, 724.0], [67.4, 724.0], [67.5, 725.0], [67.6, 726.0], [67.7, 727.0], [67.8, 727.0], [67.9, 728.0], [68.0, 728.0], [68.1, 729.0], [68.2, 730.0], [68.3, 730.0], [68.4, 731.0], [68.5, 732.0], [68.6, 732.0], [68.7, 733.0], [68.8, 734.0], [68.9, 734.0], [69.0, 735.0], [69.1, 735.0], [69.2, 736.0], [69.3, 737.0], [69.4, 737.0], [69.5, 738.0], [69.6, 739.0], [69.7, 739.0], [69.8, 740.0], [69.9, 741.0], [70.0, 741.0], [70.1, 742.0], [70.2, 743.0], [70.3, 743.0], [70.4, 744.0], [70.5, 745.0], [70.6, 745.0], [70.7, 746.0], [70.8, 746.0], [70.9, 747.0], [71.0, 748.0], [71.1, 748.0], [71.2, 749.0], [71.3, 750.0], [71.4, 750.0], [71.5, 751.0], [71.6, 752.0], [71.7, 752.0], [71.8, 753.0], [71.9, 753.0], [72.0, 754.0], [72.1, 755.0], [72.2, 755.0], [72.3, 756.0], [72.4, 757.0], [72.5, 757.0], [72.6, 758.0], [72.7, 759.0], [72.8, 760.0], [72.9, 760.0], [73.0, 761.0], [73.1, 762.0], [73.2, 762.0], [73.3, 763.0], [73.4, 764.0], [73.5, 764.0], [73.6, 765.0], [73.7, 766.0], [73.8, 766.0], [73.9, 767.0], [74.0, 768.0], [74.1, 768.0], [74.2, 769.0], [74.3, 770.0], [74.4, 771.0], [74.5, 771.0], [74.6, 772.0], [74.7, 773.0], [74.8, 773.0], [74.9, 774.0], [75.0, 775.0], [75.1, 776.0], [75.2, 776.0], [75.3, 777.0], [75.4, 778.0], [75.5, 779.0], [75.6, 779.0], [75.7, 780.0], [75.8, 781.0], [75.9, 782.0], [76.0, 782.0], [76.1, 783.0], [76.2, 784.0], [76.3, 784.0], [76.4, 785.0], [76.5, 786.0], [76.6, 787.0], [76.7, 787.0], [76.8, 788.0], [76.9, 789.0], [77.0, 790.0], [77.1, 790.0], [77.2, 791.0], [77.3, 792.0], [77.4, 793.0], [77.5, 793.0], [77.6, 794.0], [77.7, 795.0], [77.8, 796.0], [77.9, 797.0], [78.0, 797.0], [78.1, 798.0], [78.2, 799.0], [78.3, 800.0], [78.4, 800.0], [78.5, 801.0], [78.6, 802.0], [78.7, 803.0], [78.8, 803.0], [78.9, 804.0], [79.0, 805.0], [79.1, 806.0], [79.2, 807.0], [79.3, 808.0], [79.4, 808.0], [79.5, 809.0], [79.6, 810.0], [79.7, 811.0], [79.8, 812.0], [79.9, 813.0], [80.0, 813.0], [80.1, 814.0], [80.2, 815.0], [80.3, 816.0], [80.4, 817.0], [80.5, 817.0], [80.6, 818.0], [80.7, 819.0], [80.8, 820.0], [80.9, 821.0], [81.0, 821.0], [81.1, 822.0], [81.2, 823.0], [81.3, 824.0], [81.4, 825.0], [81.5, 825.0], [81.6, 826.0], [81.7, 827.0], [81.8, 828.0], [81.9, 829.0], [82.0, 830.0], [82.1, 830.0], [82.2, 831.0], [82.3, 832.0], [82.4, 833.0], [82.5, 834.0], [82.6, 835.0], [82.7, 835.0], [82.8, 836.0], [82.9, 837.0], [83.0, 838.0], [83.1, 839.0], [83.2, 840.0], [83.3, 841.0], [83.4, 842.0], [83.5, 843.0], [83.6, 844.0], [83.7, 845.0], [83.8, 845.0], [83.9, 846.0], [84.0, 847.0], [84.1, 848.0], [84.2, 849.0], [84.3, 850.0], [84.4, 851.0], [84.5, 852.0], [84.6, 853.0], [84.7, 853.0], [84.8, 854.0], [84.9, 855.0], [85.0, 856.0], [85.1, 857.0], [85.2, 858.0], [85.3, 859.0], [85.4, 860.0], [85.5, 861.0], [85.6, 862.0], [85.7, 863.0], [85.8, 864.0], [85.9, 865.0], [86.0, 866.0], [86.1, 867.0], [86.2, 868.0], [86.3, 869.0], [86.4, 870.0], [86.5, 871.0], [86.6, 872.0], [86.7, 873.0], [86.8, 874.0], [86.9, 875.0], [87.0, 876.0], [87.1, 877.0], [87.2, 878.0], [87.3, 879.0], [87.4, 880.0], [87.5, 881.0], [87.6, 882.0], [87.7, 884.0], [87.8, 885.0], [87.9, 886.0], [88.0, 887.0], [88.1, 888.0], [88.2, 889.0], [88.3, 890.0], [88.4, 891.0], [88.5, 892.0], [88.6, 893.0], [88.7, 894.0], [88.8, 895.0], [88.9, 897.0], [89.0, 898.0], [89.1, 899.0], [89.2, 900.0], [89.3, 902.0], [89.4, 903.0], [89.5, 904.0], [89.6, 905.0], [89.7, 906.0], [89.8, 907.0], [89.9, 908.0], [90.0, 910.0], [90.1, 911.0], [90.2, 912.0], [90.3, 913.0], [90.4, 915.0], [90.5, 916.0], [90.6, 917.0], [90.7, 918.0], [90.8, 920.0], [90.9, 921.0], [91.0, 922.0], [91.1, 924.0], [91.2, 925.0], [91.3, 927.0], [91.4, 928.0], [91.5, 930.0], [91.6, 931.0], [91.7, 932.0], [91.8, 934.0], [91.9, 935.0], [92.0, 937.0], [92.1, 938.0], [92.2, 940.0], [92.3, 942.0], [92.4, 943.0], [92.5, 945.0], [92.6, 946.0], [92.7, 948.0], [92.8, 950.0], [92.9, 951.0], [93.0, 953.0], [93.1, 955.0], [93.2, 956.0], [93.3, 958.0], [93.4, 960.0], [93.5, 961.0], [93.6, 963.0], [93.7, 965.0], [93.8, 967.0], [93.9, 968.0], [94.0, 970.0], [94.1, 971.0], [94.2, 973.0], [94.3, 975.0], [94.4, 977.0], [94.5, 979.0], [94.6, 981.0], [94.7, 983.0], [94.8, 985.0], [94.9, 987.0], [95.0, 989.0], [95.1, 991.0], [95.2, 994.0], [95.3, 996.0], [95.4, 998.0], [95.5, 1001.0], [95.6, 1003.0], [95.7, 1005.0], [95.8, 1008.0], [95.9, 1010.0], [96.0, 1013.0], [96.1, 1015.0], [96.2, 1017.0], [96.3, 1020.0], [96.4, 1022.0], [96.5, 1025.0], [96.6, 1027.0], [96.7, 1030.0], [96.8, 1033.0], [96.9, 1036.0], [97.0, 1039.0], [97.1, 1042.0], [97.2, 1046.0], [97.3, 1049.0], [97.4, 1054.0], [97.5, 1058.0], [97.6, 1062.0], [97.7, 1066.0], [97.8, 1071.0], [97.9, 1075.0], [98.0, 1080.0], [98.1, 1085.0], [98.2, 1090.0], [98.3, 1095.0], [98.4, 1100.0], [98.5, 1106.0], [98.6, 1112.0], [98.7, 1118.0], [98.8, 1125.0], [98.9, 1134.0], [99.0, 1143.0], [99.1, 1154.0], [99.2, 1165.0], [99.3, 1179.0], [99.4, 1195.0], [99.5, 1210.0], [99.6, 1227.0], [99.7, 1256.0], [99.8, 1297.0], [99.9, 1366.0]], "isOverall": false, "label": "HTTP请求长链接转短链接", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 683600.0, "series": [{"data": [[0.0, 269232.0], [600.0, 483873.0], [700.0, 462375.0], [800.0, 340006.0], [900.0, 198476.0], [1000.0, 92256.0], [1100.0, 32686.0], [1200.0, 11767.0], [1300.0, 3605.0], [1400.0, 1062.0], [1500.0, 322.0], [100.0, 44051.0], [1600.0, 471.0], [1700.0, 224.0], [1800.0, 110.0], [1900.0, 81.0], [2000.0, 133.0], [2100.0, 44.0], [2200.0, 33.0], [2300.0, 6.0], [2400.0, 7.0], [2500.0, 1.0], [200.0, 44870.0], [300.0, 56797.0], [400.0, 412480.0], [500.0, 683600.0]], "isOverall": false, "label": "HTTP请求长链接转短链接", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 313.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2302211.0, "series": [{"data": [[0.0, 834615.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2302211.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1429.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 313.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 3182.4043381117167, "minX": 1.6486458E12, "maxY": 3200.0, "series": [{"data": [[1.64864616E12, 3200.0], [1.64864586E12, 3200.0], [1.64864634E12, 3200.0], [1.64864604E12, 3200.0], [1.64864622E12, 3200.0], [1.64864592E12, 3200.0], [1.6486464E12, 3182.4043381117167], [1.6486461E12, 3200.0], [1.6486458E12, 3188.2950132229316], [1.64864628E12, 3200.0], [1.64864598E12, 3200.0]], "isOverall": false, "label": "模拟用户请求", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6486464E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1032.0, "maxY": 1079.3333333333333, "series": [{"data": [[1058.0, 839.25], [1082.0, 700.0], [1074.0, 689.0], [1072.0, 757.0], [1038.0, 845.0], [1036.0, 887.5], [1034.0, 761.5], [1032.0, 723.3333333333334], [1070.0, 843.1047619047621], [1064.0, 832.0], [1060.0, 861.0], [1056.0, 662.0], [1054.0, 754.7142857142857], [1050.0, 795.5], [1048.0, 890.5], [1046.0, 771.0], [1044.0, 794.0], [1040.0, 861.1428571428572], [1146.0, 873.0], [1122.0, 830.0], [1100.0, 903.3333333333334], [1094.0, 700.0], [1092.0, 826.0], [1090.0, 699.0], [1130.0, 833.0], [1188.0, 873.5], [1202.0, 913.8], [1166.0, 1038.0], [1158.0, 766.5], [1156.0, 699.0], [1154.0, 698.0], [1204.0, 921.0], [1198.0, 695.0], [1196.0, 694.0], [1190.0, 876.0], [1184.0, 909.0], [1210.0, 889.6666666666666], [1214.0, 922.0], [1180.0, 912.0], [1178.0, 693.0], [1172.0, 909.5], [1170.0, 695.0], [1274.0, 949.5], [1278.0, 885.0], [1270.0, 824.0], [1226.0, 858.5], [1230.0, 885.0], [1222.0, 872.6], [1224.0, 859.5], [1216.0, 844.8333333333334], [1220.0, 825.0], [1260.0, 887.0], [1258.0, 953.0], [1256.0, 950.0], [1254.0, 821.0], [1238.0, 952.0], [1236.0, 874.8268398268397], [1232.0, 874.75], [1234.0, 844.0], [1316.0, 822.0], [1342.0, 821.0], [1338.0, 822.0], [1336.0, 823.0], [1334.0, 886.5], [1302.0, 822.0], [1292.0, 822.0], [1290.0, 887.5], [1286.0, 951.0], [1284.0, 821.0], [1282.0, 821.0], [1296.0, 822.0], [1324.0, 1039.0], [1322.0, 951.0], [1318.0, 822.0], [1312.0, 822.0], [1384.0, 1033.0], [1404.0, 820.6666666666666], [1400.0, 972.0], [1390.0, 969.0], [1388.0, 879.8], [1386.0, 822.5], [1382.0, 894.5], [1376.0, 820.0], [1358.0, 948.0], [1354.0, 948.0], [1352.0, 819.0], [1348.0, 820.0], [1346.0, 898.5], [1344.0, 887.0], [1466.0, 719.0], [1470.0, 722.0], [1462.0, 721.0], [1460.0, 723.0], [1458.0, 721.0], [1456.0, 722.0], [1438.0, 892.0], [1420.0, 873.5], [1436.0, 1063.0], [1434.0, 817.0], [1432.0, 942.0], [1428.0, 950.5], [1426.0, 819.0], [1454.0, 826.4279069767447], [1450.0, 817.0], [1444.0, 816.0], [1442.0, 1008.0], [1532.0, 692.0], [1534.0, 689.0], [1506.0, 702.0], [1504.0, 703.0], [1528.0, 692.0], [1524.0, 693.0], [1522.0, 694.0], [1520.0, 694.0], [1500.0, 704.0], [1476.0, 717.0], [1474.0, 715.0], [1480.0, 715.0], [1478.0, 716.0], [1486.0, 707.0], [1484.0, 708.0], [1498.0, 703.0], [1496.0, 705.0], [1494.0, 705.5], [1518.0, 694.0], [1516.0, 757.0], [1514.0, 698.0], [1512.0, 698.0], [1584.0, 674.0], [1596.0, 670.0], [1598.0, 669.5], [1568.0, 676.0], [1592.0, 754.0], [1590.0, 672.0], [1588.0, 830.0], [1566.0, 704.0], [1538.0, 690.0], [1536.0, 689.5], [1542.0, 684.0], [1540.0, 687.0], [1546.0, 681.0], [1544.0, 682.0], [1550.0, 679.0], [1548.0, 680.0], [1564.0, 677.0], [1558.0, 784.5], [1556.0, 678.0], [1554.0, 678.0], [1552.0, 839.0], [1578.0, 702.0], [1576.0, 729.5], [1574.0, 675.0], [1570.0, 732.0], [1654.0, 659.0], [1658.0, 713.0], [1660.0, 659.0], [1656.0, 712.0], [1648.0, 661.0], [1614.0, 666.5], [1612.0, 686.0], [1606.0, 668.0], [1604.0, 752.0], [1602.0, 698.0], [1600.0, 669.0], [1634.0, 768.0], [1632.0, 664.0], [1628.0, 664.0], [1626.0, 664.0], [1624.0, 772.5], [1622.0, 724.0], [1618.0, 666.0], [1714.0, 643.0], [1724.0, 638.0], [1726.0, 744.0], [1696.0, 648.0], [1704.0, 647.0], [1698.0, 702.0], [1722.0, 744.0], [1720.0, 666.0], [1718.0, 642.0], [1712.0, 670.5], [1678.0, 656.0], [1676.0, 684.5], [1674.0, 658.0], [1668.0, 709.5], [1666.0, 657.0], [1694.0, 757.0], [1692.0, 650.0], [1690.0, 758.0], [1688.0, 708.0], [1686.0, 706.5], [1684.0, 704.0], [1682.0, 653.0], [1710.0, 671.0], [1708.0, 753.0], [1764.0, 625.0], [1790.0, 656.6666666666666], [1788.0, 774.0], [1782.0, 657.6666666666666], [1742.0, 628.5], [1738.0, 705.0], [1734.0, 629.0], [1732.0, 630.0], [1772.0, 624.0], [1770.0, 777.0], [1766.0, 651.5], [1762.0, 660.3333333333334], [1752.0, 676.0], [1750.0, 675.0], [1748.0, 628.0], [1746.0, 627.0], [1744.0, 628.0], [1830.0, 684.6666666666666], [1852.0, 617.0], [1854.0, 642.5], [1826.0, 634.6666666666666], [1850.0, 616.0], [1848.0, 617.0], [1844.0, 670.0], [1800.0, 620.0], [1794.0, 723.6666666666666], [1822.0, 643.0], [1820.0, 618.5], [1818.0, 669.0], [1816.0, 651.6666666666666], [1814.0, 618.0], [1812.0, 619.0], [1808.0, 620.0], [1838.0, 617.0], [1836.0, 618.0], [1834.0, 635.0], [1890.0, 691.0], [1916.0, 662.6666666666666], [1912.0, 610.5], [1910.0, 717.0], [1906.0, 614.0], [1884.0, 616.0], [1862.0, 615.6666666666666], [1868.0, 642.0], [1864.0, 616.5], [1882.0, 614.0], [1880.0, 640.5], [1878.0, 665.0], [1876.0, 666.0], [1872.0, 615.0], [1902.0, 613.5], [1898.0, 639.5], [1892.0, 614.0], [1888.0, 615.0], [1978.0, 608.0], [1980.0, 655.0], [1972.0, 608.0], [1968.0, 608.5], [1962.0, 661.3333333333334], [1956.0, 610.0], [1954.0, 607.0], [1952.0, 609.0], [1950.0, 608.0], [1922.0, 711.0], [1920.0, 700.0], [1930.0, 626.3333333333334], [1926.0, 628.3333333333334], [1946.0, 609.3333333333334], [1942.0, 659.5], [2034.0, 607.0], [2044.0, 633.5], [2046.0, 605.0], [2020.0, 684.5], [2018.0, 689.6666666666666], [2042.0, 608.0], [2038.0, 607.5], [2036.0, 605.3333333333334], [2032.0, 606.3333333333334], [1996.0, 608.0], [1994.0, 609.0], [1990.0, 620.5], [1988.0, 755.0], [1984.0, 701.6666666666666], [2014.0, 682.5], [2008.0, 608.5], [2006.0, 608.0], [2004.0, 634.0], [2002.0, 633.5], [2000.0, 643.0], [2028.0, 635.0], [2024.0, 608.0], [2148.0, 657.0], [2168.0, 698.0], [2172.0, 657.0], [2112.0, 629.75], [2128.0, 606.0], [2120.0, 621.3333333333334], [2164.0, 652.5], [2160.0, 653.5], [2152.0, 631.5], [2144.0, 656.0], [2068.0, 606.5], [2064.0, 607.0], [2060.0, 605.0], [2056.0, 671.0], [2052.0, 605.0], [2108.0, 603.0], [2104.0, 603.5], [2100.0, 604.0], [2096.0, 603.0], [2092.0, 604.0], [2084.0, 705.0], [2140.0, 621.6666666666666], [2136.0, 628.5], [2296.0, 25.25], [2292.0, 188.42857142857144], [2268.0, 622.0], [2256.0, 643.0], [2252.0, 623.5], [2300.0, 608.6666666666666], [2288.0, 597.0], [2284.0, 687.0], [2280.0, 598.0], [2272.0, 598.0], [2204.0, 603.0], [2196.0, 654.0], [2188.0, 680.5], [2184.0, 705.0], [2180.0, 604.5], [2176.0, 603.0], [2224.0, 600.0], [2216.0, 601.0], [2212.0, 626.0], [2208.0, 600.5], [2324.0, 60.0], [2316.0, 4.333333333333333], [2304.0, 74.0], [2352.0, 637.0], [2344.0, 1.5], [2336.0, 638.0], [2340.0, 409.6666666666667], [2308.0, 4.0], [2312.0, 609.3333333333334], [2328.0, 163.75], [2332.0, 1.5], [2400.0, 646.0], [2412.0, 587.0], [2416.0, 588.5], [2420.0, 589.0], [2428.0, 614.6666666666666], [2368.0, 621.3333333333334], [2380.0, 655.5], [2396.0, 589.0], [2424.0, 619.0], [2444.0, 646.25], [2496.0, 436.0], [2488.0, 79.0], [2484.0, 632.0], [2480.0, 631.0], [2476.0, 586.0], [2464.0, 665.0], [2492.0, 84.0], [2432.0, 587.0], [2440.0, 607.5], [2448.0, 584.0], [2460.0, 697.6666666666666], [2548.0, 187.33333333333334], [2552.0, 376.0], [2556.0, 572.6666666666666], [2544.0, 369.5], [2540.0, 482.0], [2536.0, 465.0], [2532.0, 427.0], [2500.0, 430.6666666666667], [2504.0, 523.25], [2508.0, 581.0], [2512.0, 420.0], [2516.0, 485.5], [2524.0, 599.5], [2568.0, 424.2], [2608.0, 370.00000000000006], [2560.0, 305.8], [2620.0, 125.0], [2612.0, 182.5], [2616.0, 630.0], [2604.0, 434.0], [2600.0, 98.77777777777777], [2596.0, 304.0], [2592.0, 118.5], [2572.0, 569.0], [2580.0, 220.0], [2584.0, 129.27450980392157], [2588.0, 140.0], [2624.0, 63.5], [2684.0, 593.0], [2680.0, 358.25], [2676.0, 582.3333333333334], [2672.0, 499.5], [2668.0, 189.2142857142857], [2664.0, 171.75], [2660.0, 258.75], [2656.0, 219.5], [2628.0, 415.1666666666667], [2632.0, 67.8], [2636.0, 73.5], [2640.0, 585.5], [2644.0, 153.46153846153845], [2648.0, 140.94444444444446], [2652.0, 356.77777777777777], [2692.0, 370.25], [2744.0, 811.0], [2688.0, 230.33333333333331], [2748.0, 359.5], [2740.0, 180.0], [2732.0, 486.0], [2728.0, 771.0], [2724.0, 294.72727272727275], [2720.0, 78.0], [2700.0, 414.0], [2704.0, 556.0], [2708.0, 559.0], [2716.0, 396.36363636363643], [2752.0, 448.6], [2812.0, 594.0], [2800.0, 458.686746987952], [2792.0, 431.2], [2788.0, 335.0], [2796.0, 576.3333333333334], [2784.0, 356.0], [2756.0, 395.27272727272725], [2760.0, 596.7142857142857], [2764.0, 382.1176470588235], [2768.0, 704.3333333333334], [2772.0, 446.5], [2776.0, 727.8], [2780.0, 575.0], [2920.0, 479.0], [2940.0, 470.25], [2884.0, 1.0], [2880.0, 476.6117647058824], [2936.0, 496.0], [2932.0, 363.0], [2928.0, 450.6666666666667], [2924.0, 323.2], [2912.0, 624.3333333333334], [2816.0, 538.5], [2820.0, 589.0], [2824.0, 539.3333333333334], [2828.0, 594.25], [2832.0, 707.0], [2876.0, 535.0], [2872.0, 459.2], [2868.0, 537.3333333333334], [2864.0, 603.3333333333333], [2856.0, 585.75], [2852.0, 116.0], [2848.0, 589.0], [2888.0, 455.6666666666667], [2892.0, 467.79999999999995], [2896.0, 582.0], [2900.0, 465.75], [2904.0, 262.0], [2908.0, 457.0], [2952.0, 452.1666666666667], [2944.0, 531.0], [2948.0, 531.5], [3004.0, 547.0], [3000.0, 544.6666666666666], [2996.0, 532.0], [2988.0, 592.0], [2984.0, 399.0], [2980.0, 579.0], [2976.0, 575.6666666666666], [2956.0, 555.5], [2960.0, 213.8], [2968.0, 624.5], [3040.0, 552.6666666666667], [3044.0, 528.0], [3048.0, 288.0], [3056.0, 524.3333333333334], [3060.0, 538.0], [3068.0, 427.2857142857143], [3064.0, 544.0], [3008.0, 561.6666666666666], [3012.0, 424.0], [3016.0, 545.3333333333334], [3024.0, 316.0], [3100.0, 550.3333333333334], [3180.0, 340.55555555555554], [3172.0, 507.8333333333334], [3168.0, 545.8], [3092.0, 575.3333333333334], [3084.0, 435.6], [3080.0, 522.6666666666666], [3072.0, 550.3333333333334], [3132.0, 558.5], [3128.0, 540.3333333333334], [3124.0, 496.0909090909092], [3120.0, 257.5], [3112.0, 516.0], [3108.0, 479.29999999999995], [3104.0, 518.0], [3176.0, 491.7142857142857], [3184.0, 435.49999999999994], [3136.0, 525.0], [3140.0, 550.8571428571428], [3148.0, 385.0], [3152.0, 555.5], [3156.0, 508.0], [3160.0, 424.5], [3196.0, 496.8400000000001], [3192.0, 518.4], [3188.0, 370.05555555555554], [3200.0, 605.9826880288014], [2101.0, 603.0], [2161.0, 603.0], [2157.0, 684.0], [2145.0, 427.66666666666663], [2077.0, 621.0], [2073.0, 603.0], [2069.0, 607.0], [2061.0, 605.0], [2057.0, 606.0], [2049.0, 704.5], [2117.0, 605.0], [2097.0, 652.3333333333334], [2089.0, 671.0], [2085.0, 605.0], [2081.0, 705.0], [2289.0, 598.0], [2293.0, 299.0], [2297.0, 199.375], [2301.0, 175.125], [2253.0, 598.0], [2269.0, 598.0], [2285.0, 640.0], [2281.0, 667.5], [2277.0, 600.0], [2201.0, 602.0], [2197.0, 602.0], [2189.0, 603.0], [2237.0, 601.3333333333334], [2229.0, 625.5], [2221.0, 627.5], [2213.0, 740.0], [2309.0, 219.66666666666666], [2341.0, 25.444444444444443], [2337.0, 614.5], [2305.0, 10.0], [2365.0, 654.0], [2361.0, 684.5], [2357.0, 589.0], [2353.0, 613.5], [2349.0, 731.0], [2345.0, 591.0], [2313.0, 160.0], [2317.0, 3.6999999999999997], [2321.0, 609.0], [2325.0, 639.0], [2329.0, 12.5], [2333.0, 292.85714285714283], [2377.0, 637.0], [2385.0, 613.5], [2389.0, 602.25], [2393.0, 589.5], [2429.0, 587.0], [2425.0, 588.0], [2409.0, 606.3333333333334], [2489.0, 82.0], [2541.0, 302.0], [2485.0, 386.0], [2481.0, 69.5], [2473.0, 644.0], [2465.0, 629.0], [2493.0, 88.33333333333333], [2553.0, 378.0], [2557.0, 378.5], [2545.0, 168.0], [2549.0, 641.5], [2537.0, 151.0], [2529.0, 446.6666666666667], [2453.0, 583.0], [2449.0, 586.0], [2441.0, 586.0], [2437.0, 586.0], [2433.0, 588.0], [2497.0, 100.0], [2501.0, 316.0], [2505.0, 96.0], [2513.0, 341.5], [2521.0, 445.5], [2577.0, 428.25], [2621.0, 330.0], [2573.0, 502.0], [2565.0, 539.0], [2617.0, 564.0], [2613.0, 328.5], [2609.0, 157.94117647058823], [2605.0, 139.0], [2601.0, 388.6666666666667], [2597.0, 145.66666666666666], [2593.0, 270.0], [2561.0, 319.0], [2581.0, 452.6666666666667], [2585.0, 106.6], [2589.0, 266.7142857142857], [2681.0, 213.16666666666666], [2685.0, 575.5], [2677.0, 222.57894736842107], [2673.0, 172.16666666666666], [2669.0, 207.60869565217394], [2661.0, 230.23076923076923], [2665.0, 658.25], [2657.0, 199.625], [2625.0, 517.0], [2633.0, 71.33333333333334], [2637.0, 74.42857142857143], [2641.0, 594.0], [2645.0, 561.0], [2649.0, 128.0], [2653.0, 92.0], [2709.0, 647.0], [2733.0, 415.1428571428571], [2749.0, 520.5714285714286], [2745.0, 574.4], [2741.0, 356.47058823529414], [2725.0, 284.20000000000005], [2729.0, 383.6666666666667], [2721.0, 567.3333333333334], [2689.0, 369.25], [2713.0, 288.0], [2697.0, 602.0], [2717.0, 637.5], [2801.0, 650.0], [2797.0, 597.0], [2805.0, 539.0], [2813.0, 565.5], [2753.0, 575.5], [2809.0, 663.0], [2793.0, 590.0], [2789.0, 296.6666666666667], [2785.0, 501.66666666666663], [2757.0, 549.0], [2769.0, 313.3333333333333], [2773.0, 552.9], [2777.0, 751.0], [2781.0, 644.2857142857142], [2933.0, 582.0], [2881.0, 526.1428571428571], [2929.0, 350.3333333333333], [2941.0, 341.5], [2937.0, 566.6666666666666], [2925.0, 257.33333333333337], [2921.0, 469.6666666666667], [2917.0, 389.57142857142856], [2913.0, 491.4], [2841.0, 512.6666666666666], [2837.0, 637.0], [2833.0, 539.0], [2829.0, 539.0], [2817.0, 568.5], [2873.0, 560.0], [2849.0, 563.5], [2893.0, 533.6666666666666], [2889.0, 532.5], [2897.0, 686.75], [2901.0, 688.0], [2905.0, 392.0], [2909.0, 438.5833333333334], [2953.0, 310.625], [2949.0, 448.25], [2945.0, 544.75], [3005.0, 530.3333333333334], [3001.0, 531.0], [2997.0, 553.5], [2993.0, 363.75], [2989.0, 620.0], [2985.0, 322.5], [2981.0, 461.6], [2957.0, 456.3333333333333], [2961.0, 425.3333333333333], [3061.0, 550.7142857142857], [3053.0, 551.375], [3049.0, 526.0], [3045.0, 467.6666666666667], [3041.0, 548.0], [2973.0, 532.5], [2969.0, 586.8], [2965.0, 558.2], [3021.0, 528.6666666666666], [3025.0, 530.6666666666666], [3029.0, 563.0], [3033.0, 547.2], [3069.0, 523.25], [3097.0, 519.0], [3173.0, 531.5], [3169.0, 461.90000000000003], [3101.0, 542.3333333333334], [3093.0, 550.6666666666666], [3089.0, 545.2], [3085.0, 559.0], [3081.0, 585.0], [3077.0, 541.75], [3073.0, 562.0], [3133.0, 497.2142857142857], [3125.0, 514.0], [3113.0, 567.3], [3109.0, 498.5], [3177.0, 510.0], [3181.0, 439.1666666666667], [3185.0, 425.8333333333333], [3137.0, 529.0], [3145.0, 561.0], [3153.0, 512.0], [3161.0, 440.83333333333337], [3165.0, 498.85714285714283], [3197.0, 516.3097345132743], [3193.0, 453.5], [3189.0, 529.5199999999999], [1053.0, 800.5], [1087.0, 696.0], [1085.0, 823.0], [1039.0, 836.5], [1037.0, 928.0], [1069.0, 687.6666666666666], [1065.0, 732.2222222222222], [1051.0, 872.5], [1049.0, 885.0], [1047.0, 753.5], [1045.0, 783.0], [1043.0, 900.0], [1139.0, 909.0], [1123.0, 833.0], [1101.0, 911.0], [1097.0, 831.5], [1089.0, 762.0], [1185.0, 694.0], [1197.0, 842.0], [1205.0, 905.6], [1167.0, 1038.0], [1163.0, 909.0], [1161.0, 840.0], [1155.0, 838.0], [1199.0, 886.0], [1207.0, 919.0], [1193.0, 881.5], [1209.0, 917.125], [1211.0, 808.5], [1213.0, 889.625], [1215.0, 970.0], [1183.0, 694.0], [1177.0, 837.0], [1223.0, 922.0], [1279.0, 821.0], [1271.0, 820.0], [1255.0, 822.0], [1237.0, 954.0], [1233.0, 866.3188405797102], [1235.0, 861.8000000000001], [1219.0, 831.1666666666666], [1221.0, 838.0], [1225.0, 948.0], [1229.0, 839.0], [1317.0, 948.0], [1341.0, 821.0], [1331.0, 953.0], [1295.0, 952.0], [1293.0, 827.0], [1291.0, 886.5], [1287.0, 819.0], [1283.0, 853.25], [1327.0, 885.0], [1325.0, 951.0], [1321.0, 822.5], [1315.0, 822.0], [1313.0, 822.0], [1311.0, 823.0], [1309.0, 822.6666666666666], [1307.0, 822.0], [1305.0, 821.0], [1303.0, 820.0], [1301.0, 953.0], [1297.0, 821.0], [1407.0, 968.0], [1401.0, 820.0], [1359.0, 820.0], [1357.0, 885.0], [1355.0, 928.5], [1351.0, 950.0], [1347.0, 886.0], [1391.0, 1079.3333333333333], [1383.0, 821.0], [1381.0, 820.0], [1379.0, 821.0], [1373.0, 819.0], [1371.0, 1019.5], [1367.0, 885.5], [1365.0, 821.0], [1363.0, 952.5], [1465.0, 723.0], [1469.0, 719.5], [1471.0, 721.0], [1467.0, 720.0], [1463.0, 720.0], [1461.0, 721.0], [1459.0, 722.5], [1423.0, 818.5], [1421.0, 819.0], [1419.0, 819.0], [1413.0, 972.0], [1435.0, 819.0], [1427.0, 969.5], [1447.0, 1022.0], [1445.0, 816.0], [1521.0, 695.0], [1529.0, 751.0], [1531.0, 720.0], [1505.0, 704.0], [1509.0, 699.5], [1507.0, 699.0], [1527.0, 753.5], [1525.0, 753.0], [1523.0, 693.0], [1503.0, 702.5], [1473.0, 717.6666666666666], [1479.0, 716.0], [1477.0, 715.5], [1483.0, 711.5], [1481.0, 709.0], [1501.0, 703.0], [1495.0, 706.0], [1493.0, 706.0], [1491.0, 706.6666666666666], [1489.0, 707.0], [1517.0, 757.0], [1515.0, 909.0], [1513.0, 761.0], [1511.0, 700.0], [1585.0, 673.0], [1573.0, 703.5], [1595.0, 698.5], [1593.0, 670.0], [1587.0, 673.5], [1563.0, 704.5], [1539.0, 689.0], [1537.0, 689.0], [1543.0, 683.0], [1541.0, 686.0], [1547.0, 680.0], [1545.0, 681.0], [1551.0, 839.0], [1549.0, 682.0], [1561.0, 734.0], [1559.0, 677.0], [1555.0, 678.0], [1553.0, 679.0], [1583.0, 701.0], [1581.0, 674.0], [1579.0, 674.0], [1571.0, 703.5], [1651.0, 660.0], [1659.0, 659.0], [1663.0, 694.3333333333334], [1635.0, 662.0], [1633.0, 663.0], [1639.0, 770.0], [1637.0, 769.0], [1643.0, 746.0], [1641.0, 691.0], [1657.0, 712.0], [1655.0, 658.5], [1653.0, 658.0], [1649.0, 715.0], [1615.0, 666.0], [1609.0, 686.3333333333334], [1605.0, 725.0], [1631.0, 664.5], [1629.0, 663.0], [1627.0, 665.0], [1625.0, 664.0], [1621.0, 723.5], [1619.0, 667.0], [1617.0, 667.5], [1647.0, 661.0], [1645.0, 662.5], [1715.0, 643.0], [1725.0, 638.0], [1727.0, 742.0], [1699.0, 648.0], [1703.0, 647.5], [1701.0, 702.0], [1723.0, 744.0], [1721.0, 791.0], [1717.0, 694.0], [1713.0, 644.0], [1677.0, 657.0], [1673.0, 737.5], [1671.0, 654.5], [1669.0, 713.0], [1665.0, 711.0], [1695.0, 648.0], [1691.0, 650.0], [1689.0, 708.0], [1687.0, 761.0], [1681.0, 741.0], [1707.0, 647.5], [1705.0, 647.0], [1779.0, 624.0], [1787.0, 622.0], [1791.0, 621.0], [1769.0, 624.0], [1767.0, 624.0], [1785.0, 674.0], [1783.0, 725.0], [1781.0, 675.0], [1777.0, 650.5], [1741.0, 630.0], [1739.0, 629.0], [1733.0, 681.0], [1731.0, 631.0], [1729.0, 713.0], [1759.0, 704.0], [1757.0, 677.5], [1755.0, 628.0], [1753.0, 731.0], [1751.0, 677.0], [1747.0, 731.0], [1775.0, 770.3333333333334], [1771.0, 674.0], [1847.0, 669.3333333333334], [1855.0, 617.0], [1843.0, 668.5], [1807.0, 620.5], [1805.0, 620.0], [1803.0, 656.0], [1799.0, 673.0], [1797.0, 621.5], [1795.0, 724.0], [1839.0, 618.0], [1831.0, 671.0], [1829.0, 670.0], [1823.0, 619.0], [1811.0, 670.0], [1809.0, 620.0], [1895.0, 630.6666666666666], [1915.0, 765.0], [1909.0, 646.0], [1905.0, 646.0], [1871.0, 667.5], [1869.0, 615.0], [1867.0, 667.0], [1859.0, 668.5], [1857.0, 616.0], [1901.0, 763.0], [1899.0, 612.0], [1897.0, 662.0], [1891.0, 614.0], [1887.0, 640.0], [1885.0, 639.5], [1877.0, 615.0], [1875.0, 486.0], [1971.0, 688.6666666666666], [1979.0, 608.0], [1981.0, 751.0], [1955.0, 609.0], [1977.0, 753.0], [1975.0, 608.0], [1973.0, 608.0], [1951.0, 635.0], [1923.0, 711.0], [1921.0, 608.0], [1931.0, 608.0], [1927.0, 611.0], [1935.0, 625.6666666666666], [1933.0, 662.0], [1949.0, 795.0], [1947.0, 608.0], [1943.0, 660.0], [1941.0, 606.0], [1939.0, 633.5], [1937.0, 635.5], [1967.0, 608.0], [1965.0, 658.0], [1963.0, 608.0], [1959.0, 625.3333333333334], [2047.0, 660.5], [2041.0, 607.6666666666666], [1995.0, 655.0], [1993.0, 608.0], [1991.0, 608.0], [1985.0, 608.0], [2029.0, 635.0], [2025.0, 609.0], [2023.0, 607.0], [2021.0, 606.0], [2015.0, 338.0], [2011.0, 658.0], [2007.0, 702.0], [2001.0, 609.0], [2126.0, 654.0], [2166.0, 656.5], [2158.0, 603.0], [2154.0, 630.5], [2150.0, 655.0], [2106.0, 604.0], [2062.0, 606.0], [2058.0, 606.0], [2074.0, 682.5], [2066.0, 606.0], [2102.0, 604.0], [2098.0, 603.0], [2086.0, 604.5], [2082.0, 655.0], [2142.0, 654.0], [2138.0, 654.0], [2134.0, 669.6666666666666], [2118.0, 654.0], [2114.0, 604.0], [2286.0, 641.0], [2250.0, 647.0], [2290.0, 16.4], [2294.0, 115.83333333333333], [2302.0, 92.83333333333334], [2266.0, 634.0], [2262.0, 598.3333333333334], [2258.0, 622.0], [2246.0, 601.6666666666666], [2242.0, 601.0], [2282.0, 641.0], [2278.0, 600.0], [2234.0, 616.0], [2206.0, 602.5], [2202.0, 652.0], [2198.0, 603.0], [2194.0, 687.75], [2190.0, 657.0], [2186.0, 703.0], [2178.0, 603.0], [2210.0, 601.5], [2318.0, 4.333333333333333], [2306.0, 469.25], [2358.0, 590.0], [2350.0, 590.5], [2346.0, 634.5], [2342.0, 25.666666666666664], [2338.0, 48.0], [2310.0, 110.99999999999999], [2314.0, 172.0], [2326.0, 168.0769230769231], [2330.0, 591.5], [2334.0, 733.0], [2406.0, 601.25], [2414.0, 604.3333333333334], [2422.0, 600.5], [2374.0, 589.0], [2370.0, 673.0], [2378.0, 613.5], [2390.0, 590.0], [2458.0, 609.3333333333334], [2482.0, 627.3333333333334], [2478.0, 607.5], [2494.0, 471.75], [2438.0, 608.0], [2446.0, 586.0], [2450.0, 293.0], [2454.0, 585.0], [2462.0, 583.5], [2554.0, 572.0], [2558.0, 574.0], [2546.0, 398.5], [2534.0, 606.0], [2538.0, 668.0], [2530.0, 405.25], [2498.0, 432.0], [2502.0, 578.0], [2506.0, 624.5], [2510.0, 447.6666666666667], [2514.0, 68.4], [2518.0, 126.0], [2522.0, 132.5], [2526.0, 367.5], [2574.0, 568.0], [2618.0, 58.25], [2622.0, 231.71428571428572], [2610.0, 122.5], [2606.0, 63.0], [2602.0, 38.0], [2598.0, 68.0], [2594.0, 438.3333333333333], [2566.0, 204.0], [2570.0, 660.3333333333334], [2578.0, 600.3333333333334], [2582.0, 634.5], [2586.0, 355.0], [2590.0, 426.0], [2686.0, 561.0], [2682.0, 556.5], [2674.0, 207.34285714285716], [2670.0, 165.0], [2666.0, 165.28571428571428], [2662.0, 596.0], [2626.0, 294.57142857142856], [2630.0, 217.92307692307693], [2634.0, 365.4], [2638.0, 227.7142857142857], [2642.0, 431.3333333333333], [2646.0, 93.96644295302008], [2654.0, 348.83333333333337], [2694.0, 599.0], [2690.0, 269.0], [2750.0, 550.0], [2742.0, 593.0], [2738.0, 501.25], [2734.0, 179.0], [2730.0, 773.0], [2726.0, 582.8], [2722.0, 441.3333333333333], [2702.0, 579.3333333333334], [2706.0, 556.0], [2714.0, 405.0], [2718.0, 387.0], [2754.0, 549.0], [2814.0, 537.0], [2810.0, 576.3333333333334], [2806.0, 535.0], [2802.0, 537.0], [2786.0, 363.25], [2758.0, 1.0], [2762.0, 460.50000000000006], [2766.0, 464.85714285714283], [2770.0, 550.4285714285714], [2774.0, 665.0], [2778.0, 546.0], [2914.0, 452.5], [2922.0, 481.75], [2930.0, 331.0], [2890.0, 387.2857142857143], [2882.0, 582.0], [2942.0, 531.5], [2938.0, 471.66666666666663], [2934.0, 291.5], [2926.0, 280.33333333333337], [2918.0, 375.2857142857143], [2878.0, 632.0], [2818.0, 539.5], [2826.0, 556.6666666666666], [2830.0, 435.0], [2834.0, 609.0], [2846.0, 588.6666666666666], [2838.0, 500.8333333333333], [2874.0, 560.0], [2866.0, 568.0], [2862.0, 536.3333333333334], [2854.0, 568.6666666666666], [2850.0, 538.5], [2886.0, 195.33333333333334], [2894.0, 1.0], [2898.0, 581.0], [2902.0, 606.0], [2906.0, 349.6], [2910.0, 497.5555555555556], [2962.0, 334.44444444444446], [3054.0, 525.0], [2954.0, 338.7777777777777], [2946.0, 293.90909090909093], [3002.0, 438.33333333333337], [2998.0, 560.6666666666666], [2994.0, 586.0], [2990.0, 576.0], [2986.0, 532.0], [2982.0, 578.0], [2978.0, 618.6666666666666], [2950.0, 200.0], [2958.0, 209.33333333333334], [2966.0, 584.5], [2974.0, 573.0], [2970.0, 531.0], [3042.0, 412.7142857142857], [3046.0, 537.25], [3050.0, 548.0], [3058.0, 523.5], [3062.0, 255.0], [3066.0, 568.8], [3070.0, 562.0], [3010.0, 583.0], [3014.0, 553.25], [3018.0, 578.5], [3022.0, 596.8333333333334], [3030.0, 531.0], [3026.0, 539.75], [3038.0, 563.5], [3034.0, 551.5], [3094.0, 380.3333333333333], [3146.0, 511.0], [3174.0, 555.1999999999999], [3102.0, 541.0], [3086.0, 541.0], [3082.0, 521.5], [3078.0, 498.6666666666667], [3074.0, 521.5], [3134.0, 537.0], [3122.0, 526.4], [3118.0, 508.71428571428567], [3114.0, 608.0], [3110.0, 391.6666666666667], [3106.0, 518.0], [3178.0, 396.66666666666663], [3182.0, 542.75], [3186.0, 444.0], [3142.0, 619.6666666666666], [3150.0, 526.3333333333334], [3154.0, 413.3333333333333], [3158.0, 467.2857142857143], [3198.0, 478.4090909090908], [3194.0, 496.55000000000007], [3190.0, 548.1666666666667], [2171.0, 603.3333333333334], [2175.0, 655.6666666666666], [2163.0, 603.0], [2079.0, 604.5], [2071.0, 656.5], [2067.0, 607.0], [2063.0, 607.0], [2059.0, 606.0], [2131.0, 621.0], [2127.0, 620.6666666666666], [2123.0, 654.0], [2115.0, 604.0], [2107.0, 604.0], [2095.0, 604.0], [2091.0, 602.5], [2287.0, 254.0], [2303.0, 74.0], [2299.0, 27.42857142857143], [2243.0, 602.0], [2247.0, 599.0], [2259.0, 599.0], [2255.0, 669.0], [2271.0, 598.0], [2295.0, 639.0], [2291.0, 638.0], [2275.0, 597.3333333333334], [2203.0, 602.0], [2199.0, 602.0], [2187.0, 655.0], [2183.0, 621.6666666666666], [2179.0, 603.0], [2239.0, 625.0], [2231.0, 600.5], [2227.0, 679.0], [2223.0, 600.5], [2219.0, 635.6666666666666], [2215.0, 601.5], [2319.0, 671.5], [2327.0, 383.4], [2311.0, 3.5], [2307.0, 41.0], [2343.0, 246.0], [2339.0, 590.5], [2367.0, 635.0], [2363.0, 636.0], [2359.0, 637.0], [2355.0, 639.5], [2351.0, 639.0], [2315.0, 216.33333333333334], [2323.0, 592.0], [2331.0, 5.0], [2335.0, 3.0], [2431.0, 586.5], [2371.0, 590.0], [2375.0, 590.0], [2383.0, 589.0], [2391.0, 588.0], [2395.0, 451.0], [2427.0, 634.0], [2419.0, 587.5], [2415.0, 634.0], [2411.0, 635.0], [2407.0, 294.0], [2403.0, 615.6666666666666], [2539.0, 153.0], [2495.0, 96.0], [2487.0, 606.5], [2475.0, 632.5], [2471.0, 618.0], [2467.0, 630.5], [2483.0, 75.0], [2491.0, 615.25], [2559.0, 186.0], [2543.0, 620.5], [2547.0, 575.5], [2551.0, 572.5], [2535.0, 147.0], [2459.0, 622.0], [2455.0, 585.0], [2451.0, 628.0], [2447.0, 629.0], [2435.0, 586.3333333333334], [2531.0, 598.5], [2503.0, 86.0], [2507.0, 285.0], [2511.0, 100.0], [2519.0, 546.6666666666666], [2515.0, 580.0], [2523.0, 578.0], [2571.0, 208.0], [2583.0, 224.0], [2623.0, 63.0], [2619.0, 238.2727272727273], [2615.0, 57.14285714285714], [2611.0, 565.0], [2603.0, 96.88888888888889], [2599.0, 499.8333333333333], [2595.0, 197.14285714285717], [2563.0, 200.0], [2575.0, 402.25], [2579.0, 520.4], [2587.0, 343.5], [2591.0, 566.5], [2687.0, 256.14285714285717], [2683.0, 555.0], [2679.0, 567.25], [2671.0, 262.1666666666667], [2667.0, 254.42105263157896], [2663.0, 168.33333333333334], [2659.0, 374.0], [2627.0, 64.4], [2631.0, 560.0], [2635.0, 173.6], [2639.0, 77.0], [2643.0, 77.4], [2647.0, 370.75], [2651.0, 2.0], [2655.0, 142.45833333333331], [2699.0, 432.0], [2691.0, 162.75], [2751.0, 436.5], [2747.0, 309.25], [2739.0, 387.5], [2735.0, 267.89285714285717], [2731.0, 575.0], [2727.0, 554.0], [2723.0, 176.0], [2711.0, 568.6666666666666], [2707.0, 590.5], [2703.0, 322.0], [2695.0, 592.0], [2719.0, 364.875], [2799.0, 598.0], [2803.0, 270.5], [2807.0, 575.25], [2791.0, 545.0], [2787.0, 643.5], [2755.0, 532.0], [2759.0, 527.0], [2763.0, 334.75], [2767.0, 158.0], [2771.0, 547.0], [2779.0, 586.7142857142857], [2783.0, 461.6666666666667], [2927.0, 188.0], [2943.0, 288.375], [2935.0, 312.0], [2931.0, 533.5], [2923.0, 300.1428571428571], [2919.0, 488.3333333333333], [2847.0, 571.0], [2843.0, 430.6666666666667], [2839.0, 539.0], [2835.0, 538.5], [2831.0, 609.5], [2823.0, 594.0], [2879.0, 534.0], [2875.0, 584.0], [2871.0, 632.0], [2859.0, 634.0], [2851.0, 427.3333333333333], [2915.0, 558.5], [2883.0, 386.8], [2887.0, 368.57142857142856], [2895.0, 460.0], [2899.0, 649.3], [2903.0, 558.5], [2907.0, 1.0], [2911.0, 582.0], [3051.0, 263.5], [2963.0, 464.75], [2955.0, 206.3846153846154], [2951.0, 303.66666666666663], [3007.0, 546.6666666666666], [3003.0, 447.0], [2987.0, 566.75], [2983.0, 586.25], [2959.0, 359.8181818181818], [3059.0, 534.5], [3043.0, 527.5], [3063.0, 524.0], [3071.0, 557.0], [3015.0, 529.0], [3011.0, 530.0], [3019.0, 530.0], [3023.0, 579.8333333333333], [3027.0, 557.2857142857143], [3031.0, 530.5], [3039.0, 551.5], [3035.0, 568.7142857142858], [3099.0, 543.4444444444445], [3187.0, 385.0], [3175.0, 421.3349753694582], [3171.0, 491.1666666666667], [3095.0, 524.3333333333334], [3091.0, 569.25], [3087.0, 541.5], [3083.0, 497.55555555555554], [3079.0, 551.6666666666666], [3075.0, 276.5], [3135.0, 419.18181818181813], [3131.0, 521.0], [3123.0, 594.0], [3119.0, 577.9], [3115.0, 541.625], [3111.0, 516.0], [3107.0, 517.5], [3179.0, 436.66666666666663], [3183.0, 535.0], [3199.0, 477.40000000000003], [3139.0, 445.83333333333337], [3143.0, 536.5], [3147.0, 562.75], [3151.0, 557.3333333333334], [3155.0, 471.10714285714283], [3163.0, 494.0], [3167.0, 523.0], [3195.0, 449.64583333333326], [3191.0, 520.8124999999999]], "isOverall": false, "label": "HTTP请求长链接转短链接", "isController": false}, {"data": [[3198.2283496804953, 605.8144931063596]], "isOverall": false, "label": "HTTP请求长链接转短链接-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 402999.0, "minX": 1.6486458E12, "maxY": 2056720.5333333334, "series": [{"data": [[1.64864616E12, 1982304.6833333333], [1.64864586E12, 1779683.9833333334], [1.64864634E12, 1743897.9833333334], [1.64864604E12, 1927990.6666666667], [1.64864622E12, 1773454.9833333334], [1.64864592E12, 1653707.5333333334], [1.6486464E12, 1477417.2], [1.6486461E12, 1879442.9333333333], [1.6486458E12, 554837.1], [1.64864628E12, 2056720.5333333334], [1.64864598E12, 1511208.75]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.64864616E12, 1440965.65], [1.64864586E12, 1293796.45], [1.64864634E12, 1267471.5], [1.64864604E12, 1400763.2666666666], [1.64864622E12, 1288949.8333333333], [1.64864592E12, 1201178.6833333333], [1.6486464E12, 1073785.8333333333], [1.6486461E12, 1365409.7], [1.6486458E12, 402999.0], [1.64864628E12, 1494209.4166666667], [1.64864598E12, 1097667.65]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6486464E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 414.39613954125093, "minX": 1.6486458E12, "maxY": 729.7213296763352, "series": [{"data": [[1.64864616E12, 560.4830219037008], [1.64864586E12, 621.3888876125446], [1.64864634E12, 638.7439763879821], [1.64864604E12, 577.9875196663023], [1.64864622E12, 629.3503719370451], [1.64864592E12, 671.7449661345213], [1.6486464E12, 583.4282748393451], [1.6486461E12, 598.68668988682], [1.6486458E12, 414.39613954125093], [1.64864628E12, 544.1018028566034], [1.64864598E12, 729.7213296763352]], "isOverall": false, "label": "HTTP请求长链接转短链接", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6486464E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 414.3346503566499, "minX": 1.6486458E12, "maxY": 729.6004820134681, "series": [{"data": [[1.64864616E12, 560.3969040722403], [1.64864586E12, 621.2986704388402], [1.64864634E12, 638.6553173954549], [1.64864604E12, 577.8982020680176], [1.64864622E12, 629.2595026783517], [1.64864592E12, 671.6446423268891], [1.6486464E12, 583.3375580820659], [1.6486461E12, 598.6005348923969], [1.6486458E12, 414.3346503566499], [1.64864628E12, 544.0191681396789], [1.64864598E12, 729.6004820134681]], "isOverall": false, "label": "HTTP请求长链接转短链接", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6486464E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.004282249035949761, "minX": 1.6486458E12, "maxY": 10.85267250371409, "series": [{"data": [[1.64864616E12, 0.004299408573474381], [1.64864586E12, 0.0043520071417553026], [1.64864634E12, 0.004455730806855972], [1.64864604E12, 0.004689598307258111], [1.64864622E12, 0.005079954932695539], [1.64864592E12, 0.0058575246390748], [1.6486464E12, 0.005623331685615359], [1.6486461E12, 0.004282249035949761], [1.6486458E12, 10.85267250371409], [1.64864628E12, 0.005189180586894652], [1.64864598E12, 0.005694412744343229]], "isOverall": false, "label": "HTTP请求长链接转短链接", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6486464E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6486458E12, "maxY": 2592.0, "series": [{"data": [[1.64864616E12, 1570.0], [1.64864586E12, 1618.0], [1.64864634E12, 1521.0], [1.64864604E12, 1830.0], [1.64864622E12, 1499.0], [1.64864592E12, 1485.0], [1.6486464E12, 1307.0], [1.6486461E12, 1511.0], [1.6486458E12, 2592.0], [1.64864628E12, 1503.0], [1.64864598E12, 1598.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.64864616E12, 764.0], [1.64864586E12, 1011.0], [1.64864634E12, 1072.0], [1.64864604E12, 1037.0], [1.64864622E12, 1041.0], [1.64864592E12, 1092.0], [1.6486464E12, 750.0], [1.6486461E12, 648.0], [1.6486458E12, 342.0], [1.64864628E12, 621.0], [1.64864598E12, 1065.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.64864616E12, 851.0], [1.64864586E12, 1147.0], [1.64864634E12, 1242.0], [1.64864604E12, 1201.0], [1.64864622E12, 1183.9900000000016], [1.64864592E12, 1253.9900000000016], [1.6486464E12, 943.0], [1.6486461E12, 725.0], [1.6486458E12, 389.0], [1.64864628E12, 691.0], [1.64864598E12, 1222.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.64864616E12, 796.0], [1.64864586E12, 1060.0], [1.64864634E12, 1133.0], [1.64864604E12, 1098.0], [1.64864622E12, 1095.9500000000007], [1.64864592E12, 1136.0], [1.6486464E12, 810.0], [1.6486461E12, 679.0], [1.6486458E12, 359.0], [1.64864628E12, 646.0], [1.64864598E12, 1114.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.64864616E12, 0.0], [1.64864586E12, 0.0], [1.64864634E12, 0.0], [1.64864604E12, 0.0], [1.64864622E12, 0.0], [1.64864592E12, 0.0], [1.6486464E12, 0.0], [1.6486461E12, 0.0], [1.6486458E12, 0.0], [1.64864628E12, 0.0], [1.64864598E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.64864616E12, 593.0], [1.64864586E12, 840.0], [1.64864634E12, 857.0], [1.64864604E12, 813.0], [1.64864622E12, 873.0], [1.64864592E12, 924.0], [1.6486464E12, 592.0], [1.6486461E12, 545.0], [1.6486458E12, 285.0], [1.64864628E12, 539.0], [1.64864598E12, 872.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6486464E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 234.0, "maxY": 1219.0, "series": [{"data": [[10393.0, 317.0], [234.0, 16.5], [1452.0, 824.0], [2156.0, 666.0], [2464.0, 673.0], [3056.0, 977.0], [3276.0, 1062.0], [3380.0, 1131.0], [3438.0, 955.0], [3398.0, 928.0], [3518.0, 919.0], [3496.0, 788.0], [3522.0, 989.0], [3608.0, 975.0], [3838.0, 806.0], [3834.0, 935.0], [3806.0, 848.0], [3778.0, 913.0], [3746.0, 823.0], [3774.0, 892.0], [3836.0, 878.0], [3734.0, 994.0], [3844.0, 804.0], [3966.0, 694.0], [3886.0, 792.0], [3872.0, 797.0], [3876.0, 1028.0], [3920.0, 934.0], [3902.0, 949.0], [3900.0, 927.0], [3896.0, 747.0], [3856.0, 882.0], [3866.0, 837.0], [4080.0, 763.0], [3978.0, 839.0], [4028.0, 967.0], [4060.0, 1020.0], [3980.0, 909.0], [4010.0, 847.0], [4026.0, 782.0], [4084.0, 830.0], [4056.0, 929.0], [4052.0, 831.0], [4300.0, 963.0], [4116.0, 806.0], [4104.0, 778.0], [4188.0, 856.0], [4196.0, 740.0], [4256.0, 918.0], [4276.0, 820.0], [4304.0, 780.0], [4252.0, 776.0], [4156.0, 805.0], [4296.0, 803.0], [4148.0, 866.0], [4128.0, 909.0], [4480.0, 815.0], [4364.0, 715.0], [4580.0, 769.0], [4564.0, 824.0], [4472.0, 845.0], [4532.0, 785.0], [4512.0, 864.0], [4536.0, 636.0], [4508.0, 906.0], [4492.0, 825.0], [4500.0, 769.0], [4396.0, 432.0], [4560.0, 743.0], [4636.0, 696.0], [4804.0, 675.0], [4840.0, 714.5], [4788.0, 722.0], [4800.0, 598.0], [4696.0, 999.0], [4724.0, 422.0], [4732.0, 808.0], [4612.0, 787.0], [4632.0, 849.0], [4620.0, 796.0], [4912.0, 743.0], [5084.0, 720.0], [5072.0, 565.0], [4896.0, 716.0], [4904.0, 682.0], [5116.0, 729.0], [4952.0, 671.0], [4968.0, 682.0], [4876.0, 939.0], [5364.0, 608.0], [5168.0, 664.0], [5172.0, 718.0], [5240.0, 580.0], [5620.0, 542.0], [5536.0, 740.0], [5552.0, 620.0], [5592.0, 590.0], [5604.0, 608.0], [5556.0, 599.0], [5472.0, 674.0], [5572.0, 643.0], [5400.0, 718.0], [5468.0, 748.0], [5564.0, 677.0], [5644.0, 547.0], [5636.0, 686.0], [5756.0, 520.0], [5736.0, 621.0], [5780.0, 577.0], [5720.0, 755.0], [5724.0, 574.0], [5836.0, 587.0], [5692.0, 676.0], [5764.0, 650.0], [5880.0, 649.0], [5864.0, 621.0], [5844.0, 640.0], [5916.0, 578.0], [6108.0, 537.0], [5908.0, 500.0], [6028.0, 592.0], [5960.0, 560.0], [5912.0, 589.0], [5980.0, 546.0], [6080.0, 541.0], [6088.0, 632.0], [6152.0, 507.0], [6268.0, 638.0], [6272.0, 536.0], [6252.0, 535.0], [6348.0, 505.0], [6148.0, 515.0], [6160.0, 557.0], [6188.0, 523.0], [6232.0, 558.0], [6368.0, 519.0], [6508.0, 473.0], [6516.0, 538.0], [6564.0, 534.0], [6520.0, 528.0], [6732.0, 512.0], [6828.0, 519.0], [6776.0, 509.0], [6704.0, 525.0], [6872.0, 506.0], [6904.0, 484.0], [6808.0, 530.0], [7068.0, 521.0], [7052.0, 507.0], [7104.0, 490.0], [6912.0, 483.0], [7064.0, 502.0], [6960.0, 475.0], [7012.0, 479.0], [7680.0, 394.0], [9955.0, 316.0], [4157.0, 700.0], [4253.0, 659.0], [4265.0, 846.0], [4185.0, 893.0], [4181.0, 819.0], [4281.0, 877.0], [4129.0, 814.0], [4121.0, 875.0], [4229.0, 824.0], [4349.0, 778.0], [4233.0, 842.0], [4309.0, 798.0], [4313.0, 765.0], [4153.0, 742.0], [4601.0, 746.0], [4373.0, 873.0], [4469.0, 796.0], [4517.0, 787.0], [4445.0, 806.0], [4513.0, 749.0], [4509.0, 772.0], [4581.0, 803.0], [4589.0, 751.0], [4585.0, 739.0], [4385.0, 749.0], [4401.0, 878.0], [4545.0, 781.0], [4841.0, 711.0], [4805.0, 659.0], [4705.0, 713.0], [4781.0, 816.0], [4609.0, 766.0], [4797.0, 764.0], [4657.0, 707.0], [4825.0, 724.0], [5109.0, 652.0], [5085.0, 701.0], [5013.0, 760.0], [5073.0, 883.0], [5069.0, 701.0], [5057.0, 706.0], [4865.0, 729.0], [5001.0, 662.0], [4997.0, 685.0], [4993.0, 681.0], [5033.0, 573.0], [5181.0, 769.0], [5133.0, 696.0], [5325.0, 549.0], [5321.0, 528.0], [5157.0, 684.0], [5309.0, 581.0], [5189.0, 671.0], [5209.0, 688.0], [5213.0, 596.5], [5233.0, 692.0], [5373.0, 649.0], [5365.0, 587.0], [5609.0, 591.0], [5561.0, 601.0], [5429.0, 665.0], [5497.0, 598.0], [5585.0, 590.0], [5437.0, 650.0], [5433.0, 632.0], [5453.0, 600.0], [5645.0, 632.0], [5865.0, 695.0], [5733.0, 648.0], [5669.0, 734.0], [5869.0, 585.0], [5797.0, 573.0], [5769.0, 582.0], [6033.0, 579.0], [6021.0, 607.0], [5917.0, 500.0], [6137.0, 711.0], [5937.0, 629.0], [6017.0, 577.0], [5945.0, 616.0], [6393.0, 476.5], [6361.0, 575.0], [6177.0, 553.0], [6337.0, 509.0], [6293.0, 555.0], [6297.0, 545.0], [6301.0, 614.0], [6285.0, 577.0], [6397.0, 559.0], [6145.0, 507.0], [6237.0, 499.0], [6233.0, 494.0], [6249.0, 497.0], [6253.0, 550.0], [6261.0, 537.0], [6633.0, 589.0], [6433.0, 535.0], [6645.0, 522.0], [6425.0, 518.0], [6445.0, 529.0], [6701.0, 483.0], [6789.0, 495.0], [6737.0, 497.0], [6817.0, 531.0], [6801.0, 449.0], [6793.0, 504.0], [6853.0, 545.0], [6841.0, 486.0], [6837.0, 485.0], [7029.0, 479.0], [7045.0, 509.0], [7065.0, 477.0], [6985.0, 475.0], [6933.0, 482.0], [7329.0, 476.0], [7621.0, 432.0], [2473.0, 250.0], [2637.0, 832.0], [2689.0, 1219.0], [3155.0, 915.0], [3273.0, 1096.0], [3317.0, 948.0], [3267.0, 997.0], [3247.0, 1024.0], [3429.0, 1019.0], [3437.0, 959.0], [3415.0, 844.5], [3555.0, 883.0], [3477.0, 979.0], [3511.0, 766.0], [3581.0, 921.0], [3583.0, 789.0], [3561.0, 877.0], [3497.0, 971.0], [3489.0, 912.0], [3661.0, 880.0], [3651.0, 915.0], [3637.0, 935.0], [3669.0, 822.0], [3659.0, 911.0], [3783.0, 1026.0], [3839.0, 923.0], [3831.0, 920.0], [3785.0, 986.0], [3729.0, 945.0], [3775.0, 931.0], [3901.0, 899.0], [3905.0, 974.0], [3931.0, 917.0], [3939.0, 987.0], [3967.0, 823.0], [3887.0, 910.0], [3959.0, 898.0], [3999.0, 904.0], [4065.0, 850.5], [3979.0, 847.0], [4035.0, 806.0], [4011.0, 897.0], [4003.0, 961.0], [4041.0, 846.0], [4095.0, 745.0], [3975.0, 870.0], [4037.0, 852.0], [4194.0, 836.0], [4210.0, 819.0], [4114.0, 778.0], [4250.0, 801.0], [4126.0, 916.0], [4146.0, 789.0], [4306.0, 843.5], [4598.0, 727.0], [4594.0, 723.0], [4394.0, 772.0], [4374.0, 798.0], [4446.0, 772.0], [4466.0, 787.0], [4418.0, 703.0], [4538.0, 870.0], [4526.0, 749.0], [4486.0, 697.0], [4502.0, 738.0], [4510.0, 767.0], [4514.0, 764.0], [4802.0, 334.0], [4846.0, 660.0], [4750.0, 692.0], [4770.0, 740.0], [4778.0, 736.0], [4786.0, 846.0], [4822.0, 631.0], [4638.0, 702.0], [4642.0, 740.0], [4682.0, 791.0], [4686.0, 818.0], [4610.0, 762.0], [4722.0, 758.0], [5098.0, 773.0], [5010.0, 767.0], [5070.0, 814.5], [5022.0, 590.0], [5114.0, 746.0], [5094.0, 653.0], [5074.0, 787.0], [4886.0, 777.0], [4910.0, 637.0], [5258.0, 663.0], [5262.0, 671.0], [5270.0, 649.0], [5282.0, 793.0], [5290.0, 578.0], [5250.0, 551.0], [5174.0, 591.0], [5146.0, 814.0], [5630.0, 613.0], [5546.0, 672.0], [5434.0, 634.0], [5394.0, 613.0], [5534.0, 674.0], [5530.0, 601.0], [5666.0, 581.5], [5682.0, 628.0], [5730.0, 679.0], [5806.0, 633.0], [5686.0, 582.0], [5846.0, 574.0], [5870.0, 592.0], [5998.0, 564.0], [6074.0, 577.0], [5966.0, 636.0], [5974.0, 537.0], [6030.0, 538.0], [5930.0, 548.0], [6014.0, 378.0], [5910.0, 540.0], [6146.0, 580.0], [6250.0, 504.0], [6378.0, 525.0], [6218.0, 537.0], [6226.0, 493.0], [6158.0, 623.0], [6390.0, 501.0], [6326.0, 604.0], [6190.0, 538.0], [6194.0, 543.0], [6258.0, 525.0], [6406.0, 491.0], [6642.0, 548.0], [6534.0, 525.0], [6434.0, 540.0], [6494.0, 527.0], [6542.0, 554.0], [6610.0, 514.0], [6514.0, 528.0], [6890.0, 490.0], [6678.0, 483.0], [6770.0, 513.0], [6798.0, 493.0], [6694.0, 513.0], [6786.0, 510.0], [6758.0, 309.0], [6910.0, 498.0], [6806.0, 481.0], [6802.0, 501.0], [6950.0, 474.0], [6958.0, 503.0], [6978.0, 490.0], [6962.0, 494.0], [7010.0, 480.0], [7418.0, 435.0], [7470.0, 454.0], [7538.0, 444.0], [7506.0, 446.0], [7430.0, 480.0], [11124.0, 296.0], [11631.0, 277.0], [4131.0, 856.0], [4159.0, 884.0], [4299.0, 837.0], [4207.0, 876.0], [4195.0, 855.0], [4199.0, 819.0], [4191.0, 848.0], [4187.0, 729.0], [4183.0, 674.0], [4267.0, 898.0], [4279.0, 832.0], [4275.0, 787.0], [4119.0, 837.0], [4127.0, 876.0], [4211.0, 977.0], [4343.0, 970.0], [4331.0, 773.0], [4323.0, 762.0], [4551.0, 773.0], [4355.0, 774.0], [4375.0, 741.0], [4451.0, 976.0], [4519.0, 771.0], [4527.0, 758.0], [4443.0, 813.0], [4439.0, 794.0], [4571.0, 890.0], [4563.0, 638.0], [4663.0, 752.0], [4815.0, 761.0], [4851.0, 689.0], [4847.0, 763.0], [4839.0, 736.0], [4799.0, 714.0], [4791.0, 954.0], [4619.0, 702.0], [4623.0, 610.0], [4655.0, 683.0], [4695.0, 715.0], [4691.0, 735.0], [4723.0, 703.0], [4711.0, 716.0], [4731.0, 785.0], [4863.0, 755.0], [4747.0, 773.0], [4759.0, 714.0], [4615.0, 749.0], [4899.0, 737.0], [5019.0, 731.0], [4935.0, 686.0], [4943.0, 603.0], [4895.0, 805.0], [4963.0, 760.0], [5087.0, 698.0], [5011.0, 800.0], [5007.0, 661.0], [5147.0, 684.0], [5131.0, 620.0], [5167.0, 695.0], [5223.0, 742.0], [5235.0, 670.0], [5219.0, 679.0], [5307.0, 660.0], [5435.0, 497.0], [5379.0, 621.0], [5531.0, 525.0], [5611.0, 645.0], [5511.0, 573.0], [5491.0, 658.0], [5595.0, 544.0], [5759.0, 577.0], [5751.0, 650.0], [5747.0, 615.0], [5739.0, 700.0], [5723.0, 687.0], [5643.0, 760.0], [5695.0, 701.5], [5847.0, 599.0], [5879.0, 614.0], [5675.0, 546.0], [5683.0, 553.0], [5687.0, 607.0], [5883.0, 703.0], [5779.0, 524.0], [5811.0, 578.0], [6119.0, 546.0], [6143.0, 558.0], [5983.0, 562.0], [5955.0, 585.0], [6067.0, 533.0], [5931.0, 568.0], [5915.0, 572.0], [6159.0, 622.0], [6259.0, 562.0], [6175.0, 565.0], [6227.0, 522.0], [6223.0, 545.0], [6315.0, 549.0], [6163.0, 477.0], [6335.0, 520.0], [6319.0, 522.0], [6531.0, 495.0], [6503.0, 254.0], [6539.0, 510.0], [6511.0, 490.0], [6459.0, 470.0], [6711.0, 522.0], [6695.0, 503.0], [6907.0, 484.0], [6815.0, 500.0], [6903.0, 492.0], [6987.0, 435.0], [7011.0, 451.0], [6955.0, 503.0], [7335.0, 397.0], [7203.0, 472.5], [7559.0, 458.0], [9174.0, 379.0], [10190.0, 315.0], [10614.0, 319.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[10393.0, 331.0], [3317.0, 1112.0], [3380.0, 1196.0], [3438.0, 998.0], [3415.0, 1060.0], [3477.0, 914.0], [3581.0, 957.0], [3496.0, 940.0], [3518.0, 17.0], [3651.0, 1022.0], [3637.0, 811.0], [3608.0, 941.0], [3734.0, 981.0], [3806.0, 741.0], [3785.0, 998.0], [3729.0, 1031.0], [3775.0, 852.0], [3886.0, 0.0], [3902.0, 898.0], [3905.0, 925.0], [3931.0, 951.0], [3887.0, 906.0], [3959.0, 960.0], [3980.0, 1001.0], [3978.0, 827.0], [4065.0, 17.0], [4035.0, 878.0], [4011.0, 918.0], [4041.0, 803.0], [3979.0, 19.0], [4010.0, 842.0], [4003.0, 916.0], [4052.0, 866.0], [4126.0, 840.0], [4256.0, 17.0], [4210.0, 815.0], [4300.0, 974.0], [4188.0, 981.0], [4194.0, 874.0], [4276.0, 744.0], [4128.0, 921.0], [4146.0, 788.0], [4492.0, 843.0], [4446.0, 733.0], [4564.0, 1.0], [4466.0, 791.0], [4418.0, 702.0], [4538.0, 1021.0], [4526.0, 804.0], [4598.0, 91.0], [4480.0, 805.0], [4502.0, 112.0], [4486.0, 685.0], [4804.0, 640.0], [4620.0, 902.0], [4840.0, 726.0], [4696.0, 880.0], [4638.0, 703.0], [4610.0, 771.5], [4778.0, 705.0], [4788.0, 723.0], [4722.0, 769.0], [4770.0, 643.0], [4896.0, 745.0], [5084.0, 791.0], [4952.0, 754.0], [4968.0, 728.0], [5116.0, 768.0], [5094.0, 662.0], [4876.0, 565.0], [4910.0, 597.0], [5072.0, 614.0], [5290.0, 549.0], [5250.0, 485.0], [5168.0, 704.0], [5174.0, 572.0], [5630.0, 598.0], [5592.0, 546.0], [5556.0, 579.0], [5394.0, 18.0], [5620.0, 582.0], [5434.0, 593.0], [5536.0, 845.0], [5534.0, 724.0], [5530.0, 482.0], [5552.0, 771.0], [5604.0, 646.0], [5572.0, 697.0], [5682.0, 602.0], [5686.0, 501.0], [5692.0, 723.0], [5724.0, 664.0], [5730.0, 513.0], [5836.0, 514.0], [5846.0, 1.0], [5880.0, 665.0], [5864.0, 560.0], [5756.0, 596.0], [5736.0, 685.0], [5644.0, 592.0], [5980.0, 519.0], [6074.0, 538.0], [5966.0, 517.0], [6108.0, 489.0], [5960.0, 563.0], [5974.0, 504.0], [5930.0, 523.0], [6088.0, 458.0], [6014.0, 715.0], [5916.0, 589.0], [6148.0, 532.0], [6348.0, 483.0], [6268.0, 794.0], [6218.0, 533.0], [6226.0, 485.0], [6390.0, 500.0], [6152.0, 473.0], [6190.0, 491.0], [6188.0, 527.0], [6258.0, 557.0], [6252.0, 555.0], [6406.0, 39.0], [6508.0, 480.0], [6534.0, 524.0], [6434.0, 551.0], [6542.0, 664.0], [6564.0, 570.0], [6514.0, 526.0], [6520.0, 547.0], [6890.0, 504.0], [6678.0, 429.0], [6732.0, 515.0], [6828.0, 481.0], [6806.0, 588.0], [6802.0, 539.0], [6872.0, 460.0], [6786.0, 482.0], [6904.0, 33.0], [6758.0, 563.0], [6910.0, 464.0], [6962.0, 539.0], [6950.0, 405.0], [7068.0, 738.0], [7064.0, 575.0], [6958.0, 488.0], [7052.0, 459.0], [7104.0, 656.0], [6978.0, 442.0], [7010.0, 493.0], [6912.0, 512.0], [7012.0, 1.0], [7470.0, 432.0], [7506.0, 439.0], [7680.0, 472.0], [11124.0, 285.0], [9955.0, 274.0], [11631.0, 310.0], [4229.0, 866.0], [4159.0, 945.5], [4253.0, 663.0], [4157.0, 1.0], [4119.0, 953.0], [4153.0, 753.0], [4267.0, 992.0], [4281.0, 22.0], [4275.0, 741.0], [4323.0, 763.0], [4313.0, 789.0], [4343.0, 1033.0], [4331.0, 707.0], [4187.0, 686.0], [4181.0, 1.0], [4183.0, 810.0], [4191.0, 782.0], [4581.0, 766.0], [4545.0, 774.0], [4439.0, 747.0], [4469.0, 845.0], [4601.0, 790.0], [4585.0, 656.0], [4571.0, 982.0], [4513.0, 422.5], [4519.0, 806.0], [4655.0, 695.0], [4799.0, 731.0], [4759.0, 724.0], [4705.0, 692.0], [4723.0, 697.0], [4841.0, 764.0], [4851.0, 633.0], [4731.0, 131.0], [4663.0, 92.0], [4657.0, 676.0], [4615.0, 747.0], [5109.0, 306.0], [4899.0, 605.0], [5001.0, 695.0], [5033.0, 571.0], [5013.0, 0.0], [5007.0, 360.5], [4963.0, 687.0], [4943.0, 721.0], [5087.0, 890.0], [5057.0, 689.0], [5133.0, 722.0], [5325.0, 505.0], [5309.0, 543.0], [5365.0, 668.0], [5307.0, 691.0], [5157.0, 721.0], [5223.0, 538.0], [5213.0, 732.0], [5219.0, 669.0], [5131.0, 662.0], [5233.0, 19.0], [5147.0, 651.0], [5437.0, 683.0], [5609.0, 618.0], [5585.0, 573.0], [5595.0, 575.0], [5531.0, 477.0], [5429.0, 683.0], [5497.0, 452.0], [5611.0, 509.0], [5435.0, 563.0], [5433.0, 865.0], [5669.0, 604.0], [5751.0, 587.0], [5747.0, 319.0], [5739.0, 666.0], [5675.0, 579.0], [5687.0, 643.0], [5723.0, 737.0], [5695.0, 815.0], [5865.0, 698.0], [5869.0, 514.0], [5883.0, 823.0], [5797.0, 555.0], [5779.0, 539.0], [5733.0, 639.0], [5643.0, 775.0], [6137.0, 592.0], [6021.0, 618.0], [6143.0, 333.0], [6033.0, 488.0], [5917.0, 477.0], [5915.0, 513.0], [6067.0, 528.0], [5931.0, 521.0], [6017.0, 590.0], [5945.0, 701.0], [6361.0, 642.0], [6293.0, 491.0], [6259.0, 569.0], [6261.0, 535.0], [6297.0, 547.0], [6301.0, 825.0], [6315.0, 505.0], [6319.0, 556.0], [6285.0, 628.0], [6393.0, 482.0], [6397.0, 550.0], [6145.0, 511.0], [6159.0, 844.0], [6163.0, 479.0], [6175.0, 574.5], [6177.0, 496.0], [6249.0, 515.0], [6227.0, 544.0], [6633.0, 429.0], [6503.0, 506.0], [6539.0, 1.0], [6511.0, 470.0], [6645.0, 526.0], [6425.0, 537.0], [6445.0, 497.5], [6853.0, 467.0], [6701.0, 470.0], [6737.0, 444.0], [6817.0, 541.0], [6815.0, 544.0], [6801.0, 392.0], [6711.0, 624.0], [6695.0, 469.0], [6907.0, 473.0], [6903.0, 464.0], [6837.0, 510.0], [7029.0, 419.0], [6955.0, 441.0], [7045.0, 452.0], [7011.0, 480.0], [7065.0, 479.5], [7329.0, 439.0], [7203.0, 480.0], [7621.0, 419.0], [7559.0, 429.0], [9174.0, 365.0], [10190.0, 298.0], [10614.0, 282.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 11631.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 234.0, "maxY": 1219.0, "series": [{"data": [[10393.0, 317.0], [234.0, 16.5], [1452.0, 823.0], [2156.0, 666.0], [2464.0, 673.0], [3056.0, 977.0], [3276.0, 1062.0], [3380.0, 1130.0], [3438.0, 954.0], [3398.0, 927.5], [3518.0, 919.0], [3496.0, 788.0], [3522.0, 989.0], [3608.0, 975.0], [3838.0, 806.0], [3834.0, 935.0], [3806.0, 847.0], [3778.0, 913.0], [3746.0, 823.0], [3774.0, 892.0], [3836.0, 877.0], [3734.0, 994.0], [3844.0, 804.0], [3966.0, 694.0], [3886.0, 792.0], [3872.0, 797.0], [3876.0, 1028.0], [3920.0, 934.0], [3902.0, 949.0], [3900.0, 926.0], [3896.0, 747.0], [3856.0, 882.0], [3866.0, 836.5], [4080.0, 763.0], [3978.0, 839.0], [4028.0, 967.0], [4060.0, 1019.5], [3980.0, 909.0], [4010.0, 847.0], [4026.0, 781.5], [4084.0, 830.0], [4056.0, 929.0], [4052.0, 831.0], [4300.0, 963.0], [4116.0, 806.0], [4104.0, 778.0], [4188.0, 856.0], [4196.0, 740.0], [4256.0, 918.0], [4276.0, 820.0], [4304.0, 780.0], [4252.0, 776.0], [4156.0, 805.0], [4296.0, 803.0], [4148.0, 866.0], [4128.0, 909.0], [4480.0, 815.0], [4364.0, 715.0], [4580.0, 768.5], [4564.0, 824.0], [4472.0, 845.0], [4532.0, 784.0], [4512.0, 864.0], [4536.0, 635.5], [4508.0, 906.0], [4492.0, 825.0], [4500.0, 769.0], [4396.0, 431.5], [4560.0, 743.0], [4636.0, 696.0], [4804.0, 675.0], [4840.0, 714.0], [4788.0, 722.0], [4800.0, 597.5], [4696.0, 999.0], [4724.0, 422.0], [4732.0, 808.0], [4612.0, 787.0], [4632.0, 849.0], [4620.0, 796.0], [4912.0, 743.0], [5084.0, 720.0], [5072.0, 565.0], [4896.0, 716.0], [4904.0, 682.0], [5116.0, 729.0], [4952.0, 671.0], [4968.0, 682.0], [4876.0, 939.0], [5364.0, 608.0], [5168.0, 663.0], [5172.0, 718.0], [5240.0, 580.0], [5620.0, 542.0], [5536.0, 740.0], [5552.0, 620.0], [5592.0, 590.0], [5604.0, 608.0], [5556.0, 599.0], [5472.0, 673.0], [5572.0, 643.0], [5400.0, 718.0], [5468.0, 748.0], [5564.0, 677.0], [5644.0, 547.0], [5636.0, 686.0], [5756.0, 520.0], [5736.0, 621.0], [5780.0, 577.0], [5720.0, 755.0], [5724.0, 574.0], [5836.0, 587.0], [5692.0, 676.0], [5764.0, 650.0], [5880.0, 649.0], [5864.0, 621.0], [5844.0, 640.0], [5916.0, 578.0], [6108.0, 537.0], [5908.0, 500.0], [6028.0, 592.0], [5960.0, 559.0], [5912.0, 589.0], [5980.0, 546.0], [6080.0, 541.0], [6088.0, 632.0], [6152.0, 507.0], [6268.0, 638.0], [6272.0, 536.0], [6252.0, 535.0], [6348.0, 505.0], [6148.0, 515.0], [6160.0, 557.0], [6188.0, 523.0], [6232.0, 558.0], [6368.0, 519.0], [6508.0, 473.0], [6516.0, 538.0], [6564.0, 533.0], [6520.0, 528.0], [6732.0, 512.0], [6828.0, 519.0], [6776.0, 509.0], [6704.0, 525.0], [6872.0, 505.0], [6904.0, 484.0], [6808.0, 530.0], [7068.0, 521.0], [7052.0, 507.0], [7104.0, 490.0], [6912.0, 483.0], [7064.0, 502.0], [6960.0, 475.0], [7012.0, 479.0], [7680.0, 393.0], [9955.0, 316.0], [4157.0, 700.0], [4253.0, 659.0], [4265.0, 846.0], [4185.0, 893.0], [4181.0, 818.0], [4281.0, 877.0], [4129.0, 814.0], [4121.0, 875.0], [4229.0, 824.0], [4349.0, 778.0], [4233.0, 842.0], [4309.0, 798.0], [4313.0, 764.0], [4153.0, 742.0], [4601.0, 746.0], [4373.0, 873.0], [4469.0, 796.0], [4517.0, 787.0], [4445.0, 806.0], [4513.0, 749.0], [4509.0, 772.0], [4581.0, 803.0], [4589.0, 751.0], [4585.0, 739.0], [4385.0, 749.0], [4401.0, 878.0], [4545.0, 781.0], [4841.0, 711.0], [4805.0, 659.0], [4705.0, 713.0], [4781.0, 816.0], [4609.0, 765.0], [4797.0, 764.0], [4657.0, 707.0], [4825.0, 724.0], [5109.0, 652.0], [5085.0, 701.0], [5013.0, 760.0], [5073.0, 883.0], [5069.0, 701.0], [5057.0, 706.0], [4865.0, 729.0], [5001.0, 662.0], [4997.0, 685.0], [4993.0, 681.0], [5033.0, 573.0], [5181.0, 769.0], [5133.0, 696.0], [5325.0, 549.0], [5321.0, 528.0], [5157.0, 684.0], [5309.0, 581.0], [5189.0, 671.0], [5209.0, 688.0], [5213.0, 596.5], [5233.0, 692.0], [5373.0, 649.0], [5365.0, 587.0], [5609.0, 590.0], [5561.0, 601.0], [5429.0, 665.0], [5497.0, 598.0], [5585.0, 590.0], [5437.0, 650.0], [5433.0, 632.0], [5453.0, 600.0], [5645.0, 632.0], [5865.0, 695.0], [5733.0, 647.5], [5669.0, 734.0], [5869.0, 585.0], [5797.0, 573.0], [5769.0, 582.0], [6033.0, 579.0], [6021.0, 607.0], [5917.0, 500.0], [6137.0, 711.0], [5937.0, 629.0], [6017.0, 577.0], [5945.0, 616.0], [6393.0, 476.0], [6361.0, 575.0], [6177.0, 553.0], [6337.0, 509.0], [6293.0, 555.0], [6297.0, 545.0], [6301.0, 614.0], [6285.0, 577.0], [6397.0, 559.0], [6145.0, 507.0], [6237.0, 499.0], [6233.0, 494.0], [6249.0, 497.0], [6253.0, 550.0], [6261.0, 537.0], [6633.0, 589.0], [6433.0, 535.0], [6645.0, 521.0], [6425.0, 518.0], [6445.0, 529.0], [6701.0, 483.0], [6789.0, 495.0], [6737.0, 497.0], [6817.0, 531.0], [6801.0, 449.0], [6793.0, 504.0], [6853.0, 545.0], [6841.0, 486.0], [6837.0, 485.0], [7029.0, 479.0], [7045.0, 509.0], [7065.0, 477.0], [6985.0, 475.0], [6933.0, 481.0], [7329.0, 476.0], [7621.0, 431.0], [2473.0, 250.0], [2637.0, 831.0], [2689.0, 1219.0], [3155.0, 915.0], [3273.0, 1096.0], [3317.0, 948.0], [3267.0, 997.0], [3247.0, 1024.0], [3429.0, 1019.0], [3437.0, 959.0], [3415.0, 844.5], [3555.0, 883.0], [3477.0, 979.0], [3511.0, 766.0], [3581.0, 921.0], [3583.0, 789.0], [3561.0, 877.0], [3497.0, 971.0], [3489.0, 912.0], [3661.0, 880.0], [3651.0, 915.0], [3637.0, 935.0], [3669.0, 822.0], [3659.0, 911.0], [3783.0, 1026.0], [3839.0, 923.0], [3831.0, 920.0], [3785.0, 986.0], [3729.0, 944.5], [3775.0, 931.0], [3901.0, 899.0], [3905.0, 974.0], [3931.0, 917.0], [3939.0, 987.0], [3967.0, 823.0], [3887.0, 910.0], [3959.0, 898.0], [3999.0, 904.0], [4065.0, 850.0], [3979.0, 847.0], [4035.0, 806.0], [4011.0, 897.0], [4003.0, 961.0], [4041.0, 846.0], [4095.0, 745.0], [3975.0, 870.0], [4037.0, 852.0], [4194.0, 836.0], [4210.0, 819.0], [4114.0, 778.0], [4250.0, 801.0], [4126.0, 916.0], [4146.0, 789.0], [4306.0, 843.0], [4598.0, 727.0], [4594.0, 723.0], [4394.0, 772.0], [4374.0, 798.0], [4446.0, 772.0], [4466.0, 787.0], [4418.0, 703.0], [4538.0, 870.0], [4526.0, 749.0], [4486.0, 697.0], [4502.0, 738.0], [4510.0, 767.0], [4514.0, 764.0], [4802.0, 334.0], [4846.0, 660.0], [4750.0, 691.5], [4770.0, 740.0], [4778.0, 736.0], [4786.0, 846.0], [4822.0, 630.0], [4638.0, 702.0], [4642.0, 740.0], [4682.0, 791.0], [4686.0, 818.0], [4610.0, 761.0], [4722.0, 758.0], [5098.0, 773.0], [5010.0, 767.0], [5070.0, 814.0], [5022.0, 590.0], [5114.0, 746.0], [5094.0, 653.0], [5074.0, 787.0], [4886.0, 777.0], [4910.0, 637.0], [5258.0, 662.5], [5262.0, 671.0], [5270.0, 649.0], [5282.0, 793.0], [5290.0, 577.0], [5250.0, 551.0], [5174.0, 591.0], [5146.0, 814.0], [5630.0, 613.0], [5546.0, 672.0], [5434.0, 634.0], [5394.0, 613.0], [5534.0, 674.0], [5530.0, 601.0], [5666.0, 581.0], [5682.0, 628.0], [5730.0, 679.0], [5806.0, 633.0], [5686.0, 582.0], [5846.0, 574.0], [5870.0, 592.0], [5998.0, 564.0], [6074.0, 577.0], [5966.0, 636.0], [5974.0, 537.0], [6030.0, 538.0], [5930.0, 547.0], [6014.0, 378.0], [5910.0, 540.0], [6146.0, 580.0], [6250.0, 504.0], [6378.0, 525.0], [6218.0, 537.0], [6226.0, 493.0], [6158.0, 623.0], [6390.0, 501.0], [6326.0, 604.0], [6190.0, 538.0], [6194.0, 543.0], [6258.0, 525.0], [6406.0, 491.0], [6642.0, 548.0], [6534.0, 525.0], [6434.0, 540.0], [6494.0, 527.0], [6542.0, 554.0], [6610.0, 514.0], [6514.0, 528.0], [6890.0, 490.0], [6678.0, 483.0], [6770.0, 513.0], [6798.0, 493.0], [6694.0, 513.0], [6786.0, 510.0], [6758.0, 309.0], [6910.0, 498.0], [6806.0, 481.0], [6802.0, 501.0], [6950.0, 474.0], [6958.0, 503.0], [6978.0, 490.0], [6962.0, 494.0], [7010.0, 480.0], [7418.0, 435.0], [7470.0, 454.0], [7538.0, 444.0], [7506.0, 446.0], [7430.0, 480.0], [11124.0, 296.0], [11631.0, 277.0], [4131.0, 856.0], [4159.0, 884.0], [4299.0, 837.0], [4207.0, 876.0], [4195.0, 854.0], [4199.0, 819.0], [4191.0, 847.0], [4187.0, 729.0], [4183.0, 674.0], [4267.0, 898.0], [4279.0, 832.0], [4275.0, 787.0], [4119.0, 837.0], [4127.0, 876.0], [4211.0, 977.0], [4343.0, 970.0], [4331.0, 773.0], [4323.0, 762.0], [4551.0, 773.0], [4355.0, 774.0], [4375.0, 740.0], [4451.0, 976.0], [4519.0, 771.0], [4527.0, 758.0], [4443.0, 813.0], [4439.0, 793.5], [4571.0, 890.0], [4563.0, 638.0], [4663.0, 752.0], [4815.0, 761.0], [4851.0, 688.0], [4847.0, 763.0], [4839.0, 736.0], [4799.0, 714.0], [4791.0, 953.0], [4619.0, 702.0], [4623.0, 610.0], [4655.0, 683.0], [4695.0, 715.0], [4691.0, 735.0], [4723.0, 703.0], [4711.0, 716.0], [4731.0, 785.0], [4863.0, 755.0], [4747.0, 772.0], [4759.0, 714.0], [4615.0, 749.0], [4899.0, 737.0], [5019.0, 731.0], [4935.0, 686.0], [4943.0, 603.0], [4895.0, 805.0], [4963.0, 760.0], [5087.0, 698.0], [5011.0, 800.0], [5007.0, 661.0], [5147.0, 684.0], [5131.0, 619.0], [5167.0, 695.0], [5223.0, 742.0], [5235.0, 670.0], [5219.0, 679.0], [5307.0, 660.0], [5435.0, 497.0], [5379.0, 621.0], [5531.0, 525.0], [5611.0, 645.0], [5511.0, 573.0], [5491.0, 658.0], [5595.0, 544.0], [5759.0, 577.0], [5751.0, 650.0], [5747.0, 615.0], [5739.0, 700.0], [5723.0, 687.0], [5643.0, 760.0], [5695.0, 701.5], [5847.0, 599.0], [5879.0, 614.0], [5675.0, 546.0], [5683.0, 553.0], [5687.0, 607.0], [5883.0, 702.5], [5779.0, 524.0], [5811.0, 578.0], [6119.0, 546.0], [6143.0, 558.0], [5983.0, 561.0], [5955.0, 585.0], [6067.0, 533.0], [5931.0, 567.0], [5915.0, 572.0], [6159.0, 622.0], [6259.0, 562.0], [6175.0, 565.0], [6227.0, 522.0], [6223.0, 545.0], [6315.0, 549.0], [6163.0, 477.0], [6335.0, 520.0], [6319.0, 522.0], [6531.0, 495.0], [6503.0, 254.0], [6539.0, 510.0], [6511.0, 490.0], [6459.0, 470.0], [6711.0, 522.0], [6695.0, 503.0], [6907.0, 484.0], [6815.0, 500.0], [6903.0, 492.0], [6987.0, 435.0], [7011.0, 451.0], [6955.0, 503.0], [7335.0, 397.0], [7203.0, 472.0], [7559.0, 458.0], [9174.0, 379.0], [10190.0, 315.0], [10614.0, 319.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[10393.0, 331.0], [3317.0, 1112.0], [3380.0, 1196.0], [3438.0, 998.0], [3415.0, 1060.0], [3477.0, 914.0], [3581.0, 957.0], [3496.0, 940.0], [3518.0, 17.0], [3651.0, 1022.0], [3637.0, 811.0], [3608.0, 941.0], [3734.0, 981.0], [3806.0, 741.0], [3785.0, 998.0], [3729.0, 1031.0], [3775.0, 852.0], [3886.0, 0.0], [3902.0, 898.0], [3905.0, 925.0], [3931.0, 951.0], [3887.0, 906.0], [3959.0, 960.0], [3980.0, 1001.0], [3978.0, 827.0], [4065.0, 17.0], [4035.0, 878.0], [4011.0, 918.0], [4041.0, 803.0], [3979.0, 19.0], [4010.0, 842.0], [4003.0, 916.0], [4052.0, 866.0], [4126.0, 840.0], [4256.0, 17.0], [4210.0, 815.0], [4300.0, 974.0], [4188.0, 981.0], [4194.0, 874.0], [4276.0, 744.0], [4128.0, 921.0], [4146.0, 788.0], [4492.0, 843.0], [4446.0, 733.0], [4564.0, 1.0], [4466.0, 791.0], [4418.0, 702.0], [4538.0, 1021.0], [4526.0, 804.0], [4598.0, 91.0], [4480.0, 805.0], [4502.0, 112.0], [4486.0, 685.0], [4804.0, 640.0], [4620.0, 902.0], [4840.0, 726.0], [4696.0, 880.0], [4638.0, 703.0], [4610.0, 771.5], [4778.0, 705.0], [4788.0, 723.0], [4722.0, 769.0], [4770.0, 643.0], [4896.0, 745.0], [5084.0, 791.0], [4952.0, 754.0], [4968.0, 728.0], [5116.0, 768.0], [5094.0, 662.0], [4876.0, 565.0], [4910.0, 597.0], [5072.0, 614.0], [5290.0, 549.0], [5250.0, 485.0], [5168.0, 704.0], [5174.0, 572.0], [5630.0, 598.0], [5592.0, 546.0], [5556.0, 579.0], [5394.0, 18.0], [5620.0, 582.0], [5434.0, 593.0], [5536.0, 845.0], [5534.0, 724.0], [5530.0, 482.0], [5552.0, 771.0], [5604.0, 646.0], [5572.0, 697.0], [5682.0, 602.0], [5686.0, 501.0], [5692.0, 723.0], [5724.0, 664.0], [5730.0, 513.0], [5836.0, 514.0], [5846.0, 1.0], [5880.0, 665.0], [5864.0, 560.0], [5756.0, 596.0], [5736.0, 685.0], [5644.0, 592.0], [5980.0, 519.0], [6074.0, 538.0], [5966.0, 517.0], [6108.0, 489.0], [5960.0, 563.0], [5974.0, 504.0], [5930.0, 523.0], [6088.0, 458.0], [6014.0, 715.0], [5916.0, 589.0], [6148.0, 532.0], [6348.0, 483.0], [6268.0, 794.0], [6218.0, 533.0], [6226.0, 485.0], [6390.0, 500.0], [6152.0, 473.0], [6190.0, 491.0], [6188.0, 527.0], [6258.0, 557.0], [6252.0, 555.0], [6406.0, 39.0], [6508.0, 480.0], [6534.0, 524.0], [6434.0, 551.0], [6542.0, 664.0], [6564.0, 569.0], [6514.0, 526.0], [6520.0, 547.0], [6890.0, 504.0], [6678.0, 429.0], [6732.0, 515.0], [6828.0, 481.0], [6806.0, 588.0], [6802.0, 539.0], [6872.0, 460.0], [6786.0, 482.0], [6904.0, 33.0], [6758.0, 563.0], [6910.0, 464.0], [6962.0, 539.0], [6950.0, 405.0], [7068.0, 738.0], [7064.0, 575.0], [6958.0, 488.0], [7052.0, 459.0], [7104.0, 656.0], [6978.0, 442.0], [7010.0, 493.0], [6912.0, 512.0], [7012.0, 1.0], [7470.0, 432.0], [7506.0, 439.0], [7680.0, 472.0], [11124.0, 285.0], [9955.0, 274.0], [11631.0, 310.0], [4229.0, 866.0], [4159.0, 945.5], [4253.0, 663.0], [4157.0, 1.0], [4119.0, 953.0], [4153.0, 753.0], [4267.0, 992.0], [4281.0, 22.0], [4275.0, 741.0], [4323.0, 763.0], [4313.0, 789.0], [4343.0, 1033.0], [4331.0, 707.0], [4187.0, 686.0], [4181.0, 1.0], [4183.0, 810.0], [4191.0, 782.0], [4581.0, 766.0], [4545.0, 774.0], [4439.0, 747.0], [4469.0, 845.0], [4601.0, 790.0], [4585.0, 656.0], [4571.0, 982.0], [4513.0, 422.5], [4519.0, 806.0], [4655.0, 695.0], [4799.0, 731.0], [4759.0, 724.0], [4705.0, 692.0], [4723.0, 697.0], [4841.0, 764.0], [4851.0, 633.0], [4731.0, 131.0], [4663.0, 92.0], [4657.0, 676.0], [4615.0, 747.0], [5109.0, 306.0], [4899.0, 605.0], [5001.0, 695.0], [5033.0, 571.0], [5013.0, 0.0], [5007.0, 360.5], [4963.0, 687.0], [4943.0, 721.0], [5087.0, 890.0], [5057.0, 689.0], [5133.0, 722.0], [5325.0, 505.0], [5309.0, 543.0], [5365.0, 668.0], [5307.0, 691.0], [5157.0, 721.0], [5223.0, 538.0], [5213.0, 732.0], [5219.0, 669.0], [5131.0, 662.0], [5233.0, 19.0], [5147.0, 651.0], [5437.0, 683.0], [5609.0, 618.0], [5585.0, 573.0], [5595.0, 575.0], [5531.0, 477.0], [5429.0, 683.0], [5497.0, 452.0], [5611.0, 509.0], [5435.0, 563.0], [5433.0, 865.0], [5669.0, 604.0], [5751.0, 587.0], [5747.0, 319.0], [5739.0, 666.0], [5675.0, 579.0], [5687.0, 643.0], [5723.0, 737.0], [5695.0, 815.0], [5865.0, 698.0], [5869.0, 514.0], [5883.0, 823.0], [5797.0, 555.0], [5779.0, 539.0], [5733.0, 639.0], [5643.0, 775.0], [6137.0, 592.0], [6021.0, 618.0], [6143.0, 333.0], [6033.0, 488.0], [5917.0, 477.0], [5915.0, 513.0], [6067.0, 528.0], [5931.0, 521.0], [6017.0, 590.0], [5945.0, 701.0], [6361.0, 642.0], [6293.0, 491.0], [6259.0, 569.0], [6261.0, 535.0], [6297.0, 547.0], [6301.0, 825.0], [6315.0, 505.0], [6319.0, 556.0], [6285.0, 628.0], [6393.0, 482.0], [6397.0, 550.0], [6145.0, 511.0], [6159.0, 844.0], [6163.0, 479.0], [6175.0, 574.5], [6177.0, 496.0], [6249.0, 515.0], [6227.0, 544.0], [6633.0, 429.0], [6503.0, 506.0], [6539.0, 1.0], [6511.0, 470.0], [6645.0, 526.0], [6425.0, 537.0], [6445.0, 497.5], [6853.0, 467.0], [6701.0, 470.0], [6737.0, 444.0], [6817.0, 541.0], [6815.0, 544.0], [6801.0, 392.0], [6711.0, 624.0], [6695.0, 469.0], [6907.0, 473.0], [6903.0, 464.0], [6837.0, 510.0], [7029.0, 419.0], [6955.0, 441.0], [7045.0, 452.0], [7011.0, 480.0], [7065.0, 479.5], [7329.0, 439.0], [7203.0, 480.0], [7621.0, 419.0], [7559.0, 429.0], [9174.0, 365.0], [10190.0, 298.0], [10614.0, 282.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 11631.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1635.15, "minX": 1.6486458E12, "maxY": 5864.8, "series": [{"data": [[1.64864616E12, 5655.833333333333], [1.64864586E12, 5078.15], [1.64864634E12, 4974.833333333333], [1.64864604E12, 5498.0], [1.64864622E12, 5059.066666666667], [1.64864592E12, 4714.733333333334], [1.6486464E12, 4161.283333333334], [1.6486461E12, 5359.316666666667], [1.6486458E12, 1635.15], [1.64864628E12, 5864.8], [1.64864598E12, 4308.3]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6486464E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.15, "minX": 1.6486458E12, "maxY": 5864.183333333333, "series": [{"data": [[1.64864616E12, 5655.25], [1.64864586E12, 5077.616666666667], [1.64864634E12, 4974.366666666667], [1.64864604E12, 5497.433333333333], [1.64864622E12, 5058.6], [1.64864592E12, 4714.25], [1.6486464E12, 4214.166666666667], [1.6486461E12, 5358.8], [1.6486458E12, 1581.7], [1.64864628E12, 5864.183333333333], [1.64864598E12, 4307.883333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.64864616E12, 0.5666666666666667], [1.64864586E12, 0.5], [1.64864634E12, 0.5], [1.64864604E12, 0.55], [1.64864622E12, 0.5], [1.64864592E12, 0.48333333333333334], [1.6486464E12, 0.4166666666666667], [1.6486461E12, 0.5333333333333333], [1.6486458E12, 0.15], [1.64864628E12, 0.5833333333333334], [1.64864598E12, 0.43333333333333335]], "isOverall": false, "label": "404", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6486464E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.15, "minX": 1.6486458E12, "maxY": 5864.183333333333, "series": [{"data": [[1.64864616E12, 0.5666666666666667], [1.64864586E12, 0.5], [1.64864634E12, 0.5], [1.64864604E12, 0.55], [1.64864622E12, 0.5], [1.64864592E12, 0.48333333333333334], [1.6486464E12, 0.4166666666666667], [1.6486461E12, 0.5333333333333333], [1.6486458E12, 0.15], [1.64864628E12, 0.5833333333333334], [1.64864598E12, 0.43333333333333335]], "isOverall": false, "label": "HTTP请求长链接转短链接-failure", "isController": false}, {"data": [[1.64864616E12, 5655.25], [1.64864586E12, 5077.616666666667], [1.64864634E12, 4974.366666666667], [1.64864604E12, 5497.433333333333], [1.64864622E12, 5058.6], [1.64864592E12, 4714.25], [1.6486464E12, 4214.166666666667], [1.6486461E12, 5358.8], [1.6486458E12, 1581.7], [1.64864628E12, 5864.183333333333], [1.64864598E12, 4307.883333333333]], "isOverall": false, "label": "HTTP请求长链接转短链接-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6486464E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.15, "minX": 1.6486458E12, "maxY": 5864.183333333333, "series": [{"data": [[1.64864616E12, 5655.25], [1.64864586E12, 5077.616666666667], [1.64864634E12, 4974.366666666667], [1.64864604E12, 5497.433333333333], [1.64864622E12, 5058.6], [1.64864592E12, 4714.25], [1.6486464E12, 4214.166666666667], [1.6486461E12, 5358.8], [1.6486458E12, 1581.7], [1.64864628E12, 5864.183333333333], [1.64864598E12, 4307.883333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.64864616E12, 0.5666666666666667], [1.64864586E12, 0.5], [1.64864634E12, 0.5], [1.64864604E12, 0.55], [1.64864622E12, 0.5], [1.64864592E12, 0.48333333333333334], [1.6486464E12, 0.4166666666666667], [1.6486461E12, 0.5333333333333333], [1.6486458E12, 0.15], [1.64864628E12, 0.5833333333333334], [1.64864598E12, 0.43333333333333335]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6486464E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

