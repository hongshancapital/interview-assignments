/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 2517.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 2.0], [4.4, 2.0], [4.5, 4.0], [4.6, 16.0], [4.7, 21.0], [4.8, 24.0], [4.9, 26.0], [5.0, 28.0], [5.1, 31.0], [5.2, 33.0], [5.3, 35.0], [5.4, 38.0], [5.5, 41.0], [5.6, 43.0], [5.7, 46.0], [5.8, 48.0], [5.9, 51.0], [6.0, 53.0], [6.1, 55.0], [6.2, 57.0], [6.3, 59.0], [6.4, 61.0], [6.5, 63.0], [6.6, 66.0], [6.7, 68.0], [6.8, 70.0], [6.9, 73.0], [7.0, 75.0], [7.1, 78.0], [7.2, 81.0], [7.3, 84.0], [7.4, 87.0], [7.5, 91.0], [7.6, 94.0], [7.7, 98.0], [7.8, 103.0], [7.9, 108.0], [8.0, 113.0], [8.1, 119.0], [8.2, 125.0], [8.3, 132.0], [8.4, 139.0], [8.5, 147.0], [8.6, 156.0], [8.7, 166.0], [8.8, 178.0], [8.9, 192.0], [9.0, 210.0], [9.1, 229.0], [9.2, 244.0], [9.3, 251.0], [9.4, 255.0], [9.5, 258.0], [9.6, 261.0], [9.7, 265.0], [9.8, 269.0], [9.9, 273.0], [10.0, 276.0], [10.1, 280.0], [10.2, 283.0], [10.3, 287.0], [10.4, 291.0], [10.5, 295.0], [10.6, 297.0], [10.7, 301.0], [10.8, 305.0], [10.9, 308.0], [11.0, 313.0], [11.1, 318.0], [11.2, 324.0], [11.3, 330.0], [11.4, 336.0], [11.5, 343.0], [11.6, 354.0], [11.7, 368.0], [11.8, 389.0], [11.9, 397.0], [12.0, 400.0], [12.1, 402.0], [12.2, 403.0], [12.3, 405.0], [12.4, 405.0], [12.5, 406.0], [12.6, 407.0], [12.7, 408.0], [12.8, 409.0], [12.9, 410.0], [13.0, 411.0], [13.1, 411.0], [13.2, 412.0], [13.3, 413.0], [13.4, 413.0], [13.5, 414.0], [13.6, 415.0], [13.7, 415.0], [13.8, 416.0], [13.9, 416.0], [14.0, 417.0], [14.1, 417.0], [14.2, 418.0], [14.3, 419.0], [14.4, 419.0], [14.5, 420.0], [14.6, 420.0], [14.7, 421.0], [14.8, 421.0], [14.9, 422.0], [15.0, 423.0], [15.1, 423.0], [15.2, 424.0], [15.3, 425.0], [15.4, 426.0], [15.5, 426.0], [15.6, 427.0], [15.7, 428.0], [15.8, 428.0], [15.9, 429.0], [16.0, 430.0], [16.1, 431.0], [16.2, 431.0], [16.3, 432.0], [16.4, 433.0], [16.5, 433.0], [16.6, 434.0], [16.7, 435.0], [16.8, 436.0], [16.9, 436.0], [17.0, 437.0], [17.1, 437.0], [17.2, 438.0], [17.3, 439.0], [17.4, 439.0], [17.5, 440.0], [17.6, 440.0], [17.7, 441.0], [17.8, 441.0], [17.9, 442.0], [18.0, 442.0], [18.1, 443.0], [18.2, 443.0], [18.3, 444.0], [18.4, 444.0], [18.5, 445.0], [18.6, 445.0], [18.7, 445.0], [18.8, 446.0], [18.9, 446.0], [19.0, 447.0], [19.1, 447.0], [19.2, 448.0], [19.3, 448.0], [19.4, 448.0], [19.5, 449.0], [19.6, 449.0], [19.7, 450.0], [19.8, 450.0], [19.9, 450.0], [20.0, 451.0], [20.1, 451.0], [20.2, 451.0], [20.3, 452.0], [20.4, 452.0], [20.5, 453.0], [20.6, 453.0], [20.7, 453.0], [20.8, 454.0], [20.9, 454.0], [21.0, 454.0], [21.1, 455.0], [21.2, 455.0], [21.3, 455.0], [21.4, 456.0], [21.5, 456.0], [21.6, 457.0], [21.7, 457.0], [21.8, 457.0], [21.9, 458.0], [22.0, 458.0], [22.1, 458.0], [22.2, 459.0], [22.3, 459.0], [22.4, 460.0], [22.5, 460.0], [22.6, 460.0], [22.7, 461.0], [22.8, 461.0], [22.9, 462.0], [23.0, 462.0], [23.1, 463.0], [23.2, 463.0], [23.3, 463.0], [23.4, 464.0], [23.5, 464.0], [23.6, 465.0], [23.7, 465.0], [23.8, 465.0], [23.9, 466.0], [24.0, 466.0], [24.1, 467.0], [24.2, 467.0], [24.3, 468.0], [24.4, 468.0], [24.5, 469.0], [24.6, 469.0], [24.7, 469.0], [24.8, 470.0], [24.9, 470.0], [25.0, 471.0], [25.1, 471.0], [25.2, 471.0], [25.3, 472.0], [25.4, 472.0], [25.5, 473.0], [25.6, 473.0], [25.7, 473.0], [25.8, 474.0], [25.9, 474.0], [26.0, 475.0], [26.1, 475.0], [26.2, 475.0], [26.3, 476.0], [26.4, 476.0], [26.5, 477.0], [26.6, 477.0], [26.7, 477.0], [26.8, 478.0], [26.9, 478.0], [27.0, 479.0], [27.1, 479.0], [27.2, 479.0], [27.3, 480.0], [27.4, 480.0], [27.5, 481.0], [27.6, 481.0], [27.7, 481.0], [27.8, 482.0], [27.9, 482.0], [28.0, 483.0], [28.1, 483.0], [28.2, 484.0], [28.3, 484.0], [28.4, 484.0], [28.5, 485.0], [28.6, 485.0], [28.7, 486.0], [28.8, 486.0], [28.9, 487.0], [29.0, 487.0], [29.1, 487.0], [29.2, 488.0], [29.3, 488.0], [29.4, 489.0], [29.5, 489.0], [29.6, 490.0], [29.7, 490.0], [29.8, 491.0], [29.9, 491.0], [30.0, 491.0], [30.1, 492.0], [30.2, 492.0], [30.3, 493.0], [30.4, 493.0], [30.5, 494.0], [30.6, 494.0], [30.7, 495.0], [30.8, 495.0], [30.9, 496.0], [31.0, 496.0], [31.1, 497.0], [31.2, 497.0], [31.3, 498.0], [31.4, 498.0], [31.5, 499.0], [31.6, 499.0], [31.7, 499.0], [31.8, 500.0], [31.9, 500.0], [32.0, 501.0], [32.1, 501.0], [32.2, 502.0], [32.3, 502.0], [32.4, 503.0], [32.5, 503.0], [32.6, 504.0], [32.7, 504.0], [32.8, 504.0], [32.9, 505.0], [33.0, 505.0], [33.1, 506.0], [33.2, 506.0], [33.3, 507.0], [33.4, 507.0], [33.5, 508.0], [33.6, 508.0], [33.7, 509.0], [33.8, 509.0], [33.9, 510.0], [34.0, 510.0], [34.1, 511.0], [34.2, 511.0], [34.3, 512.0], [34.4, 512.0], [34.5, 513.0], [34.6, 513.0], [34.7, 514.0], [34.8, 515.0], [34.9, 515.0], [35.0, 515.0], [35.1, 516.0], [35.2, 516.0], [35.3, 517.0], [35.4, 517.0], [35.5, 518.0], [35.6, 518.0], [35.7, 519.0], [35.8, 519.0], [35.9, 520.0], [36.0, 520.0], [36.1, 521.0], [36.2, 521.0], [36.3, 522.0], [36.4, 522.0], [36.5, 523.0], [36.6, 523.0], [36.7, 524.0], [36.8, 524.0], [36.9, 525.0], [37.0, 526.0], [37.1, 526.0], [37.2, 527.0], [37.3, 527.0], [37.4, 528.0], [37.5, 529.0], [37.6, 529.0], [37.7, 530.0], [37.8, 530.0], [37.9, 531.0], [38.0, 531.0], [38.1, 532.0], [38.2, 533.0], [38.3, 533.0], [38.4, 534.0], [38.5, 535.0], [38.6, 535.0], [38.7, 536.0], [38.8, 536.0], [38.9, 537.0], [39.0, 538.0], [39.1, 538.0], [39.2, 539.0], [39.3, 539.0], [39.4, 540.0], [39.5, 541.0], [39.6, 541.0], [39.7, 542.0], [39.8, 543.0], [39.9, 543.0], [40.0, 544.0], [40.1, 544.0], [40.2, 545.0], [40.3, 546.0], [40.4, 546.0], [40.5, 547.0], [40.6, 547.0], [40.7, 548.0], [40.8, 548.0], [40.9, 549.0], [41.0, 550.0], [41.1, 550.0], [41.2, 551.0], [41.3, 552.0], [41.4, 552.0], [41.5, 553.0], [41.6, 553.0], [41.7, 554.0], [41.8, 554.0], [41.9, 555.0], [42.0, 555.0], [42.1, 556.0], [42.2, 556.0], [42.3, 557.0], [42.4, 557.0], [42.5, 558.0], [42.6, 558.0], [42.7, 559.0], [42.8, 559.0], [42.9, 560.0], [43.0, 560.0], [43.1, 561.0], [43.2, 561.0], [43.3, 562.0], [43.4, 563.0], [43.5, 563.0], [43.6, 564.0], [43.7, 564.0], [43.8, 565.0], [43.9, 565.0], [44.0, 566.0], [44.1, 566.0], [44.2, 567.0], [44.3, 567.0], [44.4, 568.0], [44.5, 568.0], [44.6, 569.0], [44.7, 569.0], [44.8, 570.0], [44.9, 570.0], [45.0, 570.0], [45.1, 571.0], [45.2, 571.0], [45.3, 572.0], [45.4, 572.0], [45.5, 573.0], [45.6, 573.0], [45.7, 574.0], [45.8, 574.0], [45.9, 575.0], [46.0, 575.0], [46.1, 576.0], [46.2, 576.0], [46.3, 576.0], [46.4, 577.0], [46.5, 577.0], [46.6, 578.0], [46.7, 578.0], [46.8, 579.0], [46.9, 579.0], [47.0, 580.0], [47.1, 580.0], [47.2, 581.0], [47.3, 581.0], [47.4, 581.0], [47.5, 582.0], [47.6, 582.0], [47.7, 583.0], [47.8, 583.0], [47.9, 584.0], [48.0, 584.0], [48.1, 585.0], [48.2, 585.0], [48.3, 586.0], [48.4, 586.0], [48.5, 587.0], [48.6, 587.0], [48.7, 588.0], [48.8, 588.0], [48.9, 589.0], [49.0, 589.0], [49.1, 590.0], [49.2, 590.0], [49.3, 591.0], [49.4, 591.0], [49.5, 592.0], [49.6, 592.0], [49.7, 593.0], [49.8, 593.0], [49.9, 594.0], [50.0, 594.0], [50.1, 595.0], [50.2, 595.0], [50.3, 596.0], [50.4, 596.0], [50.5, 597.0], [50.6, 597.0], [50.7, 598.0], [50.8, 598.0], [50.9, 599.0], [51.0, 599.0], [51.1, 600.0], [51.2, 600.0], [51.3, 601.0], [51.4, 601.0], [51.5, 602.0], [51.6, 602.0], [51.7, 603.0], [51.8, 603.0], [51.9, 604.0], [52.0, 604.0], [52.1, 605.0], [52.2, 605.0], [52.3, 606.0], [52.4, 606.0], [52.5, 607.0], [52.6, 607.0], [52.7, 608.0], [52.8, 608.0], [52.9, 609.0], [53.0, 609.0], [53.1, 610.0], [53.2, 610.0], [53.3, 610.0], [53.4, 611.0], [53.5, 611.0], [53.6, 612.0], [53.7, 612.0], [53.8, 613.0], [53.9, 613.0], [54.0, 614.0], [54.1, 614.0], [54.2, 615.0], [54.3, 615.0], [54.4, 615.0], [54.5, 616.0], [54.6, 616.0], [54.7, 617.0], [54.8, 617.0], [54.9, 618.0], [55.0, 618.0], [55.1, 619.0], [55.2, 619.0], [55.3, 620.0], [55.4, 620.0], [55.5, 621.0], [55.6, 621.0], [55.7, 622.0], [55.8, 622.0], [55.9, 623.0], [56.0, 623.0], [56.1, 624.0], [56.2, 624.0], [56.3, 625.0], [56.4, 625.0], [56.5, 626.0], [56.6, 626.0], [56.7, 627.0], [56.8, 627.0], [56.9, 628.0], [57.0, 628.0], [57.1, 629.0], [57.2, 629.0], [57.3, 630.0], [57.4, 630.0], [57.5, 631.0], [57.6, 631.0], [57.7, 632.0], [57.8, 632.0], [57.9, 633.0], [58.0, 633.0], [58.1, 634.0], [58.2, 635.0], [58.3, 635.0], [58.4, 635.0], [58.5, 636.0], [58.6, 637.0], [58.7, 637.0], [58.8, 638.0], [58.9, 638.0], [59.0, 639.0], [59.1, 639.0], [59.2, 640.0], [59.3, 640.0], [59.4, 641.0], [59.5, 641.0], [59.6, 642.0], [59.7, 642.0], [59.8, 643.0], [59.9, 643.0], [60.0, 644.0], [60.1, 644.0], [60.2, 645.0], [60.3, 645.0], [60.4, 646.0], [60.5, 646.0], [60.6, 647.0], [60.7, 647.0], [60.8, 648.0], [60.9, 648.0], [61.0, 649.0], [61.1, 649.0], [61.2, 650.0], [61.3, 651.0], [61.4, 651.0], [61.5, 652.0], [61.6, 652.0], [61.7, 653.0], [61.8, 653.0], [61.9, 654.0], [62.0, 654.0], [62.1, 655.0], [62.2, 655.0], [62.3, 656.0], [62.4, 656.0], [62.5, 657.0], [62.6, 657.0], [62.7, 658.0], [62.8, 658.0], [62.9, 659.0], [63.0, 659.0], [63.1, 660.0], [63.2, 660.0], [63.3, 661.0], [63.4, 662.0], [63.5, 662.0], [63.6, 663.0], [63.7, 663.0], [63.8, 664.0], [63.9, 664.0], [64.0, 665.0], [64.1, 665.0], [64.2, 666.0], [64.3, 667.0], [64.4, 667.0], [64.5, 668.0], [64.6, 668.0], [64.7, 669.0], [64.8, 669.0], [64.9, 670.0], [65.0, 670.0], [65.1, 671.0], [65.2, 671.0], [65.3, 672.0], [65.4, 672.0], [65.5, 673.0], [65.6, 673.0], [65.7, 674.0], [65.8, 674.0], [65.9, 675.0], [66.0, 675.0], [66.1, 676.0], [66.2, 677.0], [66.3, 677.0], [66.4, 678.0], [66.5, 678.0], [66.6, 679.0], [66.7, 679.0], [66.8, 680.0], [66.9, 680.0], [67.0, 681.0], [67.1, 682.0], [67.2, 682.0], [67.3, 683.0], [67.4, 683.0], [67.5, 684.0], [67.6, 684.0], [67.7, 685.0], [67.8, 685.0], [67.9, 686.0], [68.0, 687.0], [68.1, 687.0], [68.2, 688.0], [68.3, 688.0], [68.4, 689.0], [68.5, 690.0], [68.6, 690.0], [68.7, 691.0], [68.8, 691.0], [68.9, 692.0], [69.0, 693.0], [69.1, 693.0], [69.2, 694.0], [69.3, 694.0], [69.4, 695.0], [69.5, 696.0], [69.6, 696.0], [69.7, 697.0], [69.8, 698.0], [69.9, 698.0], [70.0, 699.0], [70.1, 700.0], [70.2, 700.0], [70.3, 701.0], [70.4, 702.0], [70.5, 702.0], [70.6, 703.0], [70.7, 704.0], [70.8, 704.0], [70.9, 705.0], [71.0, 706.0], [71.1, 706.0], [71.2, 707.0], [71.3, 708.0], [71.4, 708.0], [71.5, 709.0], [71.6, 710.0], [71.7, 710.0], [71.8, 711.0], [71.9, 712.0], [72.0, 712.0], [72.1, 713.0], [72.2, 714.0], [72.3, 714.0], [72.4, 715.0], [72.5, 716.0], [72.6, 716.0], [72.7, 717.0], [72.8, 718.0], [72.9, 718.0], [73.0, 719.0], [73.1, 720.0], [73.2, 720.0], [73.3, 721.0], [73.4, 722.0], [73.5, 722.0], [73.6, 723.0], [73.7, 724.0], [73.8, 725.0], [73.9, 725.0], [74.0, 726.0], [74.1, 727.0], [74.2, 728.0], [74.3, 728.0], [74.4, 729.0], [74.5, 730.0], [74.6, 730.0], [74.7, 731.0], [74.8, 732.0], [74.9, 732.0], [75.0, 733.0], [75.1, 734.0], [75.2, 734.0], [75.3, 735.0], [75.4, 736.0], [75.5, 737.0], [75.6, 737.0], [75.7, 738.0], [75.8, 739.0], [75.9, 739.0], [76.0, 740.0], [76.1, 741.0], [76.2, 741.0], [76.3, 742.0], [76.4, 743.0], [76.5, 743.0], [76.6, 744.0], [76.7, 745.0], [76.8, 745.0], [76.9, 746.0], [77.0, 746.0], [77.1, 747.0], [77.2, 748.0], [77.3, 748.0], [77.4, 749.0], [77.5, 750.0], [77.6, 750.0], [77.7, 751.0], [77.8, 752.0], [77.9, 752.0], [78.0, 753.0], [78.1, 754.0], [78.2, 754.0], [78.3, 755.0], [78.4, 756.0], [78.5, 756.0], [78.6, 757.0], [78.7, 758.0], [78.8, 758.0], [78.9, 759.0], [79.0, 760.0], [79.1, 760.0], [79.2, 761.0], [79.3, 762.0], [79.4, 762.0], [79.5, 763.0], [79.6, 764.0], [79.7, 765.0], [79.8, 765.0], [79.9, 766.0], [80.0, 767.0], [80.1, 767.0], [80.2, 768.0], [80.3, 769.0], [80.4, 770.0], [80.5, 770.0], [80.6, 771.0], [80.7, 772.0], [80.8, 772.0], [80.9, 773.0], [81.0, 774.0], [81.1, 774.0], [81.2, 775.0], [81.3, 776.0], [81.4, 776.0], [81.5, 777.0], [81.6, 778.0], [81.7, 779.0], [81.8, 780.0], [81.9, 780.0], [82.0, 781.0], [82.1, 782.0], [82.2, 783.0], [82.3, 783.0], [82.4, 784.0], [82.5, 785.0], [82.6, 786.0], [82.7, 786.0], [82.8, 787.0], [82.9, 788.0], [83.0, 789.0], [83.1, 790.0], [83.2, 790.0], [83.3, 791.0], [83.4, 792.0], [83.5, 793.0], [83.6, 794.0], [83.7, 795.0], [83.8, 796.0], [83.9, 797.0], [84.0, 798.0], [84.1, 798.0], [84.2, 799.0], [84.3, 800.0], [84.4, 801.0], [84.5, 802.0], [84.6, 803.0], [84.7, 803.0], [84.8, 804.0], [84.9, 805.0], [85.0, 806.0], [85.1, 807.0], [85.2, 808.0], [85.3, 808.0], [85.4, 809.0], [85.5, 810.0], [85.6, 811.0], [85.7, 812.0], [85.8, 813.0], [85.9, 814.0], [86.0, 815.0], [86.1, 815.0], [86.2, 816.0], [86.3, 817.0], [86.4, 818.0], [86.5, 819.0], [86.6, 820.0], [86.7, 821.0], [86.8, 822.0], [86.9, 823.0], [87.0, 824.0], [87.1, 825.0], [87.2, 826.0], [87.3, 827.0], [87.4, 828.0], [87.5, 829.0], [87.6, 830.0], [87.7, 831.0], [87.8, 832.0], [87.9, 833.0], [88.0, 834.0], [88.1, 835.0], [88.2, 836.0], [88.3, 837.0], [88.4, 838.0], [88.5, 839.0], [88.6, 840.0], [88.7, 841.0], [88.8, 842.0], [88.9, 843.0], [89.0, 844.0], [89.1, 845.0], [89.2, 846.0], [89.3, 847.0], [89.4, 848.0], [89.5, 849.0], [89.6, 850.0], [89.7, 851.0], [89.8, 852.0], [89.9, 853.0], [90.0, 853.0], [90.1, 855.0], [90.2, 856.0], [90.3, 857.0], [90.4, 858.0], [90.5, 859.0], [90.6, 860.0], [90.7, 861.0], [90.8, 863.0], [90.9, 864.0], [91.0, 865.0], [91.1, 866.0], [91.2, 867.0], [91.3, 868.0], [91.4, 870.0], [91.5, 871.0], [91.6, 872.0], [91.7, 873.0], [91.8, 874.0], [91.9, 875.0], [92.0, 876.0], [92.1, 878.0], [92.2, 879.0], [92.3, 880.0], [92.4, 881.0], [92.5, 882.0], [92.6, 884.0], [92.7, 885.0], [92.8, 886.0], [92.9, 888.0], [93.0, 889.0], [93.1, 891.0], [93.2, 892.0], [93.3, 893.0], [93.4, 895.0], [93.5, 896.0], [93.6, 898.0], [93.7, 899.0], [93.8, 901.0], [93.9, 902.0], [94.0, 904.0], [94.1, 906.0], [94.2, 908.0], [94.3, 909.0], [94.4, 911.0], [94.5, 913.0], [94.6, 915.0], [94.7, 917.0], [94.8, 919.0], [94.9, 922.0], [95.0, 924.0], [95.1, 926.0], [95.2, 928.0], [95.3, 931.0], [95.4, 933.0], [95.5, 935.0], [95.6, 937.0], [95.7, 939.0], [95.8, 941.0], [95.9, 943.0], [96.0, 945.0], [96.1, 947.0], [96.2, 950.0], [96.3, 952.0], [96.4, 954.0], [96.5, 956.0], [96.6, 959.0], [96.7, 961.0], [96.8, 964.0], [96.9, 966.0], [97.0, 969.0], [97.1, 972.0], [97.2, 975.0], [97.3, 978.0], [97.4, 982.0], [97.5, 985.0], [97.6, 988.0], [97.7, 992.0], [97.8, 995.0], [97.9, 998.0], [98.0, 1002.0], [98.1, 1006.0], [98.2, 1011.0], [98.3, 1016.0], [98.4, 1021.0], [98.5, 1026.0], [98.6, 1031.0], [98.7, 1037.0], [98.8, 1044.0], [98.9, 1051.0], [99.0, 1058.0], [99.1, 1066.0], [99.2, 1073.0], [99.3, 1083.0], [99.4, 1094.0], [99.5, 1108.0], [99.6, 1124.0], [99.7, 1145.0], [99.8, 1172.0], [99.9, 1221.0]], "isOverall": false, "label": "HTTP请求长链接转短链接", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 660082.0, "series": [{"data": [[0.0, 258826.0], [600.0, 635849.0], [700.0, 473402.0], [800.0, 317390.0], [900.0, 141154.0], [1000.0, 50646.0], [1100.0, 14235.0], [1200.0, 3276.0], [1300.0, 598.0], [1400.0, 124.0], [1500.0, 37.0], [100.0, 40648.0], [1600.0, 29.0], [1700.0, 14.0], [1800.0, 38.0], [1900.0, 50.0], [2000.0, 76.0], [2100.0, 85.0], [2200.0, 76.0], [2300.0, 24.0], [2400.0, 8.0], [2500.0, 1.0], [200.0, 57399.0], [300.0, 44151.0], [400.0, 660082.0], [500.0, 648663.0]], "isOverall": false, "label": "HTTP请求长链接转短链接", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 437.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2278111.0, "series": [{"data": [[0.0, 1068333.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2278111.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 437.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 3213.578266178268, "minX": 1.64865048E12, "maxY": 3250.0, "series": [{"data": [[1.6486506E12, 3250.0], [1.6486509E12, 3250.0], [1.64865078E12, 3250.0], [1.64865072E12, 3250.0], [1.64865108E12, 3213.578266178268], [1.64865084E12, 3250.0], [1.64865054E12, 3250.0], [1.64865096E12, 3250.0], [1.64865048E12, 3243.788358627226], [1.64865102E12, 3250.0], [1.64865066E12, 3250.0]], "isOverall": false, "label": "模拟用户请求", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64865108E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.0, "maxY": 1421.0, "series": [{"data": [[2.0, 1182.0], [4.0, 1062.0], [6.0, 996.0], [8.0, 1061.5], [9.0, 1129.0], [10.0, 1081.0], [11.0, 1076.0], [12.0, 1287.0], [14.0, 1099.0], [15.0, 1114.0], [17.0, 1125.5], [18.0, 1128.0], [19.0, 1131.0], [20.0, 1297.0], [21.0, 1305.0], [23.0, 1136.0], [25.0, 1217.0], [26.0, 1147.0], [28.0, 1232.0], [29.0, 1165.0], [30.0, 1165.0], [33.0, 1176.0], [32.0, 1254.5], [34.0, 1175.0], [36.0, 1177.0], [38.0, 1191.5], [41.0, 1208.0], [40.0, 1206.5], [44.0, 1215.6666666666667], [47.0, 1236.0], [46.0, 1226.5], [49.0, 1287.0], [51.0, 972.0], [50.0, 971.0], [53.0, 1240.0], [52.0, 986.0], [55.0, 1166.0], [57.0, 1241.0], [56.0, 1402.0], [59.0, 1245.0], [58.0, 1240.0], [61.0, 1245.0], [63.0, 1033.0], [67.0, 989.0], [66.0, 992.0], [65.0, 1170.0], [64.0, 1404.0], [71.0, 1002.0], [70.0, 1006.0], [69.0, 1002.5], [75.0, 1017.5], [73.0, 1013.5], [79.0, 1267.0], [78.0, 1062.0], [77.0, 1059.0], [76.0, 1030.0], [83.0, 1078.0], [81.0, 1352.0], [80.0, 1059.0], [87.0, 1087.5], [85.0, 1070.5], [84.0, 1352.0], [91.0, 1096.0], [90.0, 1091.0], [89.0, 1089.0], [88.0, 1095.0], [94.0, 1106.0], [93.0, 1096.0], [92.0, 1097.0], [99.0, 1247.0], [96.0, 1107.5], [102.0, 1276.0], [100.0, 1112.0], [107.0, 1202.5], [106.0, 1119.0], [105.0, 1124.0], [104.0, 1281.0], [110.0, 1123.0], [109.0, 1207.5], [115.0, 1208.5], [114.0, 1296.0], [112.0, 1241.5], [117.0, 1296.0], [116.0, 1304.0], [123.0, 1123.0], [121.0, 1110.0], [120.0, 1299.6666666666667], [127.0, 1120.5], [125.0, 1119.0], [135.0, 1143.5], [133.0, 1145.0], [132.0, 1144.0], [131.0, 1138.0], [129.0, 1129.5], [143.0, 1166.0], [141.0, 1165.0], [140.0, 1158.6666666666667], [137.0, 1226.5], [151.0, 898.0], [150.0, 1161.0], [149.0, 1268.0], [147.0, 1230.3333333333333], [144.0, 1165.0], [158.0, 1221.5], [156.0, 1148.0], [155.0, 1153.0], [153.0, 1153.0], [152.0, 1153.0], [167.0, 1166.0], [166.0, 1076.3333333333333], [165.0, 1164.0], [162.0, 1159.5], [160.0, 1168.0], [175.0, 1288.0], [174.0, 1229.0], [172.0, 1169.5], [171.0, 1168.0], [170.0, 1171.0], [168.0, 1166.0], [182.0, 1203.5], [180.0, 910.0], [177.0, 1171.0], [191.0, 1176.0], [190.0, 925.0], [189.0, 1176.0], [188.0, 1232.0], [186.0, 905.0], [185.0, 1100.5], [184.0, 901.0], [199.0, 1376.0], [197.0, 1201.0], [194.0, 1178.0], [192.0, 1177.0], [207.0, 929.0], [206.0, 1109.0], [204.0, 1292.0], [203.0, 1343.0], [201.0, 1341.5], [200.0, 1341.0], [214.0, 1183.0], [213.0, 1233.5], [211.0, 1183.0], [210.0, 1288.5], [208.0, 1288.0], [223.0, 1058.5], [221.0, 935.0], [219.0, 932.0], [218.0, 926.0], [217.0, 1186.0], [216.0, 1056.0], [230.0, 947.0], [229.0, 946.0], [227.0, 936.0], [226.0, 942.0], [225.0, 1192.0], [224.0, 932.0], [239.0, 1185.0], [238.0, 1186.0], [237.0, 956.0], [235.0, 954.0], [233.0, 961.0], [232.0, 949.0], [245.0, 1187.0], [244.0, 985.0], [243.0, 1186.0], [242.0, 985.0], [241.0, 1188.0], [240.0, 1186.0], [255.0, 1223.0], [252.0, 1193.0], [251.0, 1277.0], [249.0, 1191.0], [248.0, 1217.3333333333333], [270.0, 992.0], [269.0, 1132.5], [267.0, 989.5], [265.0, 989.5], [263.0, 993.0], [262.0, 1132.5], [260.0, 989.5], [258.0, 987.0], [286.0, 1184.0], [287.0, 997.0], [285.0, 999.0], [284.0, 995.0], [283.0, 1185.0], [282.0, 1090.5], [280.0, 1093.0], [278.0, 999.5], [274.0, 1133.5], [272.0, 994.0], [276.0, 997.5], [302.0, 1063.0], [299.0, 1010.0], [298.0, 1004.75], [297.0, 1004.0], [294.0, 1002.0], [292.0, 1000.0], [290.0, 1002.0], [289.0, 1000.0], [288.0, 1000.0], [316.0, 1015.0], [315.0, 1009.0], [314.0, 1006.5], [312.0, 1088.0], [310.0, 1175.0], [307.0, 1177.5], [305.0, 1179.0], [304.0, 1005.0], [333.0, 1175.0], [335.0, 1012.5], [332.0, 1306.0], [331.0, 1180.0], [330.0, 1093.5], [328.0, 1118.6666666666667], [325.0, 1009.0], [324.0, 1008.3333333333334], [323.0, 1009.5], [322.0, 1005.0], [321.0, 1008.0], [350.0, 1017.5], [351.0, 1023.0], [348.0, 1019.0], [347.0, 1018.0], [345.0, 1020.0], [343.0, 1098.5], [341.0, 1098.0], [339.0, 1177.0], [338.0, 1122.6666666666667], [367.0, 1236.6666666666667], [364.0, 1019.0], [363.0, 1106.0], [361.0, 1102.5], [359.0, 1125.0], [356.0, 1218.0], [354.0, 1017.5], [352.0, 1026.0], [381.0, 1023.0], [383.0, 1195.5], [380.0, 1196.0], [370.0, 1194.0], [368.0, 1016.0], [379.0, 1198.0], [378.0, 1111.5], [376.0, 1022.0], [375.0, 1028.0], [374.0, 1109.0], [372.0, 1202.5], [398.0, 1113.5], [399.0, 1026.0], [396.0, 1193.0], [395.0, 1112.5], [393.0, 1026.0], [392.0, 1028.0], [390.0, 1026.5], [388.0, 1027.0], [386.0, 1027.5], [384.0, 1023.0], [403.0, 1108.5], [415.0, 1111.0], [413.0, 1107.0], [411.0, 1025.0], [410.0, 1025.5], [408.0, 1028.5], [406.0, 1027.0], [405.0, 1108.5], [401.0, 1027.0], [400.0, 1027.0], [430.0, 1188.0], [431.0, 1185.0], [429.0, 1185.0], [428.0, 1109.0], [426.0, 1029.0], [425.0, 1031.0], [424.0, 1026.0], [423.0, 1028.0], [419.0, 1030.0], [417.0, 1029.0], [422.0, 1192.0], [421.0, 1217.0], [440.0, 1025.0], [445.0, 1029.0], [443.0, 1028.0], [442.0, 1184.0], [441.0, 1027.0], [439.0, 1026.5], [437.0, 1029.0], [436.0, 1023.0], [435.0, 1027.0], [434.0, 1184.0], [433.0, 1105.5], [462.0, 1029.5], [460.0, 1028.5], [458.0, 1029.0], [457.0, 1028.0], [456.0, 1029.0], [454.0, 1033.3333333333333], [451.0, 1030.5], [449.0, 1028.0], [448.0, 1026.75], [467.0, 1031.5], [477.0, 1031.0], [479.0, 1126.5], [476.0, 1146.5], [474.0, 1102.5], [472.0, 1034.0], [471.0, 1032.0], [469.0, 1032.0], [468.0, 1229.0], [466.0, 1030.0], [464.0, 1032.5], [495.0, 1126.5], [493.0, 1131.5], [491.0, 1031.0], [490.0, 1031.0], [489.0, 1033.0], [488.0, 1028.0], [487.0, 1029.5], [485.0, 1095.6666666666667], [482.0, 1032.0], [481.0, 1103.5], [510.0, 1096.5], [511.0, 1027.0], [508.0, 1098.0], [506.0, 1034.0], [505.0, 1099.5], [504.0, 1034.0], [502.0, 1165.0], [500.0, 1225.0], [499.0, 1193.0], [497.0, 1035.5], [542.0, 1119.5], [540.0, 1028.0], [530.0, 1026.0], [526.0, 1026.0], [522.0, 1028.0], [520.0, 1252.0], [518.0, 1220.0], [512.0, 1036.0], [570.0, 1028.0], [568.0, 1026.0], [564.0, 1028.0], [562.0, 1144.0], [560.0, 1028.5], [558.0, 1117.0], [556.0, 1087.0], [552.0, 1029.3333333333333], [546.0, 1209.0], [544.0, 1028.0], [602.0, 1102.0], [596.0, 1194.0], [594.0, 1026.0], [592.0, 1024.0], [590.0, 1026.0], [578.0, 1025.0], [576.0, 1084.0], [588.0, 1142.0], [586.0, 1082.0], [584.0, 1026.0], [582.0, 1027.0], [580.0, 1152.5], [636.0, 1235.0], [638.0, 1025.0], [634.0, 1129.0], [612.0, 1027.0], [610.0, 1026.0], [608.0, 1024.0], [630.0, 1080.0], [628.0, 1026.0], [626.0, 1134.0], [624.0, 1024.0], [622.0, 1107.0], [620.0, 1028.0], [618.0, 1028.0], [666.0, 1025.0], [668.0, 1024.0], [664.0, 1026.0], [646.0, 1025.0], [640.0, 1181.0], [662.0, 1118.0], [660.0, 1027.3333333333333], [656.0, 1026.3333333333333], [652.0, 1024.5], [650.0, 1023.0], [648.0, 1025.5], [700.0, 1115.0], [702.0, 1030.0], [698.0, 1161.0], [696.0, 1155.0], [694.0, 1113.5], [692.0, 1112.5], [690.0, 1161.0], [688.0, 1096.5], [686.0, 1026.0], [674.0, 1118.0], [672.0, 1168.0], [678.0, 1069.5], [676.0, 1026.0], [684.0, 1055.6666666666667], [680.0, 1026.0], [730.0, 1022.0], [732.0, 1022.0], [728.0, 1023.0], [708.0, 1020.0], [706.0, 1083.6666666666667], [726.0, 1025.0], [724.0, 1021.0], [722.0, 1065.5], [720.0, 1017.0], [718.0, 1158.0], [716.0, 1136.5], [714.0, 1022.0], [712.0, 1028.0], [742.0, 1108.0], [764.0, 1021.0], [760.0, 1024.0], [758.0, 1022.0], [756.0, 1149.0], [750.0, 1108.3333333333333], [744.0, 1105.0], [740.0, 1024.0], [738.0, 1108.0], [798.0, 1062.5], [792.0, 1035.0], [788.0, 1031.5], [786.0, 1123.0], [782.0, 1027.0], [780.0, 1021.0], [770.0, 1016.0], [768.0, 1089.0], [828.0, 1034.0], [830.0, 1030.0], [826.0, 1091.0], [824.0, 1035.0], [822.0, 1039.0], [820.0, 1030.0], [816.0, 1092.0], [814.0, 1068.0], [802.0, 1061.5], [806.0, 1286.0], [804.0, 1031.0], [812.0, 1073.0], [808.0, 1084.0], [854.0, 1084.0], [848.0, 1046.6666666666667], [844.0, 1087.0], [842.0, 1027.0], [838.0, 1034.0], [834.0, 1112.0], [832.0, 1173.0], [890.0, 1031.0], [884.0, 1085.0], [882.0, 1058.5], [880.0, 1032.0], [876.0, 1033.0], [864.0, 1057.5], [874.0, 1032.0], [872.0, 1060.5], [870.0, 1083.0], [866.0, 1058.0], [926.0, 1029.0], [916.0, 1029.0], [908.0, 1123.3333333333333], [904.0, 1090.0], [900.0, 1124.0], [898.0, 1089.0], [958.0, 1028.0], [952.0, 1029.0], [944.0, 1086.0], [940.0, 1028.0], [938.0, 1032.0], [928.0, 1121.5], [986.0, 1045.6666666666667], [982.0, 1029.0], [976.0, 1055.0], [970.0, 1064.3333333333333], [966.0, 1082.0], [964.0, 1028.0], [960.0, 1028.0], [1020.0, 1068.0], [1022.0, 1067.5], [1018.0, 1024.0], [1016.0, 1027.0], [1014.0, 1051.5], [1012.0, 1024.0], [1008.0, 1026.0], [1006.0, 1052.0], [998.0, 1174.0], [996.0, 1061.3333333333333], [1004.0, 1026.0], [1000.0, 1079.0], [1072.0, 1044.25], [1068.0, 1022.0], [1064.0, 1024.0], [1060.0, 1109.0], [1040.0, 1023.5], [1032.0, 1210.0], [1024.0, 1025.0], [1136.0, 1017.0], [1124.0, 1041.0], [1120.0, 1020.0], [1112.0, 1020.0], [1104.0, 1021.0], [1092.0, 1020.5], [1088.0, 1045.5], [1164.0, 1014.0], [1208.0, 1012.0], [1212.0, 1014.0], [1204.0, 1038.6666666666667], [1188.0, 1053.0], [1180.0, 1034.5], [1152.0, 1018.0], [1156.0, 1015.5], [1160.0, 1014.5], [1176.0, 1070.0], [1172.0, 1070.3333333333333], [1168.0, 1016.0], [1224.0, 1049.0], [1272.0, 1000.5], [1220.0, 1008.6666666666666], [1216.0, 1010.0], [1256.0, 1003.0], [1252.0, 1006.0], [1244.0, 1006.0], [1288.0, 998.0], [1336.0, 990.0], [1340.0, 1010.0], [1324.0, 1047.5], [1320.0, 992.0], [1312.0, 1009.5], [1284.0, 1073.0], [1292.0, 1030.0], [1308.0, 993.0], [1304.0, 994.0], [1300.0, 995.5], [1296.0, 997.0], [1400.0, 986.0], [1404.0, 987.0], [1376.0, 987.0], [1384.0, 1037.0], [1380.0, 1031.75], [1396.0, 1004.0], [1392.0, 1042.3333333333333], [1348.0, 989.6666666666666], [1372.0, 1168.5], [1368.0, 1019.0], [1364.0, 1109.3333333333333], [1360.0, 989.0], [1388.0, 1066.5], [1464.0, 1125.0], [1468.0, 1090.3333333333333], [1432.0, 1022.0], [1416.0, 987.0], [1452.0, 983.0], [1448.0, 1025.0], [1440.0, 1024.0], [1520.0, 1018.0], [1532.0, 1019.0], [1528.0, 980.0], [1524.0, 1065.5], [1472.0, 983.5], [1480.0, 1132.0], [1496.0, 1024.3333333333333], [1488.0, 984.0], [1512.0, 982.0], [1508.0, 1021.0], [1536.0, 1021.0], [1596.0, 1004.0], [1588.0, 975.0], [1540.0, 1000.0], [1580.0, 1018.0], [1568.0, 991.0], [1564.0, 976.0], [1560.0, 977.5], [1556.0, 1017.0], [1552.0, 978.5], [1648.0, 1021.0], [1656.0, 971.0], [1660.0, 971.0], [1636.0, 1092.5], [1632.0, 972.0], [1612.0, 1002.0], [1604.0, 1000.5], [1628.0, 1068.0], [1624.0, 1065.0], [1616.0, 1033.0], [1640.0, 972.0], [1672.0, 971.5], [1724.0, 1070.0], [1716.0, 1049.3333333333333], [1676.0, 970.0], [1668.0, 1019.5], [1664.0, 1052.3333333333333], [1692.0, 967.0], [1688.0, 969.0], [1740.0, 1018.0], [1780.0, 964.0], [1736.0, 966.5], [1728.0, 1220.0], [1772.0, 1021.5], [1768.0, 1076.0], [1756.0, 966.0], [1752.0, 1071.0], [1748.0, 965.5], [1800.0, 1026.5], [1848.0, 946.0], [1844.0, 948.6666666666666], [1804.0, 1028.5], [1796.0, 1094.0], [1792.0, 960.0], [1820.0, 1022.5], [1812.0, 959.0], [1828.0, 954.0], [1824.0, 1045.6666666666667], [1912.0, 931.0], [1916.0, 930.0], [1908.0, 929.0], [1856.0, 943.0], [1864.0, 1082.0], [1868.0, 1085.0], [1880.0, 935.0], [1896.0, 935.0], [1892.0, 933.0], [1968.0, 499.0], [1952.0, 1003.0], [1976.0, 922.0], [1972.0, 924.0], [1932.0, 926.0], [1928.0, 927.0], [1948.0, 923.0], [1944.0, 923.0], [1960.0, 1086.0], [2040.0, 886.0], [2044.0, 883.0], [2016.0, 896.0], [2020.0, 894.0], [2036.0, 889.0], [1984.0, 918.0], [1988.0, 917.0], [1996.0, 913.0], [2012.0, 900.0], [2008.0, 905.0], [2004.0, 911.0], [2000.0, 909.0], [2028.0, 889.0], [2024.0, 894.0], [2072.0, 832.0], [2160.0, 809.0], [2112.0, 949.0], [2152.0, 882.0], [2064.0, 840.5], [2056.0, 848.0], [2048.0, 857.0], [2104.0, 816.0], [2088.0, 824.0], [2080.0, 831.0], [2136.0, 948.0], [2128.0, 814.0], [2120.0, 817.0], [2272.0, 797.0], [2296.0, 948.0], [2248.0, 803.0], [2280.0, 799.0], [2184.0, 807.0], [2176.0, 858.0], [2232.0, 809.0], [2216.0, 879.5], [2208.0, 808.0], [2264.0, 799.0], [2408.0, 954.5], [2368.0, 560.5], [2376.0, 1025.5], [2392.0, 492.5], [2400.0, 857.0], [2320.0, 804.0], [2328.0, 793.0], [2360.0, 787.0], [2336.0, 796.5], [2552.0, 785.0], [2512.0, 793.5], [2536.0, 906.0], [2432.0, 775.0], [2440.0, 850.0], [2456.0, 1018.5], [2488.0, 791.0], [2464.0, 846.0], [2560.0, 444.87499999999994], [2576.0, 782.0], [2616.0, 263.75], [2608.0, 774.0], [2600.0, 775.0], [2592.0, 2.5], [2568.0, 238.0], [2624.0, 311.0], [2680.0, 814.5], [2672.0, 371.0], [2664.0, 251.5], [2656.0, 820.5], [2640.0, 649.6666666666666], [2648.0, 769.5], [2688.0, 567.0], [2696.0, 26.0], [2744.0, 257.66666666666663], [2736.0, 550.2], [2728.0, 646.6666666666666], [2720.0, 760.5], [2704.0, 644.5], [2712.0, 760.0], [2752.0, 756.0], [2808.0, 252.0], [2800.0, 372.25], [2792.0, 830.0], [2784.0, 282.0], [2760.0, 114.42857142857143], [2768.0, 404.25], [2776.0, 44.666666666666664], [2816.0, 433.5], [2824.0, 744.0], [2872.0, 580.8333333333333], [2864.0, 383.1111111111111], [2856.0, 926.0], [2848.0, 835.5], [2832.0, 218.8725490196078], [2840.0, 149.2], [2912.0, 559.0], [2920.0, 437.5], [2928.0, 628.7142857142857], [2936.0, 378.99999999999994], [2880.0, 656.0], [2888.0, 286.2], [2896.0, 953.0], [2904.0, 367.75], [2944.0, 457.57142857142856], [2952.0, 909.75], [3000.0, 439.0], [2992.0, 386.6666666666667], [2984.0, 370.75], [2976.0, 908.0], [2960.0, 705.0], [2968.0, 706.5], [3008.0, 791.6666666666666], [3064.0, 792.0], [3056.0, 525.3333333333333], [3048.0, 635.4], [3040.0, 251.0], [3016.0, 420.2], [3024.0, 755.2], [3032.0, 397.25], [3080.0, 659.3333333333334], [3176.0, 832.5], [3120.0, 653.0], [3072.0, 119.0], [3128.0, 726.9], [3112.0, 392.5], [3104.0, 388.0], [3136.0, 944.0], [3144.0, 640.5], [3152.0, 665.0999999999999], [3160.0, 594.5333333333333], [3184.0, 809.6], [3168.0, 564.6666666666667], [3096.0, 804.3333333333334], [3088.0, 507.5], [3200.0, 685.5555555555555], [3208.0, 866.3750000000001], [3248.0, 646.0544217687075], [3232.0, 800.0], [3240.0, 735.2727272727275], [3224.0, 776.5], [3216.0, 718.5], [2153.0, 813.0], [2145.0, 810.6666666666666], [2169.0, 859.3333333333334], [2057.0, 849.0], [2065.0, 838.0], [2073.0, 830.0], [2097.0, 864.3333333333334], [2089.0, 819.0], [2137.0, 951.3333333333334], [2121.0, 811.0], [2113.0, 815.0], [2281.0, 799.0], [2289.0, 948.0], [2297.0, 799.0], [2241.0, 879.5], [2185.0, 813.0], [2193.0, 997.0], [2201.0, 810.0], [2233.0, 957.0], [2225.0, 952.0], [2209.0, 949.0], [2257.0, 804.0], [2249.0, 801.0], [2417.0, 952.5], [2425.0, 777.0], [2385.0, 859.0], [2393.0, 780.0], [2409.0, 780.0], [2361.0, 788.0], [2305.0, 796.5], [2321.0, 804.0], [2353.0, 790.0], [2337.0, 791.0], [2537.0, 788.5], [2553.0, 786.0], [2497.0, 913.0], [2545.0, 788.0], [2529.0, 790.5], [2441.0, 775.0], [2489.0, 916.0], [2481.0, 854.5], [2473.0, 945.0], [2585.0, 391.5], [2609.0, 776.0], [2593.0, 2.3333333333333335], [2561.0, 15.333333333333334], [2681.0, 153.44444444444446], [2673.0, 335.0], [2665.0, 577.75], [2625.0, 507.25], [2633.0, 608.0], [2641.0, 98.0], [2649.0, 411.66666666666663], [2697.0, 374.125], [2689.0, 672.0], [2745.0, 146.42857142857144], [2737.0, 432.3333333333333], [2729.0, 600.6666666666666], [2721.0, 155.95890410958904], [2705.0, 111.0], [2713.0, 335.5], [2753.0, 132.25000000000003], [2809.0, 376.33333333333337], [2801.0, 792.3333333333334], [2793.0, 227.0], [2785.0, 94.0], [2761.0, 753.5], [2769.0, 377.4], [2777.0, 90.69565217391305], [2833.0, 744.6666666666666], [2817.0, 234.08333333333337], [2865.0, 301.3333333333333], [2873.0, 291.03225806451627], [2857.0, 253.83333333333331], [2849.0, 611.0], [2913.0, 576.8333333333334], [2921.0, 661.6666666666666], [2929.0, 648.6666666666666], [2937.0, 623.0], [2881.0, 169.5], [2889.0, 124.2], [2897.0, 395.6666666666667], [2905.0, 486.54545454545456], [2953.0, 379.5], [2945.0, 397.1111111111111], [3001.0, 368.5882352941176], [2993.0, 933.3333333333334], [2977.0, 352.5], [2961.0, 771.0], [2969.0, 429.0], [3049.0, 340.72727272727275], [3041.0, 469.75], [3009.0, 340.5], [3017.0, 755.0], [3025.0, 245.75], [3033.0, 312.0], [3129.0, 704.1111111111111], [3121.0, 565.5999999999999], [3113.0, 436.0], [3105.0, 691.7391304347826], [3073.0, 789.8], [3081.0, 789.3333333333334], [3089.0, 791.5], [3169.0, 514.0], [3177.0, 493.0], [3185.0, 762.3333333333333], [3193.0, 941.4], [3137.0, 760.6666666666667], [3145.0, 777.0], [3153.0, 592.1999999999999], [3161.0, 592.9333333333333], [3201.0, 651.0], [3249.0, 661.2666666666667], [3209.0, 809.0], [3217.0, 826.2857142857143], [3241.0, 744.8181818181819], [3233.0, 864.3076923076923], [3225.0, 821.6956521739131], [1085.0, 1088.5], [1077.0, 1022.0], [1065.0, 1049.5], [1061.0, 1023.0], [1053.0, 1024.0], [1049.0, 1108.0], [1045.0, 1057.0], [1041.0, 1075.0], [1037.0, 1024.5], [1029.0, 1024.25], [1141.0, 1100.3333333333333], [1129.0, 1041.0], [1117.0, 1047.3333333333333], [1113.0, 1043.0], [1109.0, 1035.3333333333333], [1105.0, 1063.0], [1101.0, 1021.0], [1201.0, 1013.0], [1213.0, 1011.0], [1153.0, 1015.0], [1165.0, 1099.0], [1177.0, 1014.0], [1169.0, 1015.0], [1193.0, 1009.0], [1273.0, 1001.0], [1277.0, 1001.0], [1249.0, 1003.5], [1253.0, 1041.0], [1269.0, 1001.0], [1265.0, 1020.0], [1229.0, 1022.0], [1225.0, 1010.0], [1217.0, 1007.5], [1245.0, 1004.0], [1241.0, 1006.6666666666666], [1233.0, 1027.5], [1261.0, 1058.5], [1341.0, 990.0], [1317.0, 1027.0], [1333.0, 1025.0], [1309.0, 993.5], [1285.0, 998.0], [1289.0, 1031.0], [1305.0, 995.0], [1301.0, 996.0], [1389.0, 1067.0], [1365.0, 988.0], [1353.0, 1024.0], [1345.0, 1024.5], [1457.0, 1009.6666666666666], [1445.0, 1033.0], [1441.0, 1022.0], [1461.0, 983.3333333333334], [1421.0, 1009.3333333333334], [1417.0, 987.0], [1413.0, 1020.0], [1429.0, 1008.6666666666666], [1453.0, 1055.5], [1529.0, 994.3333333333334], [1509.0, 980.0], [1525.0, 977.0], [1501.0, 992.75], [1497.0, 1025.0], [1493.0, 981.5], [1513.0, 994.3333333333334], [1505.0, 1023.0], [1585.0, 1004.0], [1597.0, 1019.0], [1593.0, 975.0], [1589.0, 976.0], [1545.0, 978.0], [1541.0, 979.0], [1537.0, 979.0], [1565.0, 996.5], [1577.0, 1017.5], [1609.0, 1029.0], [1661.0, 1020.0], [1657.0, 971.0], [1653.0, 971.5], [1645.0, 973.0], [1629.0, 1069.0], [1625.0, 1066.0], [1621.0, 1078.0], [1617.0, 1110.5], [1665.0, 1214.0], [1725.0, 1036.3333333333333], [1721.0, 1233.6666666666667], [1713.0, 1044.0], [1709.0, 1055.25], [1705.0, 1072.0], [1693.0, 969.0], [1689.0, 968.0], [1685.0, 1037.6666666666667], [1681.0, 1003.6666666666666], [1785.0, 791.5], [1789.0, 1235.0], [1761.0, 1038.6666666666667], [1765.0, 1080.5], [1781.0, 1085.0], [1777.0, 1084.5], [1733.0, 1018.0], [1753.0, 1071.0], [1773.0, 964.0], [1845.0, 948.0], [1853.0, 993.0], [1829.0, 952.0], [1849.0, 948.0], [1841.0, 949.0], [1821.0, 1091.0], [1817.0, 1023.5], [1809.0, 1165.5], [1837.0, 1021.0], [1833.0, 1192.5], [1913.0, 930.0], [1889.0, 933.0], [1909.0, 932.0], [1857.0, 943.0], [1861.0, 1013.0], [1865.0, 1085.0], [1869.0, 936.0], [1885.0, 1004.5], [1873.0, 936.0], [1901.0, 986.6666666666666], [1929.0, 927.0], [1981.0, 920.0], [1957.0, 976.0], [1953.0, 923.0], [1925.0, 929.3333333333334], [1949.0, 922.0], [1945.0, 924.0], [1937.0, 1086.5], [1961.0, 1088.0], [2041.0, 887.0], [2017.0, 895.0], [2021.0, 894.0], [2025.0, 891.0], [2045.0, 882.0], [2037.0, 888.0], [2033.0, 888.5], [1993.0, 916.5], [1997.0, 1072.0], [2013.0, 901.0], [2009.0, 906.0], [2005.0, 909.0], [2001.0, 913.0], [2029.0, 887.0], [2058.0, 846.0], [2170.0, 820.0], [2114.0, 955.0], [2162.0, 810.0], [2050.0, 857.5], [2066.0, 837.0], [2074.0, 830.0], [2106.0, 940.0], [2098.0, 955.0], [2090.0, 960.0], [2082.0, 824.0], [2130.0, 882.0], [2122.0, 813.0], [2282.0, 943.0], [2242.0, 806.0], [2250.0, 803.0], [2290.0, 968.5], [2274.0, 948.0], [2202.0, 951.0], [2194.0, 810.0], [2186.0, 929.5], [2178.0, 882.0], [2234.0, 805.0], [2226.0, 1031.5], [2218.0, 879.5], [2210.0, 950.0], [2418.0, 779.0], [2370.0, 931.5], [2378.0, 858.5], [2386.0, 782.0], [2402.0, 781.5], [2322.0, 803.0], [2314.0, 1141.0], [2362.0, 786.0], [2346.0, 792.0], [2546.0, 788.0], [2538.0, 787.0], [2514.0, 498.0], [2522.0, 790.0], [2554.0, 785.5], [2434.0, 851.5], [2450.0, 824.3333333333334], [2458.0, 776.0], [2474.0, 771.0], [2466.0, 773.0], [2578.0, 319.25], [2586.0, 286.44444444444446], [2562.0, 785.0], [2602.0, 1086.0], [2618.0, 773.0], [2594.0, 2.0], [2570.0, 854.3333333333334], [2682.0, 268.66666666666663], [2674.0, 587.2], [2666.0, 163.5], [2658.0, 452.5], [2626.0, 430.0], [2634.0, 770.0], [2642.0, 587.0], [2650.0, 601.0], [2698.0, 160.0], [2706.0, 53.5531914893617], [2690.0, 860.0], [2746.0, 22.0], [2738.0, 473.75], [2730.0, 758.0], [2714.0, 763.0], [2810.0, 154.625], [2802.0, 173.00000000000003], [2794.0, 748.0], [2754.0, 127.16666666666666], [2762.0, 390.0], [2770.0, 238.39393939393943], [2778.0, 755.0], [2826.0, 263.2], [2818.0, 350.3636363636364], [2874.0, 366.6], [2866.0, 324.962962962963], [2858.0, 683.0], [2850.0, 183.16666666666669], [2834.0, 743.0], [2842.0, 362.8], [2914.0, 513.6666666666666], [2922.0, 924.0], [2930.0, 279.0], [2938.0, 293.6666666666667], [2882.0, 343.4], [2890.0, 557.25], [2898.0, 332.0], [2906.0, 139.0], [2962.0, 171.28571428571428], [2954.0, 110.0], [3002.0, 213.0], [2994.0, 301.25], [2986.0, 557.6], [2978.0, 538.6666666666666], [2970.0, 423.75], [3066.0, 503.8181818181818], [3058.0, 467.0], [3050.0, 342.8888888888889], [3042.0, 484.1961722488037], [3010.0, 475.3333333333333], [3018.0, 568.2], [3026.0, 713.6], [3034.0, 956.6666666666666], [3082.0, 698.8888888888889], [3074.0, 336.4444444444445], [3130.0, 820.6666666666666], [3122.0, 605.1052631578947], [3114.0, 590.1333333333333], [3106.0, 518.7142857142857], [3138.0, 442.0], [3146.0, 782.0], [3154.0, 737.4375], [3162.0, 634.5714285714286], [3194.0, 648.6666666666666], [3186.0, 595.7499999999999], [3178.0, 506.5], [3170.0, 879.0833333333333], [3098.0, 838.0], [3090.0, 452.5], [3202.0, 703.1818181818181], [3250.0, 580.0969687676222], [3210.0, 737.0909090909091], [3234.0, 761.0], [3242.0, 822.1250000000001], [3226.0, 654.0769230769231], [3218.0, 609.8], [2155.0, 882.5], [2163.0, 809.0], [2147.0, 932.5], [2067.0, 836.0], [2059.0, 846.0], [2051.0, 856.0], [2139.0, 659.0], [2123.0, 813.0], [2115.0, 815.0], [2099.0, 1067.0], [2083.0, 823.0], [2283.0, 796.0], [2299.0, 798.5], [2251.0, 807.0], [2243.0, 806.0], [2275.0, 802.0], [2187.0, 810.0], [2195.0, 809.0], [2235.0, 806.0], [2267.0, 847.6666666666666], [2259.0, 878.0], [2427.0, 849.0], [2371.0, 787.0], [2379.0, 929.0], [2387.0, 780.0], [2395.0, 855.5], [2403.0, 1129.0], [2315.0, 805.0], [2323.0, 801.0], [2347.0, 828.5], [2339.0, 793.0], [2539.0, 789.0], [2499.0, 793.0], [2515.0, 791.0], [2555.0, 785.0], [2531.0, 848.0], [2443.0, 849.0], [2435.0, 778.0], [2491.0, 791.0], [2483.0, 208.0], [2467.0, 1120.0], [2579.0, 147.88888888888889], [2611.0, 828.0], [2603.0, 776.5], [2595.0, 549.6666666666667], [2563.0, 156.0], [2587.0, 111.0], [2683.0, 104.02631578947368], [2675.0, 88.0], [2667.0, 471.0], [2659.0, 665.0], [2627.0, 277.0], [2643.0, 101.0], [2651.0, 496.0], [2699.0, 176.8888888888889], [2707.0, 90.32835820895525], [2747.0, 757.0], [2739.0, 1059.0], [2723.0, 229.41176470588238], [2691.0, 110.6], [2715.0, 28.73913043478261], [2811.0, 1054.5], [2803.0, 387.47058823529414], [2795.0, 159.6875], [2787.0, 168.8], [2755.0, 114.9375], [2763.0, 1052.0], [2771.0, 280.50000000000006], [2779.0, 793.5], [2819.0, 371.0], [2835.0, 742.0], [2843.0, 175.92307692307693], [2827.0, 231.60869565217394], [2875.0, 352.0], [2867.0, 192.2], [2859.0, 249.50000000000003], [2851.0, 453.6666666666667], [2915.0, 327.3333333333333], [2923.0, 407.6666666666667], [2931.0, 691.8], [2939.0, 344.8333333333333], [2883.0, 614.4], [2891.0, 626.8], [2899.0, 317.6], [2907.0, 441.6], [2955.0, 486.75], [2947.0, 493.5999999999999], [3003.0, 596.9], [2995.0, 699.0], [2987.0, 419.99999999999994], [2979.0, 537.6666666666666], [2963.0, 807.0], [2971.0, 703.5], [3067.0, 357.5], [3059.0, 554.8749999999999], [3051.0, 444.35714285714283], [3043.0, 613.3], [3011.0, 507.6], [3019.0, 515.0], [3027.0, 898.0], [3035.0, 371.25], [3131.0, 667.8333333333333], [3115.0, 783.0], [3107.0, 816.7142857142858], [3075.0, 587.0000000000001], [3123.0, 702.0], [3083.0, 790.0], [3091.0, 789.5], [3171.0, 683.4285714285714], [3179.0, 689.0], [3187.0, 911.1666666666666], [3195.0, 887.6], [3139.0, 442.5], [3147.0, 1034.5], [3155.0, 616.7142857142857], [3163.0, 638.4615384615385], [3203.0, 607.75], [3211.0, 742.0], [3219.0, 725.4166666666666], [3243.0, 803.8409090909091], [3235.0, 684.9], [3227.0, 520.0], [539.0, 1090.0], [543.0, 1028.0], [537.0, 1027.0], [519.0, 1029.0], [517.0, 1031.0], [515.0, 1160.5], [513.0, 1161.0], [535.0, 1153.0], [533.0, 1029.0], [531.0, 1029.0], [529.0, 1025.0], [527.0, 1029.0], [525.0, 1119.5], [523.0, 1027.0], [521.0, 1023.0], [573.0, 1084.0], [575.0, 1141.0], [571.0, 1142.0], [567.0, 1115.5], [565.0, 1085.5], [561.0, 1144.0], [555.0, 1207.0], [553.0, 1028.0], [549.0, 1136.0], [547.0, 1029.0], [545.0, 1029.0], [583.0, 1025.0], [605.0, 1084.0], [607.0, 1082.0], [603.0, 1025.0], [599.0, 1132.0], [595.0, 1027.0], [591.0, 1025.0], [589.0, 1025.0], [587.0, 1142.0], [581.0, 1198.0], [579.0, 1141.0], [637.0, 1027.0], [639.0, 1026.0], [633.0, 1157.5], [615.0, 1107.5], [613.0, 1025.0], [611.0, 1139.0], [609.0, 1025.0], [631.0, 1028.0], [627.0, 1027.0], [625.0, 1028.0], [623.0, 1025.0], [619.0, 1026.0], [617.0, 1125.0], [665.0, 1118.0], [669.0, 1168.0], [671.0, 1070.5], [667.0, 1026.0], [663.0, 1121.0], [657.0, 1027.0], [653.0, 1123.0], [651.0, 1026.0], [645.0, 1024.0], [643.0, 1076.0], [641.0, 1026.0], [703.0, 1024.0], [701.0, 1115.0], [699.0, 1114.0], [697.0, 1162.0], [689.0, 1026.0], [681.0, 1026.0], [679.0, 1025.0], [673.0, 1026.0], [731.0, 1022.0], [733.0, 1022.0], [729.0, 1024.0], [725.0, 1024.0], [723.0, 1018.0], [719.0, 1065.5], [713.0, 1112.0], [711.0, 1021.3333333333334], [707.0, 1026.0], [763.0, 1064.0], [765.0, 1020.0], [761.0, 1023.0], [759.0, 1022.0], [755.0, 1104.5], [753.0, 1019.5], [751.0, 1152.0], [747.0, 1021.6666666666666], [743.0, 1023.0], [741.0, 1113.0], [739.0, 1022.0], [737.0, 1065.75], [775.0, 1101.5], [795.0, 1031.0], [797.0, 1033.0], [793.0, 1053.6666666666667], [789.0, 1030.0], [783.0, 1031.0], [781.0, 1096.0], [779.0, 1018.0], [777.0, 1056.5], [773.0, 1046.0], [769.0, 1019.0], [827.0, 1091.0], [825.0, 1030.0], [821.0, 1036.0], [819.0, 1033.5], [817.0, 1035.5], [809.0, 1036.0], [807.0, 1028.0], [801.0, 1031.5], [859.0, 1057.5], [861.0, 1057.5], [857.0, 1029.0], [855.0, 1026.0], [853.0, 1084.0], [851.0, 1029.6666666666667], [845.0, 1060.0], [841.0, 1034.0], [839.0, 1028.0], [837.0, 1059.5], [835.0, 1034.0], [893.0, 1057.5], [895.0, 1033.0], [891.0, 1084.0], [889.0, 1058.0], [887.0, 1032.5], [885.0, 1032.0], [881.0, 1086.0], [879.0, 1033.5], [869.0, 1085.0], [865.0, 1086.0], [877.0, 1033.0], [875.0, 1033.0], [903.0, 1088.5], [925.0, 1051.75], [921.0, 1028.6666666666667], [919.0, 1029.0], [917.0, 1029.0], [913.0, 1031.0], [911.0, 1080.0], [909.0, 1090.0], [905.0, 1088.0], [901.0, 1030.0], [899.0, 1031.0], [897.0, 1088.0], [957.0, 1028.0], [959.0, 1028.5], [955.0, 1028.3333333333333], [933.0, 1057.5], [931.0, 1049.0], [951.0, 1043.25], [947.0, 1056.0], [945.0, 1029.5], [943.0, 1121.0], [941.0, 1028.0], [937.0, 1052.75], [967.0, 1056.0], [991.0, 1041.25], [987.0, 1028.0], [983.0, 1115.0], [981.0, 1117.0], [979.0, 1057.3333333333333], [975.0, 1082.0], [973.0, 1028.0], [963.0, 1028.5], [961.0, 1028.0], [1023.0, 1025.0], [1019.0, 1115.5], [1011.0, 1114.0], [1007.0, 1024.0], [1003.0, 1151.3333333333333], [997.0, 1026.0], [993.0, 1080.0], [1082.0, 1113.0], [1086.0, 1024.0], [1078.0, 1024.0], [1062.0, 1048.5], [1058.0, 1074.0], [1054.0, 1023.5], [1042.0, 1024.0], [1038.0, 1024.5], [1034.0, 1117.25], [1150.0, 1044.3333333333333], [1122.0, 1040.0], [1138.0, 1064.0], [1098.0, 1062.0], [1090.0, 1021.0], [1134.0, 1041.5], [1130.0, 1020.0], [1114.0, 1021.0], [1106.0, 1021.0], [1206.0, 1009.0], [1198.0, 1053.0], [1194.0, 1094.0], [1186.0, 1069.0], [1154.0, 1016.0], [1158.0, 1015.3333333333334], [1266.0, 1005.0], [1270.0, 1001.0], [1230.0, 1010.0], [1262.0, 1003.0], [1258.0, 1003.0], [1242.0, 1006.0], [1238.0, 1046.0], [1286.0, 999.0], [1334.0, 1075.0], [1330.0, 1028.6666666666667], [1314.0, 991.0], [1310.0, 1026.0], [1290.0, 1031.0], [1294.0, 1013.0], [1306.0, 1026.0], [1302.0, 995.0], [1298.0, 1012.5], [1398.0, 1003.5], [1402.0, 987.0], [1394.0, 1005.0], [1354.0, 1025.0], [1374.0, 1096.0], [1370.0, 1171.0], [1386.0, 1111.0], [1422.0, 986.0], [1442.0, 1022.0], [1470.0, 983.0], [1458.0, 983.0], [1418.0, 1004.0], [1414.0, 987.0], [1410.0, 985.5], [1426.0, 995.0], [1454.0, 984.0], [1522.0, 1154.0], [1534.0, 978.5], [1502.0, 1023.0], [1478.0, 1078.3333333333333], [1474.0, 983.5], [1486.0, 1136.0], [1518.0, 980.5], [1506.0, 1001.5], [1590.0, 974.0], [1570.0, 978.0], [1550.0, 978.6666666666666], [1538.0, 1019.0], [1582.0, 1018.0], [1574.0, 1085.5], [1562.0, 978.0], [1558.0, 977.0], [1614.0, 973.5], [1638.0, 1094.0], [1654.0, 1070.0], [1650.0, 1070.0], [1610.0, 1107.0], [1606.0, 1142.0], [1602.0, 973.3333333333334], [1618.0, 1072.0], [1646.0, 1053.0], [1642.0, 973.0], [1678.0, 1020.5], [1718.0, 1090.5], [1670.0, 970.5], [1706.0, 1214.0], [1702.0, 968.5], [1698.0, 1086.0], [1682.0, 1074.0], [1742.0, 1147.0], [1790.0, 1091.0], [1738.0, 966.5], [1730.0, 966.0], [1770.0, 1001.6666666666666], [1766.0, 1079.0], [1758.0, 964.5], [1750.0, 1018.0], [1746.0, 1044.0], [1850.0, 946.0], [1854.0, 943.0], [1846.0, 949.0], [1798.0, 1092.5], [1818.0, 956.0], [1810.0, 1094.0], [1838.0, 1089.0], [1826.0, 954.0], [1906.0, 930.0], [1918.0, 1011.0], [1890.0, 939.0], [1910.0, 931.0], [1886.0, 934.0], [1858.0, 943.0], [1862.0, 941.0], [1870.0, 1084.0], [1882.0, 935.0], [1878.0, 971.0], [1898.0, 934.0], [1894.0, 1003.5], [1970.0, 922.0], [1978.0, 1060.5], [1982.0, 919.5], [1974.0, 923.0], [1934.0, 1007.5], [1930.0, 925.0], [1922.0, 930.0], [1942.0, 924.0], [1938.0, 925.0], [1958.0, 1084.0], [2034.0, 889.0], [2046.0, 881.0], [2018.0, 895.0], [2022.0, 894.0], [2042.0, 885.0], [2014.0, 899.0], [1986.0, 917.0], [1994.0, 1079.0], [1990.0, 916.0], [1998.0, 911.0], [2006.0, 906.0], [2002.0, 910.0], [2030.0, 890.0], [2026.0, 891.0], [2068.0, 835.0], [2124.0, 813.0], [2172.0, 930.5], [2076.0, 828.5], [2060.0, 846.0], [2052.0, 855.0], [2108.0, 817.5], [2092.0, 819.5], [2084.0, 823.0], [2140.0, 815.0], [2116.0, 821.0], [2284.0, 943.0], [2276.0, 946.0], [2300.0, 796.0], [2244.0, 805.0], [2260.0, 804.0], [2252.0, 952.0], [2292.0, 948.5], [2204.0, 808.0], [2196.0, 809.0], [2180.0, 951.0], [2228.0, 804.0], [2212.0, 809.0], [2268.0, 799.0], [2420.0, 853.0], [2428.0, 194.0], [2372.0, 784.0], [2380.0, 929.0], [2396.0, 780.0], [2412.0, 830.0], [2404.0, 780.0], [2364.0, 786.0], [2332.0, 794.5], [2356.0, 798.0], [2348.0, 1129.0], [2548.0, 786.5], [2508.0, 857.0], [2452.0, 774.0], [2460.0, 1118.0], [2492.0, 792.5], [2484.0, 792.0], [2476.0, 795.0], [2676.0, 4.0], [2588.0, 50.714285714285715], [2564.0, 296.66666666666663], [2612.0, 774.0], [2604.0, 775.0], [2620.0, 486.75], [2684.0, 764.0], [2668.0, 435.66666666666663], [2660.0, 139.5], [2636.0, 316.0], [2628.0, 771.5], [2644.0, 169.70000000000002], [2700.0, 97.11538461538461], [2692.0, 109.53846153846152], [2748.0, 153.0], [2732.0, 956.0], [2724.0, 252.5], [2716.0, 147.71428571428572], [2812.0, 749.0], [2804.0, 330.25], [2796.0, 540.0], [2788.0, 639.0999999999999], [2756.0, 106.0], [2764.0, 42.666666666666664], [2772.0, 152.0769230769231], [2780.0, 616.3333333333334], [2828.0, 744.0], [2836.0, 288.1428571428571], [2876.0, 524.5], [2868.0, 139.33333333333334], [2860.0, 346.25], [2852.0, 555.6666666666666], [2820.0, 744.0], [2844.0, 739.0], [2916.0, 371.375], [2924.0, 436.7142857142857], [2940.0, 294.3333333333333], [2884.0, 327.33333333333337], [2892.0, 313.09999999999997], [2900.0, 368.0], [2908.0, 264.5], [2956.0, 463.6666666666667], [2996.0, 302.84615384615387], [2948.0, 715.5], [3004.0, 454.8888888888889], [2988.0, 329.7272727272727], [2980.0, 706.0], [2964.0, 326.58333333333337], [2972.0, 444.5], [3068.0, 502.71428571428567], [3060.0, 458.75], [3052.0, 375.90909090909093], [3044.0, 546.2], [3012.0, 637.6666666666667], [3020.0, 812.8], [3028.0, 525.625], [3036.0, 319.85714285714283], [3076.0, 526.0], [3116.0, 383.22222222222223], [3132.0, 973.0], [3124.0, 784.0], [3084.0, 1063.0], [3196.0, 517.3333333333334], [3140.0, 795.5714285714286], [3148.0, 776.75], [3156.0, 954.25], [3188.0, 639.0000000000001], [3180.0, 587.5], [3172.0, 629.0], [3100.0, 857.0], [3092.0, 815.5], [3204.0, 637.0], [3212.0, 625.0], [3220.0, 686.0], [3244.0, 736.4285714285714], [3228.0, 443.0], [2053.0, 853.0], [2117.0, 814.0], [2149.0, 1053.0], [2109.0, 952.0], [2061.0, 844.0], [2069.0, 831.0], [2077.0, 830.0], [2101.0, 1010.0], [2093.0, 819.0], [2085.0, 823.0], [2133.0, 813.0], [2285.0, 797.0], [2253.0, 805.0], [2237.0, 805.5], [2181.0, 882.5], [2189.0, 810.0], [2205.0, 808.0], [2229.0, 954.0], [2221.0, 1007.3333333333334], [2269.0, 796.0], [2261.0, 799.0], [2245.0, 956.0], [2413.0, 778.0], [2373.0, 784.0], [2381.0, 933.0], [2389.0, 858.0], [2397.0, 782.0], [2429.0, 775.0], [2405.0, 781.0], [2309.0, 943.0], [2317.0, 803.0], [2333.0, 844.3333333333334], [2325.0, 859.0], [2341.0, 1132.0], [2557.0, 784.5], [2501.0, 794.0], [2509.0, 795.0], [2525.0, 791.0], [2549.0, 788.0], [2461.0, 848.0], [2453.0, 778.0], [2445.0, 848.5], [2485.0, 792.0], [2469.0, 772.0], [2581.0, 42.0], [2669.0, 768.0], [2621.0, 166.0], [2597.0, 447.99999999999994], [2565.0, 315.0], [2573.0, 642.5], [2677.0, 472.57142857142856], [2661.0, 769.0], [2629.0, 295.5], [2637.0, 574.3333333333334], [2645.0, 156.5], [2653.0, 556.0], [2693.0, 766.0], [2749.0, 115.0], [2741.0, 512.0], [2733.0, 757.0], [2725.0, 762.0], [2701.0, 215.1111111111111], [2709.0, 255.375], [2813.0, 747.0], [2805.0, 154.0], [2797.0, 295.41666666666663], [2757.0, 753.0], [2765.0, 549.0], [2773.0, 569.4], [2781.0, 756.1666666666666], [2821.0, 42.03999999999999], [2877.0, 532.0], [2869.0, 539.4285714285714], [2861.0, 273.6], [2853.0, 220.0], [2837.0, 355.0], [2845.0, 459.0], [2917.0, 146.0], [2925.0, 453.0], [2933.0, 295.75], [2941.0, 328.1111111111111], [2885.0, 442.0], [2893.0, 589.5], [2901.0, 734.0], [2909.0, 831.3333333333334], [2957.0, 321.1666666666667], [2949.0, 705.0], [3005.0, 510.2], [2997.0, 465.6666666666667], [2989.0, 189.0], [2981.0, 297.8], [2965.0, 304.9166666666667], [2973.0, 532.3333333333334], [3069.0, 828.0], [3061.0, 727.4], [3053.0, 487.9090909090911], [3045.0, 687.0], [3013.0, 797.0], [3021.0, 479.0], [3029.0, 265.3333333333333], [3037.0, 794.4], [3077.0, 656.0], [3085.0, 811.7692307692307], [3117.0, 522.0], [3109.0, 590.0], [3133.0, 945.0], [3125.0, 885.5714285714286], [3093.0, 790.0], [3101.0, 787.0], [3173.0, 614.8235294117646], [3181.0, 596.5384615384615], [3189.0, 626.4615384615386], [3141.0, 723.0], [3149.0, 493.5], [3157.0, 457.0], [3165.0, 856.0], [3197.0, 719.6], [3205.0, 1392.0], [3213.0, 823.6666666666666], [3221.0, 845.0], [3245.0, 587.7777777777778], [3237.0, 662.7857142857143], [3229.0, 847.7142857142857], [1083.0, 1021.0], [1079.0, 1020.5], [1075.0, 1050.0], [1067.0, 1022.5], [1055.0, 1023.0], [1051.0, 1070.75], [1047.0, 1024.0], [1027.0, 1075.0], [1147.0, 1100.0], [1143.0, 1017.5], [1099.0, 1063.0], [1095.0, 1037.0], [1135.0, 1061.0], [1131.0, 1018.0], [1127.0, 1019.0], [1119.0, 1040.5], [1111.0, 1065.0], [1203.0, 1011.0], [1215.0, 1008.0], [1211.0, 1105.6666666666667], [1207.0, 1134.5], [1183.0, 1040.6666666666667], [1163.0, 1072.0], [1167.0, 1036.5], [1179.0, 1210.0], [1175.0, 1097.0], [1199.0, 1013.0], [1195.0, 1033.5], [1191.0, 1013.3333333333334], [1267.0, 1002.0], [1279.0, 1011.3333333333334], [1251.0, 1004.0], [1259.0, 1002.0], [1255.0, 1023.0], [1275.0, 1018.0], [1231.0, 1216.0], [1223.0, 1029.0], [1247.0, 1028.0], [1243.0, 1044.0], [1235.0, 1028.5], [1263.0, 1004.0], [1339.0, 1007.5], [1343.0, 990.5], [1283.0, 1016.75], [1291.0, 1031.0], [1303.0, 995.0], [1327.0, 1003.6666666666666], [1323.0, 1115.5], [1319.0, 1067.0], [1315.0, 1026.0], [1407.0, 986.0], [1359.0, 1021.75], [1383.0, 1020.0], [1375.0, 1041.0], [1363.0, 1079.0], [1355.0, 989.0], [1351.0, 990.0], [1467.0, 1020.0], [1471.0, 984.0], [1463.0, 984.0], [1411.0, 984.0], [1439.0, 1004.5], [1435.0, 1010.6666666666666], [1431.0, 1004.0], [1451.0, 1003.0], [1447.0, 985.0], [1523.0, 981.0], [1535.0, 1049.0], [1475.0, 1020.0], [1487.0, 1190.0], [1483.0, 1088.25], [1491.0, 1036.6666666666667], [1519.0, 1226.0], [1515.0, 980.5], [1507.0, 1021.5], [1587.0, 997.5], [1599.0, 1024.5], [1575.0, 1158.0], [1591.0, 1019.0], [1547.0, 1049.6666666666667], [1543.0, 998.5], [1563.0, 977.0], [1559.0, 977.0], [1555.0, 1152.0], [1579.0, 1088.0], [1651.0, 1022.0], [1663.0, 971.0], [1607.0, 974.0], [1639.0, 971.0], [1635.0, 1021.5], [1631.0, 1022.0], [1627.0, 1069.0], [1623.0, 1018.5], [1675.0, 1084.3333333333333], [1727.0, 1217.0], [1703.0, 968.0], [1699.0, 967.0], [1695.0, 968.5], [1667.0, 1068.0], [1691.0, 1020.5], [1687.0, 1140.5], [1787.0, 1162.5], [1763.0, 1421.0], [1783.0, 1026.0], [1779.0, 1086.0], [1735.0, 966.0], [1731.0, 1092.0], [1755.0, 1051.6666666666667], [1775.0, 1079.5], [1855.0, 944.0], [1831.0, 1020.0], [1847.0, 947.0], [1807.0, 1091.3333333333333], [1795.0, 1003.6666666666666], [1815.0, 1147.6666666666667], [1811.0, 958.0], [1839.0, 1094.0], [1835.0, 1022.0], [1907.0, 932.0], [1915.0, 1010.0], [1919.0, 938.0], [1911.0, 931.0], [1887.0, 933.0], [1859.0, 939.0], [1867.0, 1013.0], [1871.0, 936.0], [1883.0, 1005.5], [1879.0, 935.0], [1875.0, 937.0], [1903.0, 1016.5], [1895.0, 1074.0], [1891.0, 933.0], [1975.0, 923.0], [1959.0, 1006.0], [1983.0, 915.0], [1979.0, 1196.0], [1971.0, 922.0], [1935.0, 926.0], [1931.0, 925.0], [1927.0, 929.3333333333334], [1951.0, 923.0], [1947.0, 923.5], [1939.0, 924.0], [1967.0, 1006.0], [1963.0, 923.0], [2043.0, 884.0], [2047.0, 869.0], [2019.0, 895.0], [2023.0, 894.0], [2027.0, 1159.0], [2039.0, 887.0], [2035.0, 888.0], [2015.0, 1054.0], [1991.0, 919.0], [1995.0, 916.0], [1999.0, 909.0], [2011.0, 981.5], [2003.0, 907.0], [2031.0, 889.0], [2158.0, 939.6666666666666], [2150.0, 883.0], [2174.0, 809.0], [2118.0, 815.0], [2166.0, 858.6666666666666], [2110.0, 815.0], [2054.0, 854.0], [2062.0, 844.0], [2070.0, 833.0], [2078.0, 828.0], [2102.0, 817.0], [2094.0, 818.0], [2142.0, 955.0], [2126.0, 881.5], [2278.0, 800.0], [2294.0, 800.5], [2302.0, 796.5], [2246.0, 801.0], [2286.0, 799.0], [2198.0, 879.0], [2190.0, 810.0], [2238.0, 959.0], [2230.0, 956.0], [2222.0, 809.0], [2214.0, 996.5], [2262.0, 803.0], [2254.0, 806.0], [2374.0, 930.0], [2414.0, 779.0], [2382.0, 930.0], [2398.0, 1123.0], [2310.0, 842.0], [2366.0, 857.5], [2350.0, 791.5], [2534.0, 830.0], [2550.0, 900.0], [2558.0, 87.33333333333333], [2502.0, 796.0], [2526.0, 848.0], [2542.0, 788.3333333333334], [2494.0, 852.0], [2438.0, 824.0], [2462.0, 776.0], [2486.0, 792.0], [2478.0, 794.5], [2470.0, 772.0], [2574.0, 260.0], [2622.0, 544.3333333333334], [2606.0, 930.0], [2598.0, 2.0], [2582.0, 386.0], [2590.0, 70.75], [2686.0, 766.5], [2678.0, 65.0], [2670.0, 156.0], [2662.0, 565.5], [2630.0, 771.0], [2638.0, 770.0], [2654.0, 151.0], [2702.0, 171.83333333333334], [2798.0, 142.17241379310343], [2750.0, 179.8125], [2742.0, 463.0], [2726.0, 760.0], [2694.0, 763.0], [2710.0, 116.1], [2718.0, 350.8], [2814.0, 410.30000000000007], [2806.0, 184.875], [2790.0, 750.5], [2758.0, 70.38095238095238], [2766.0, 155.37190082644628], [2774.0, 199.55], [2782.0, 711.0], [2822.0, 180.86842105263162], [2878.0, 506.57142857142856], [2870.0, 272.5], [2862.0, 450.2], [2854.0, 186.0], [2830.0, 745.5], [2838.0, 342.8333333333333], [2846.0, 614.0], [2918.0, 570.3333333333334], [2926.0, 439.0], [2934.0, 257.75], [2942.0, 509.625], [2886.0, 408.2], [2894.0, 589.5], [2902.0, 732.0], [2950.0, 596.0], [2966.0, 371.0769230769231], [3006.0, 567.6666666666666], [2998.0, 425.25], [2990.0, 416.3333333333333], [2982.0, 575.3846153846154], [3070.0, 610.5], [3062.0, 793.0], [3046.0, 387.0], [2974.0, 773.0], [3014.0, 232.0], [3022.0, 492.22222222222223], [3030.0, 459.5], [3038.0, 394.22222222222223], [3198.0, 707.4166666666667], [3078.0, 937.0], [3134.0, 776.3333333333334], [3126.0, 478.13333333333344], [3118.0, 659.8461538461539], [3110.0, 887.4285714285714], [3142.0, 642.3333333333334], [3150.0, 680.6666666666666], [3158.0, 808.5], [3166.0, 1005.7142857142856], [3190.0, 603.6666666666667], [3182.0, 782.0], [3174.0, 750.2307692307693], [3102.0, 580.5714285714287], [3086.0, 695.5], [3206.0, 567.5999999999999], [3214.0, 1087.5], [3246.0, 665.9166666666666], [3238.0, 699.5], [3230.0, 810.2], [3222.0, 516.0], [2079.0, 827.0], [2071.0, 830.0], [2055.0, 850.0], [2103.0, 816.0], [2087.0, 821.5], [2207.0, 927.5], [2303.0, 795.0], [2295.0, 799.0], [2287.0, 798.0], [2239.0, 803.0], [2183.0, 811.0], [2191.0, 811.0], [2199.0, 363.0], [2223.0, 806.0], [2271.0, 1023.0], [2255.0, 1250.0], [2423.0, 827.0], [2383.0, 782.0], [2431.0, 777.5], [2391.0, 1120.0], [2415.0, 782.0], [2407.0, 779.0], [2359.0, 881.6666666666666], [2327.0, 799.0], [2351.0, 862.5], [2343.0, 941.0], [2543.0, 788.0], [2559.0, 56.900000000000006], [2503.0, 793.0], [2511.0, 793.0], [2519.0, 791.5], [2527.0, 905.0], [2455.0, 921.0], [2447.0, 774.0], [2495.0, 791.0], [2479.0, 793.0], [2471.0, 1116.0], [2567.0, 895.5], [2615.0, 773.3333333333334], [2607.0, 774.0], [2599.0, 776.0], [2583.0, 291.6666666666667], [2591.0, 617.4285714285714], [2687.0, 763.0], [2679.0, 42.81818181818181], [2671.0, 133.48730964467012], [2663.0, 364.0], [2631.0, 441.0], [2647.0, 341.0], [2655.0, 462.5], [2703.0, 227.9230769230769], [2695.0, 24.0], [2751.0, 755.0], [2743.0, 254.87500000000003], [2735.0, 804.0], [2727.0, 611.0], [2711.0, 762.0], [2719.0, 13.0], [2815.0, 274.72727272727275], [2807.0, 700.0], [2799.0, 66.8], [2791.0, 191.33333333333334], [2759.0, 187.56], [2767.0, 86.66666666666667], [2775.0, 752.0], [2783.0, 102.66412213740459], [2823.0, 744.5], [2879.0, 121.0], [2871.0, 380.0], [2863.0, 837.5], [2855.0, 379.6], [2831.0, 485.25], [2839.0, 453.5], [2847.0, 327.49999999999994], [2919.0, 366.0], [2927.0, 74.5], [2935.0, 305.0], [2943.0, 286.8571428571429], [2887.0, 426.83333333333337], [2895.0, 254.0], [2903.0, 504.0], [2911.0, 535.0], [2951.0, 161.66666666666666], [3007.0, 412.8], [2999.0, 595.5], [2991.0, 363.33333333333337], [2983.0, 326.66666666666663], [2959.0, 806.25], [2975.0, 425.0], [3071.0, 670.8], [3063.0, 905.5], [3055.0, 667.5], [3047.0, 817.25], [3015.0, 375.14285714285717], [3023.0, 687.5], [3031.0, 580.7230769230772], [3039.0, 442.4], [3135.0, 522.0], [3079.0, 900.0], [3119.0, 618.5], [3111.0, 570.8333333333333], [3127.0, 517.5], [3087.0, 931.7142857142858], [3095.0, 787.6666666666666], [3103.0, 786.6666666666666], [3175.0, 752.3750000000001], [3183.0, 843.4444444444445], [3191.0, 511.3999999999999], [3199.0, 686.1428571428571], [3143.0, 619.1666666666666], [3151.0, 903.9999999999999], [3159.0, 591.6666666666666], [3167.0, 486.83333333333337], [3247.0, 787.3000000000001], [3207.0, 637.0], [3215.0, 466.0], [3223.0, 725.9], [3239.0, 506.0], [3231.0, 700.5], [1.0, 995.0]], "isOverall": false, "label": "HTTP请求长链接转短链接", "isController": false}, {"data": [[3247.9559685572553, 580.1485846075303]], "isOverall": false, "label": "HTTP请求长链接转短链接-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3250.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 594594.0, "minX": 1.64865048E12, "maxY": 2120736.5, "series": [{"data": [[1.6486506E12, 1941142.05], [1.6486509E12, 1566496.6666666667], [1.64865078E12, 1941204.15], [1.64865072E12, 1845909.3333333333], [1.64865108E12, 736876.2166666667], [1.64865084E12, 2120736.5], [1.64865054E12, 1988268.6333333333], [1.64865096E12, 1669914.6833333333], [1.64865048E12, 1420488.45], [1.64865102E12, 1602115.0666666667], [1.64865066E12, 2049175.0833333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6486506E12, 1306852.4333333333], [1.6486509E12, 1264849.3], [1.64865078E12, 1306553.9666666666], [1.64865072E12, 1242710.3333333333], [1.64865108E12, 594594.0], [1.64865084E12, 1468326.9333333333], [1.64865054E12, 1338731.9], [1.64865096E12, 1347536.6666666667], [1.64865048E12, 955690.2666666667], [1.64865102E12, 1293590.8333333333], [1.64865066E12, 1379650.0666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64865108E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 440.3246999341601, "minX": 1.64865048E12, "maxY": 631.9731329720001, "series": [{"data": [[1.6486506E12, 603.3464459759296], [1.6486509E12, 619.3588786954072], [1.64865078E12, 602.3434041594535], [1.64865072E12, 631.9731329720001], [1.64865108E12, 557.6156695156707], [1.64865084E12, 537.130617391105], [1.64865054E12, 587.658773127025], [1.64865096E12, 585.2407123615791], [1.64865048E12, 440.3246999341601], [1.64865102E12, 607.8846644321335], [1.64865066E12, 568.611368699237]], "isOverall": false, "label": "HTTP请求长链接转短链接", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64865108E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 440.2519708965692, "minX": 1.64865048E12, "maxY": 631.9035474343573, "series": [{"data": [[1.6486506E12, 603.2798961770121], [1.6486509E12, 619.28149324454], [1.64865078E12, 602.2779350433516], [1.64865072E12, 631.9035474343573], [1.64865108E12, 557.5440170940149], [1.64865084E12, 537.068460752451], [1.64865054E12, 587.5939075130347], [1.64865096E12, 585.1642502244977], [1.64865048E12, 440.2519708965692], [1.64865102E12, 607.8048109751379], [1.64865066E12, 568.5479883763813]], "isOverall": false, "label": "HTTP请求长链接转短链接", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64865108E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.003399968426776469, "minX": 1.64865048E12, "maxY": 3.254756317841806, "series": [{"data": [[1.6486506E12, 0.0037621947267548663], [1.6486509E12, 0.0044005242363656], [1.64865078E12, 0.004337236331531481], [1.64865072E12, 0.00441725357826748], [1.64865108E12, 0.005908289241622643], [1.64865084E12, 0.004026941502219503], [1.64865054E12, 0.0035460672397013954], [1.64865096E12, 0.004980544747081627], [1.64865048E12, 3.254756317841806], [1.64865102E12, 0.004252864603632419], [1.64865066E12, 0.003399968426776469]], "isOverall": false, "label": "HTTP请求长链接转短链接", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64865108E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64865048E12, "maxY": 2517.0, "series": [{"data": [[1.6486506E12, 1545.0], [1.6486509E12, 1455.0], [1.64865078E12, 1274.0], [1.64865072E12, 1413.0], [1.64865108E12, 1518.0], [1.64865084E12, 1141.0], [1.64865054E12, 1257.0], [1.64865096E12, 1498.0], [1.64865048E12, 2517.0], [1.64865102E12, 1349.0], [1.64865066E12, 1317.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6486506E12, 559.0], [1.6486509E12, 1067.0], [1.64865078E12, 873.0], [1.64865072E12, 1018.0], [1.64865108E12, 1024.0], [1.64865084E12, 761.0], [1.64865054E12, 840.9000000000015], [1.64865096E12, 733.0], [1.64865048E12, 1008.0], [1.64865102E12, 973.0], [1.64865066E12, 809.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6486506E12, 619.0], [1.6486509E12, 1210.0], [1.64865078E12, 991.9900000000016], [1.64865072E12, 1204.0], [1.64865108E12, 1188.9900000000016], [1.64865084E12, 915.9900000000016], [1.64865054E12, 952.9900000000016], [1.64865096E12, 838.0], [1.64865048E12, 1183.0], [1.64865102E12, 1112.9900000000016], [1.64865066E12, 912.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6486506E12, 581.0], [1.6486509E12, 1105.0], [1.64865078E12, 916.0], [1.64865072E12, 1082.0], [1.64865108E12, 1070.0], [1.64865084E12, 811.0], [1.64865054E12, 882.0], [1.64865096E12, 769.0], [1.64865048E12, 1064.9500000000007], [1.64865102E12, 1014.0], [1.64865066E12, 846.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6486506E12, 0.0], [1.6486509E12, 0.0], [1.64865078E12, 0.0], [1.64865072E12, 0.0], [1.64865108E12, 0.0], [1.64865084E12, 0.0], [1.64865054E12, 0.0], [1.64865096E12, 0.0], [1.64865048E12, 0.0], [1.64865102E12, 0.0], [1.64865066E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6486506E12, 485.0], [1.6486509E12, 877.0], [1.64865078E12, 741.0], [1.64865072E12, 814.0], [1.64865108E12, 829.0], [1.64865084E12, 518.0], [1.64865054E12, 721.0], [1.64865096E12, 584.0], [1.64865048E12, 770.0], [1.64865102E12, 837.0], [1.64865066E12, 708.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64865108E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 81.0, "minX": 305.0, "maxY": 1077.0, "series": [{"data": [[11017.0, 297.0], [305.0, 81.0], [1886.0, 1028.0], [3124.0, 1077.0], [3310.0, 932.0], [3452.0, 950.0], [3416.0, 1018.0], [3492.0, 843.0], [3662.0, 955.0], [3690.0, 789.5], [3592.0, 834.0], [3750.0, 940.0], [3872.0, 851.0], [3916.0, 979.0], [3952.0, 857.0], [4070.0, 878.0], [4008.0, 840.0], [3978.0, 866.0], [4002.0, 948.0], [4046.0, 790.0], [4042.0, 866.0], [4056.0, 840.0], [4050.0, 764.0], [4068.0, 846.0], [4040.0, 890.0], [3990.0, 885.5], [4076.0, 817.0], [4038.0, 803.0], [4340.0, 776.0], [4228.0, 809.0], [4096.0, 831.0], [4140.0, 890.0], [4148.0, 753.0], [4184.0, 963.0], [4152.0, 846.0], [4268.0, 795.0], [4252.0, 817.0], [4244.0, 994.0], [4344.0, 942.0], [4304.0, 843.0], [4328.0, 927.0], [4332.0, 831.0], [4544.0, 718.0], [4524.0, 804.0], [4532.0, 676.0], [4380.0, 755.0], [4404.0, 745.0], [4412.0, 876.0], [4356.0, 797.0], [4440.0, 919.0], [4444.0, 799.0], [4552.0, 701.0], [4576.0, 777.0], [4508.0, 808.0], [4368.0, 834.0], [4612.0, 543.0], [4840.0, 675.0], [4732.0, 721.0], [4616.0, 752.0], [4736.0, 759.0], [4776.0, 741.0], [4652.0, 828.0], [4724.0, 770.0], [4796.0, 810.0], [4908.0, 582.0], [4912.0, 687.0], [5020.0, 651.0], [5024.0, 699.0], [4948.0, 703.0], [4936.0, 703.0], [4896.0, 671.0], [4904.0, 715.0], [4972.0, 672.0], [4984.0, 687.0], [4868.0, 661.0], [5100.0, 620.0], [5104.0, 727.0], [5096.0, 696.0], [5108.0, 700.0], [5088.0, 672.0], [5080.0, 654.0], [4916.0, 670.0], [5156.0, 687.0], [5160.0, 657.0], [5244.0, 609.0], [5120.0, 621.0], [5136.0, 646.0], [5132.0, 842.0], [5284.0, 693.0], [5248.0, 612.0], [5260.0, 694.0], [5360.0, 648.0], [5212.0, 643.0], [5428.0, 636.0], [5476.0, 631.0], [5444.0, 636.0], [5440.0, 628.0], [5604.0, 651.0], [5568.0, 595.0], [5388.0, 626.0], [5400.0, 624.0], [5608.0, 664.0], [5620.0, 643.0], [5516.0, 621.0], [5528.0, 642.0], [5512.0, 611.0], [5824.0, 618.0], [5652.0, 650.5], [5756.0, 596.0], [5636.0, 697.0], [5716.0, 590.0], [5696.0, 613.0], [5772.0, 619.0], [5764.0, 594.0], [5860.0, 588.0], [5856.0, 578.0], [5960.0, 607.0], [5904.0, 605.0], [5992.0, 571.0], [5920.0, 741.0], [5984.0, 629.0], [5936.0, 587.0], [5968.0, 547.0], [6280.0, 554.0], [6156.0, 560.0], [6320.0, 524.0], [6180.0, 537.0], [6448.0, 520.0], [6484.0, 589.0], [6640.0, 497.0], [6628.0, 520.0], [6652.0, 550.0], [6588.0, 532.0], [6596.0, 518.0], [6796.0, 497.0], [6820.0, 457.0], [6748.0, 521.0], [6864.0, 513.0], [6840.0, 507.0], [6832.0, 511.0], [6812.0, 472.0], [7116.0, 471.0], [6928.0, 482.0], [7076.0, 500.0], [6940.0, 506.0], [7028.0, 492.0], [7132.0, 508.0], [6916.0, 517.0], [7164.0, 506.0], [7068.0, 502.0], [7176.0, 478.0], [7380.0, 464.0], [7300.0, 430.0], [7376.0, 464.0], [7212.0, 472.0], [7248.0, 473.0], [7256.0, 502.0], [7252.0, 476.0], [7244.0, 457.0], [7324.0, 465.0], [7428.0, 448.0], [7544.0, 455.0], [7440.0, 460.0], [7632.0, 460.0], [7464.0, 468.0], [7708.0, 455.0], [7680.0, 443.0], [11128.0, 305.0], [11168.0, 300.0], [10955.0, 223.0], [4229.0, 972.0], [4273.0, 769.0], [4277.0, 733.0], [4281.0, 873.0], [4261.0, 756.0], [4337.0, 915.0], [4165.0, 872.0], [4169.0, 847.0], [4173.0, 901.0], [4253.0, 846.0], [4097.0, 899.0], [4289.0, 810.0], [4153.0, 858.0], [4417.0, 574.0], [4397.0, 764.0], [4501.0, 787.0], [4565.0, 758.0], [4569.0, 692.0], [4573.0, 771.0], [4525.0, 868.0], [4553.0, 862.0], [4849.0, 706.0], [4701.0, 741.0], [4673.0, 734.0], [4685.0, 788.0], [4649.0, 731.0], [4653.0, 792.0], [4753.0, 771.0], [4765.0, 776.0], [4861.0, 734.0], [4737.0, 666.0], [4777.0, 723.0], [4789.0, 712.0], [4793.0, 833.0], [4713.0, 670.0], [4705.0, 653.0], [4869.0, 700.0], [4993.0, 729.0], [5117.0, 686.0], [5109.0, 700.0], [4953.0, 795.0], [4933.0, 619.0], [4937.0, 696.0], [4941.0, 740.0], [4989.0, 709.0], [4865.0, 745.0], [4909.0, 710.0], [4885.0, 795.0], [5065.0, 665.0], [5141.0, 671.0], [5285.0, 655.0], [5289.0, 649.0], [5237.0, 622.0], [5245.0, 636.0], [5229.0, 662.0], [5145.0, 672.0], [5313.0, 745.0], [5181.0, 716.0], [5221.0, 618.0], [5205.0, 627.0], [5437.0, 623.0], [5569.0, 657.0], [5413.0, 705.0], [5465.0, 627.0], [5597.0, 643.0], [5377.0, 642.0], [5401.0, 616.0], [5561.0, 645.0], [5565.0, 597.0], [5521.0, 584.0], [5533.0, 588.0], [5505.0, 642.0], [5629.0, 599.0], [5617.0, 566.0], [5613.0, 615.0], [5645.0, 634.0], [5673.0, 588.0], [5785.0, 647.0], [5693.0, 603.0], [5877.0, 582.0], [5781.0, 582.0], [5861.0, 504.0], [5661.0, 654.0], [6001.0, 560.0], [5985.0, 545.0], [5909.0, 596.0], [5941.0, 577.0], [5957.0, 491.0], [6325.0, 490.0], [6305.0, 604.0], [6353.0, 544.0], [6589.0, 479.0], [6605.0, 484.0], [6569.0, 522.0], [6417.0, 603.0], [6437.0, 517.0], [6613.0, 497.0], [6833.0, 535.0], [6817.0, 515.0], [6745.0, 513.0], [6749.0, 489.0], [6741.0, 523.0], [6761.0, 484.0], [7073.0, 472.0], [6993.0, 526.0], [7133.0, 481.0], [7089.0, 471.0], [7021.0, 470.0], [7117.0, 501.0], [6949.0, 503.0], [7373.0, 453.0], [7261.0, 465.0], [7349.0, 463.0], [7353.0, 479.0], [7357.0, 461.0], [7381.0, 461.0], [7245.0, 442.0], [7225.0, 472.0], [7277.0, 441.0], [7189.0, 492.0], [7233.0, 474.0], [7241.0, 466.0], [7437.0, 435.0], [7441.0, 453.0], [7433.0, 461.0], [7709.0, 437.0], [7757.0, 428.0], [7921.0, 420.0], [2449.0, 109.0], [3439.0, 987.0], [3475.0, 971.0], [3639.0, 394.0], [3655.0, 1062.0], [3647.0, 944.0], [3605.0, 871.0], [3691.0, 941.0], [3705.0, 843.0], [3695.0, 899.0], [3737.0, 786.0], [3827.0, 937.0], [3747.0, 990.0], [3897.0, 1029.0], [3869.0, 814.0], [4021.0, 794.0], [4051.0, 836.0], [4023.0, 873.0], [4035.0, 856.0], [3971.0, 888.0], [4047.0, 845.0], [4330.0, 840.0], [4282.0, 811.0], [4182.0, 768.0], [4102.0, 862.0], [4166.0, 883.0], [4158.0, 887.0], [4314.0, 776.0], [4138.0, 940.0], [4234.0, 822.0], [4254.0, 866.0], [4154.0, 884.0], [4246.0, 953.0], [4414.0, 841.0], [4510.0, 661.0], [4522.0, 851.0], [4422.0, 737.0], [4442.0, 778.0], [4582.0, 806.0], [4370.0, 777.0], [4406.0, 946.0], [4606.0, 801.0], [4518.0, 799.0], [4822.0, 736.0], [4638.0, 756.0], [4650.0, 771.0], [4810.0, 767.0], [4794.0, 708.0], [4770.0, 782.0], [4610.0, 743.0], [4726.0, 868.0], [4682.0, 831.0], [4674.0, 835.0], [4750.0, 751.0], [4766.0, 763.0], [4850.0, 654.0], [4886.0, 708.0], [5038.0, 643.0], [5002.0, 778.0], [4994.0, 781.0], [4942.0, 722.0], [4930.0, 707.0], [4890.0, 698.5], [4978.0, 685.0], [5090.0, 666.0], [5094.0, 656.0], [5102.0, 710.0], [5062.0, 689.0], [5162.0, 643.0], [5150.0, 647.0], [5146.0, 694.0], [5266.0, 658.0], [5258.0, 643.0], [5246.0, 648.0], [5406.0, 621.0], [5582.0, 623.0], [5462.0, 618.0], [5466.0, 660.0], [5590.0, 630.0], [5418.0, 605.0], [5414.0, 753.0], [5482.0, 638.0], [5390.0, 654.0], [5378.0, 699.0], [5490.0, 632.0], [5606.0, 651.0], [5630.0, 611.0], [5622.0, 675.0], [5538.0, 611.0], [5562.0, 612.0], [5834.0, 614.0], [5710.0, 631.0], [5774.0, 624.0], [5694.0, 616.0], [5858.0, 624.0], [5790.0, 652.0], [5842.0, 575.0], [5994.0, 784.0], [5894.0, 618.0], [6086.0, 514.0], [6038.0, 538.0], [6046.0, 586.0], [6138.0, 532.0], [6022.0, 668.0], [6234.0, 555.0], [6322.0, 606.5], [6194.0, 536.0], [6646.0, 506.0], [6638.0, 532.0], [6518.0, 519.0], [6730.0, 510.0], [6750.0, 531.0], [6854.0, 522.0], [7014.0, 486.0], [7082.0, 488.0], [7066.0, 464.5], [7078.0, 486.0], [6946.0, 485.0], [7090.0, 455.0], [7110.0, 498.0], [7394.0, 468.0], [7190.0, 469.0], [7254.0, 463.0], [7330.0, 470.0], [7306.0, 467.0], [7310.0, 452.0], [7602.0, 454.0], [7470.0, 458.0], [7642.0, 437.0], [7742.0, 440.0], [7878.0, 424.0], [7766.0, 435.0], [7826.0, 434.0], [7790.0, 460.0], [8812.0, 313.0], [8967.0, 279.0], [11671.0, 282.0], [4215.0, 782.0], [4207.0, 857.5], [4163.0, 884.0], [4307.0, 803.0], [4191.0, 854.0], [4123.0, 907.0], [4139.0, 874.0], [4223.0, 859.0], [4567.0, 842.0], [4355.0, 697.0], [4579.0, 767.0], [4407.0, 741.0], [4547.0, 783.0], [4575.0, 769.0], [4527.0, 782.0], [4595.0, 814.0], [4503.0, 777.0], [4523.0, 797.0], [4443.0, 792.0], [4427.0, 810.0], [4827.0, 686.0], [4847.0, 740.0], [4807.0, 712.0], [4615.0, 799.0], [4715.0, 777.0], [4747.0, 749.0], [4767.0, 777.0], [4783.0, 757.0], [4707.0, 738.0], [4927.0, 823.0], [4883.0, 767.0], [5043.0, 629.0], [5047.0, 717.0], [5115.0, 616.0], [4955.0, 637.0], [4967.0, 686.0], [4903.0, 680.0], [5071.0, 644.0], [5083.0, 719.0], [5063.0, 662.0], [5335.0, 621.0], [5135.0, 616.0], [5355.0, 641.0], [5167.0, 667.0], [5331.0, 648.0], [5171.0, 666.0], [5223.0, 733.0], [5419.0, 637.0], [5587.0, 630.0], [5583.0, 577.0], [5467.0, 670.0], [5451.0, 650.0], [5455.0, 590.0], [5471.0, 631.0], [5539.0, 676.0], [5531.0, 627.0], [5619.0, 612.0], [5515.0, 670.0], [5519.0, 577.0], [5751.0, 633.0], [5707.0, 610.0], [5715.0, 621.0], [5759.0, 583.0], [5719.0, 611.0], [5735.0, 631.0], [5651.0, 706.0], [5787.0, 602.0], [5803.0, 642.0], [5807.0, 618.0], [5683.0, 663.0], [5675.0, 607.0], [5875.0, 706.0], [5863.0, 609.0], [5959.0, 578.0], [5891.0, 595.0], [6135.0, 523.0], [6015.0, 542.0], [6215.0, 560.0], [6275.0, 577.0], [6655.0, 505.0], [6563.0, 521.0], [6531.0, 511.0], [6571.0, 535.0], [6627.0, 494.0], [6639.0, 562.0], [6619.0, 515.0], [6803.0, 450.0], [6795.0, 505.0], [6835.0, 500.0], [6883.0, 472.0], [6743.0, 514.0], [7051.0, 475.0], [6987.0, 498.0], [7151.0, 475.0], [7155.0, 531.0], [7371.0, 452.0], [7411.0, 461.0], [7387.0, 432.0], [7383.0, 471.0], [7283.0, 467.0], [7223.0, 464.0], [7287.0, 489.0], [7343.0, 487.0], [7243.0, 470.0], [7231.0, 463.0], [7599.0, 440.0], [7471.0, 455.0], [7531.0, 473.0], [7855.0, 433.0], [7691.0, 458.0], [7787.0, 449.0], [7795.0, 447.0], [11094.0, 286.0], [10822.0, 278.0], [12070.0, 282.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 12070.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 81.0, "minX": 305.0, "maxY": 1077.0, "series": [{"data": [[11017.0, 297.0], [305.0, 81.0], [1886.0, 1028.0], [3124.0, 1077.0], [3310.0, 932.0], [3452.0, 950.0], [3416.0, 1018.0], [3492.0, 843.0], [3662.0, 955.0], [3690.0, 789.0], [3592.0, 834.0], [3750.0, 940.0], [3872.0, 851.0], [3916.0, 979.0], [3952.0, 857.0], [4070.0, 878.0], [4008.0, 840.0], [3978.0, 866.0], [4002.0, 948.0], [4046.0, 790.0], [4042.0, 866.0], [4056.0, 840.0], [4050.0, 764.0], [4068.0, 846.0], [4040.0, 889.0], [3990.0, 885.5], [4076.0, 817.0], [4038.0, 802.5], [4340.0, 776.0], [4228.0, 809.0], [4096.0, 831.0], [4140.0, 890.0], [4148.0, 753.0], [4184.0, 963.0], [4152.0, 846.0], [4268.0, 795.0], [4252.0, 817.0], [4244.0, 994.0], [4344.0, 942.0], [4304.0, 843.0], [4328.0, 927.0], [4332.0, 831.0], [4544.0, 718.0], [4524.0, 804.0], [4532.0, 676.0], [4380.0, 755.0], [4404.0, 745.0], [4412.0, 876.0], [4356.0, 797.0], [4440.0, 919.0], [4444.0, 798.0], [4552.0, 701.0], [4576.0, 777.0], [4508.0, 808.0], [4368.0, 834.0], [4612.0, 543.0], [4840.0, 675.0], [4732.0, 721.0], [4616.0, 751.0], [4736.0, 759.0], [4776.0, 741.0], [4652.0, 827.5], [4724.0, 770.0], [4796.0, 810.0], [4908.0, 582.0], [4912.0, 687.0], [5020.0, 651.0], [5024.0, 699.0], [4948.0, 703.0], [4936.0, 703.0], [4896.0, 671.0], [4904.0, 715.0], [4972.0, 672.0], [4984.0, 686.0], [4868.0, 661.0], [5100.0, 620.0], [5104.0, 727.0], [5096.0, 696.0], [5108.0, 700.0], [5088.0, 672.0], [5080.0, 654.0], [4916.0, 670.0], [5156.0, 687.0], [5160.0, 657.0], [5244.0, 609.0], [5120.0, 621.0], [5136.0, 646.0], [5132.0, 842.0], [5284.0, 693.0], [5248.0, 612.0], [5260.0, 694.0], [5360.0, 648.0], [5212.0, 643.0], [5428.0, 636.0], [5476.0, 631.0], [5444.0, 636.0], [5440.0, 627.0], [5604.0, 651.0], [5568.0, 594.0], [5388.0, 626.0], [5400.0, 624.0], [5608.0, 664.0], [5620.0, 643.0], [5516.0, 621.0], [5528.0, 642.0], [5512.0, 611.0], [5824.0, 618.0], [5652.0, 650.0], [5756.0, 596.0], [5636.0, 697.0], [5716.0, 590.0], [5696.0, 613.0], [5772.0, 619.0], [5764.0, 594.0], [5860.0, 588.0], [5856.0, 578.0], [5960.0, 606.0], [5904.0, 605.0], [5992.0, 571.0], [5920.0, 741.0], [5984.0, 629.0], [5936.0, 586.5], [5968.0, 547.0], [6280.0, 554.0], [6156.0, 560.0], [6320.0, 524.0], [6180.0, 537.0], [6448.0, 520.0], [6484.0, 589.0], [6640.0, 497.0], [6628.0, 520.0], [6652.0, 550.0], [6588.0, 532.0], [6596.0, 518.0], [6796.0, 497.0], [6820.0, 457.0], [6748.0, 521.0], [6864.0, 513.0], [6840.0, 507.0], [6832.0, 511.0], [6812.0, 472.0], [7116.0, 471.0], [6928.0, 482.0], [7076.0, 500.0], [6940.0, 506.0], [7028.0, 492.0], [7132.0, 508.0], [6916.0, 517.0], [7164.0, 506.0], [7068.0, 502.0], [7176.0, 478.0], [7380.0, 464.0], [7300.0, 430.0], [7376.0, 464.0], [7212.0, 472.0], [7248.0, 473.0], [7256.0, 502.0], [7252.0, 476.0], [7244.0, 457.0], [7324.0, 465.0], [7428.0, 448.0], [7544.0, 455.0], [7440.0, 460.0], [7632.0, 460.0], [7464.0, 468.0], [7708.0, 455.0], [7680.0, 443.0], [11128.0, 305.0], [11168.0, 300.0], [10955.0, 223.0], [4229.0, 972.0], [4273.0, 769.0], [4277.0, 733.0], [4281.0, 873.0], [4261.0, 756.0], [4337.0, 915.0], [4165.0, 872.0], [4169.0, 847.0], [4173.0, 901.0], [4253.0, 846.0], [4097.0, 899.0], [4289.0, 809.0], [4153.0, 858.0], [4417.0, 574.0], [4397.0, 764.0], [4501.0, 787.0], [4565.0, 758.0], [4569.0, 692.0], [4573.0, 771.0], [4525.0, 868.0], [4553.0, 862.0], [4849.0, 706.0], [4701.0, 741.0], [4673.0, 734.0], [4685.0, 788.0], [4649.0, 731.0], [4653.0, 792.0], [4753.0, 771.0], [4765.0, 776.0], [4861.0, 734.0], [4737.0, 666.0], [4777.0, 722.0], [4789.0, 712.0], [4793.0, 833.0], [4713.0, 670.0], [4705.0, 653.0], [4869.0, 700.0], [4993.0, 729.0], [5117.0, 686.0], [5109.0, 700.0], [4953.0, 795.0], [4933.0, 619.0], [4937.0, 696.0], [4941.0, 740.0], [4989.0, 708.0], [4865.0, 745.0], [4909.0, 709.0], [4885.0, 795.0], [5065.0, 665.0], [5141.0, 671.0], [5285.0, 655.0], [5289.0, 649.0], [5237.0, 622.0], [5245.0, 636.0], [5229.0, 662.0], [5145.0, 672.0], [5313.0, 745.0], [5181.0, 716.0], [5221.0, 618.0], [5205.0, 627.0], [5437.0, 623.0], [5569.0, 656.0], [5413.0, 705.0], [5465.0, 627.0], [5597.0, 643.0], [5377.0, 642.0], [5401.0, 616.0], [5561.0, 645.0], [5565.0, 597.0], [5521.0, 584.0], [5533.0, 588.0], [5505.0, 641.0], [5629.0, 599.0], [5617.0, 566.0], [5613.0, 615.0], [5645.0, 634.0], [5673.0, 588.0], [5785.0, 647.0], [5693.0, 603.0], [5877.0, 582.0], [5781.0, 582.0], [5861.0, 504.0], [5661.0, 654.0], [6001.0, 560.0], [5985.0, 545.0], [5909.0, 596.0], [5941.0, 577.0], [5957.0, 491.0], [6325.0, 490.0], [6305.0, 604.0], [6353.0, 544.0], [6589.0, 479.0], [6605.0, 483.0], [6569.0, 522.0], [6417.0, 603.0], [6437.0, 517.0], [6613.0, 497.0], [6833.0, 535.0], [6817.0, 515.0], [6745.0, 512.0], [6749.0, 489.0], [6741.0, 523.0], [6761.0, 484.0], [7073.0, 471.0], [6993.0, 526.0], [7133.0, 481.0], [7089.0, 471.0], [7021.0, 470.0], [7117.0, 501.0], [6949.0, 503.0], [7373.0, 453.0], [7261.0, 465.0], [7349.0, 463.0], [7353.0, 479.0], [7357.0, 461.0], [7381.0, 461.0], [7245.0, 442.0], [7225.0, 472.0], [7277.0, 441.0], [7189.0, 492.0], [7233.0, 474.0], [7241.0, 466.0], [7437.0, 435.0], [7441.0, 453.0], [7433.0, 461.0], [7709.0, 437.0], [7757.0, 428.0], [7921.0, 420.0], [2449.0, 109.0], [3439.0, 987.0], [3475.0, 971.0], [3639.0, 393.0], [3655.0, 1062.0], [3647.0, 944.0], [3605.0, 871.0], [3691.0, 941.0], [3705.0, 843.0], [3695.0, 899.0], [3737.0, 785.0], [3827.0, 937.0], [3747.0, 990.0], [3897.0, 1029.0], [3869.0, 814.0], [4021.0, 794.0], [4051.0, 836.0], [4023.0, 873.0], [4035.0, 856.0], [3971.0, 888.0], [4047.0, 845.0], [4330.0, 840.0], [4282.0, 811.0], [4182.0, 768.0], [4102.0, 862.0], [4166.0, 883.0], [4158.0, 887.0], [4314.0, 776.0], [4138.0, 940.0], [4234.0, 822.0], [4254.0, 866.0], [4154.0, 884.0], [4246.0, 953.0], [4414.0, 841.0], [4510.0, 661.0], [4522.0, 851.0], [4422.0, 737.0], [4442.0, 778.0], [4582.0, 806.0], [4370.0, 777.0], [4406.0, 946.0], [4606.0, 801.0], [4518.0, 799.0], [4822.0, 736.0], [4638.0, 756.0], [4650.0, 771.0], [4810.0, 767.0], [4794.0, 708.0], [4770.0, 782.0], [4610.0, 743.0], [4726.0, 868.0], [4682.0, 831.0], [4674.0, 835.0], [4750.0, 751.0], [4766.0, 763.0], [4850.0, 653.0], [4886.0, 708.0], [5038.0, 643.0], [5002.0, 778.0], [4994.0, 781.0], [4942.0, 722.0], [4930.0, 707.0], [4890.0, 698.0], [4978.0, 685.0], [5090.0, 666.0], [5094.0, 656.0], [5102.0, 710.0], [5062.0, 689.0], [5162.0, 643.0], [5150.0, 647.0], [5146.0, 694.0], [5266.0, 658.0], [5258.0, 643.0], [5246.0, 648.0], [5406.0, 621.0], [5582.0, 623.0], [5462.0, 618.0], [5466.0, 660.0], [5590.0, 630.0], [5418.0, 605.0], [5414.0, 752.5], [5482.0, 638.0], [5390.0, 654.0], [5378.0, 699.0], [5490.0, 632.0], [5606.0, 651.0], [5630.0, 611.0], [5622.0, 675.0], [5538.0, 611.0], [5562.0, 612.0], [5834.0, 614.0], [5710.0, 630.5], [5774.0, 624.0], [5694.0, 616.0], [5858.0, 624.0], [5790.0, 652.0], [5842.0, 574.5], [5994.0, 784.0], [5894.0, 618.0], [6086.0, 514.0], [6038.0, 538.0], [6046.0, 586.0], [6138.0, 532.0], [6022.0, 668.0], [6234.0, 555.0], [6322.0, 606.0], [6194.0, 536.0], [6646.0, 506.0], [6638.0, 532.0], [6518.0, 519.0], [6730.0, 510.0], [6750.0, 531.0], [6854.0, 522.0], [7014.0, 486.0], [7082.0, 488.0], [7066.0, 464.0], [7078.0, 486.0], [6946.0, 485.0], [7090.0, 455.0], [7110.0, 498.0], [7394.0, 468.0], [7190.0, 469.0], [7254.0, 463.0], [7330.0, 470.0], [7306.0, 467.0], [7310.0, 452.0], [7602.0, 454.0], [7470.0, 458.0], [7642.0, 437.0], [7742.0, 440.0], [7878.0, 424.0], [7766.0, 435.0], [7826.0, 434.0], [7790.0, 460.0], [8812.0, 313.0], [8967.0, 279.0], [11671.0, 282.0], [4215.0, 781.0], [4207.0, 857.0], [4163.0, 884.0], [4307.0, 803.0], [4191.0, 854.0], [4123.0, 907.0], [4139.0, 874.0], [4223.0, 859.0], [4567.0, 842.0], [4355.0, 697.0], [4579.0, 767.0], [4407.0, 741.0], [4547.0, 783.0], [4575.0, 769.0], [4527.0, 782.0], [4595.0, 814.0], [4503.0, 776.0], [4523.0, 797.0], [4443.0, 792.0], [4427.0, 810.0], [4827.0, 686.0], [4847.0, 740.0], [4807.0, 712.0], [4615.0, 799.0], [4715.0, 776.0], [4747.0, 749.0], [4767.0, 777.0], [4783.0, 757.0], [4707.0, 738.0], [4927.0, 823.0], [4883.0, 767.0], [5043.0, 629.0], [5047.0, 717.0], [5115.0, 616.0], [4955.0, 637.0], [4967.0, 686.0], [4903.0, 680.0], [5071.0, 644.0], [5083.0, 719.0], [5063.0, 662.0], [5335.0, 621.0], [5135.0, 616.0], [5355.0, 641.0], [5167.0, 666.0], [5331.0, 648.0], [5171.0, 666.0], [5223.0, 733.0], [5419.0, 637.0], [5587.0, 630.0], [5583.0, 577.0], [5467.0, 670.0], [5451.0, 650.0], [5455.0, 590.0], [5471.0, 631.0], [5539.0, 676.0], [5531.0, 626.0], [5619.0, 612.0], [5515.0, 670.0], [5519.0, 577.0], [5751.0, 633.0], [5707.0, 610.0], [5715.0, 621.0], [5759.0, 583.0], [5719.0, 611.0], [5735.0, 631.0], [5651.0, 706.0], [5787.0, 602.0], [5803.0, 642.0], [5807.0, 618.0], [5683.0, 663.0], [5675.0, 607.0], [5875.0, 706.0], [5863.0, 609.0], [5959.0, 578.0], [5891.0, 595.0], [6135.0, 522.0], [6015.0, 542.0], [6215.0, 560.0], [6275.0, 577.0], [6655.0, 505.0], [6563.0, 521.0], [6531.0, 511.0], [6571.0, 535.0], [6627.0, 494.0], [6639.0, 562.0], [6619.0, 515.0], [6803.0, 450.0], [6795.0, 505.0], [6835.0, 500.0], [6883.0, 472.0], [6743.0, 514.0], [7051.0, 475.0], [6987.0, 498.0], [7151.0, 474.0], [7155.0, 531.0], [7371.0, 452.0], [7411.0, 461.0], [7387.0, 432.0], [7383.0, 471.0], [7283.0, 467.0], [7223.0, 464.0], [7287.0, 489.0], [7343.0, 487.0], [7243.0, 470.0], [7231.0, 463.0], [7599.0, 440.0], [7471.0, 455.0], [7531.0, 473.0], [7855.0, 433.0], [7691.0, 458.0], [7787.0, 449.0], [7795.0, 447.0], [11094.0, 286.0], [10822.0, 278.0], [12070.0, 282.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 12070.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 2402.85, "minX": 1.64865048E12, "maxY": 6067.466666666666, "series": [{"data": [[1.6486506E12, 5400.183333333333], [1.6486509E12, 5226.633333333333], [1.64865078E12, 5399.016666666666], [1.64865072E12, 5135.133333333333], [1.64865108E12, 2402.85], [1.64865084E12, 6067.466666666666], [1.64865054E12, 5531.95], [1.64865096E12, 5568.333333333333], [1.64865048E12, 4003.3], [1.64865102E12, 5345.416666666667], [1.64865066E12, 5701.066666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64865108E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 2457.0, "minX": 1.64865048E12, "maxY": 6067.466666666666, "series": [{"data": [[1.6486506E12, 5400.216666666666], [1.6486509E12, 5226.65], [1.64865078E12, 5398.983333333334], [1.64865072E12, 5135.166666666667], [1.64865108E12, 2457.0], [1.64865084E12, 6067.466666666666], [1.64865054E12, 5531.95], [1.64865096E12, 5568.333333333333], [1.64865048E12, 3949.133333333333], [1.64865102E12, 5345.416666666667], [1.64865066E12, 5701.033333333334]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64865108E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 2457.0, "minX": 1.64865048E12, "maxY": 6067.466666666666, "series": [{"data": [[1.6486506E12, 5400.216666666666], [1.6486509E12, 5226.65], [1.64865078E12, 5398.983333333334], [1.64865072E12, 5135.166666666667], [1.64865108E12, 2457.0], [1.64865084E12, 6067.466666666666], [1.64865054E12, 5531.95], [1.64865096E12, 5568.333333333333], [1.64865048E12, 3949.133333333333], [1.64865102E12, 5345.416666666667], [1.64865066E12, 5701.033333333334]], "isOverall": false, "label": "HTTP请求长链接转短链接-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64865108E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 2457.0, "minX": 1.64865048E12, "maxY": 6067.466666666666, "series": [{"data": [[1.6486506E12, 5400.216666666666], [1.6486509E12, 5226.65], [1.64865078E12, 5398.983333333334], [1.64865072E12, 5135.166666666667], [1.64865108E12, 2457.0], [1.64865084E12, 6067.466666666666], [1.64865054E12, 5531.95], [1.64865096E12, 5568.333333333333], [1.64865048E12, 3949.133333333333], [1.64865102E12, 5345.416666666667], [1.64865066E12, 5701.033333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64865108E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

