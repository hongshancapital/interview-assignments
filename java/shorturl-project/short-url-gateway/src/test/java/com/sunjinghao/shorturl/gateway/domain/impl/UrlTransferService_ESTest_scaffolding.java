/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Tue Oct 26 11:33:03 GMT 2021
 */

package com.sunjinghao.shorturl.gateway.domain.impl;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class UrlTransferService_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.sunjinghao.shorturl.gateway.domain.impl.UrlTransferService"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "GBK"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\"); 
    java.lang.System.setProperty("user.country", "CN"); 
    java.lang.System.setProperty("user.dir", "F:\\java-code\\shorturl-project\\short-url-gateway"); 
    java.lang.System.setProperty("user.home", "C:\\Users\\Administrator"); 
    java.lang.System.setProperty("user.language", "zh"); 
    java.lang.System.setProperty("user.name", "Administrator"); 
    java.lang.System.setProperty("user.timezone", "Asia/Shanghai"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(UrlTransferService_ESTest_scaffolding.class.getClassLoader() ,
      "com.sunjinghao.shorturl.common.result.RpcResult",
      "com.sunjinghao.shorturl.api.bo.DomainMappingInfoBo",
      "cn.hutool.core.lang.JarClassLoader",
      "cn.hutool.core.clone.CloneSupport",
      "cn.hutool.core.text.StrBuilder",
      "cn.hutool.core.convert.impl.CurrencyConverter",
      "cn.hutool.core.bean.copier.BeanCopier",
      "cn.hutool.core.lang.func.Func0",
      "cn.hutool.core.lang.func.Func1",
      "cn.hutool.core.convert.impl.ReferenceConverter",
      "cn.hutool.core.exceptions.UtilException",
      "cn.hutool.core.bean.BeanDesc",
      "cn.hutool.core.convert.impl.AtomicIntegerArrayConverter",
      "cn.hutool.core.lang.Filter",
      "com.sunjinghao.shorturl.gateway.domain.IUrlTransferService",
      "com.sunjinghao.shorturl.service.dao.IUrlDao",
      "cn.hutool.core.map.MapWrapper",
      "cn.hutool.core.convert.impl.ClassConverter",
      "cn.hutool.core.clone.Cloneable",
      "cn.hutool.core.bean.BeanException",
      "cn.hutool.core.bean.BeanDescCache",
      "cn.hutool.core.util.ServiceLoaderUtil",
      "cn.hutool.core.lang.Editor",
      "cn.hutool.core.util.ArrayUtil",
      "cn.hutool.core.convert.Convert",
      "cn.hutool.core.convert.impl.OptionalConverter",
      "cn.hutool.core.bean.copier.CopyOptions",
      "cn.hutool.core.convert.impl.StringConverter",
      "cn.hutool.core.map.CamelCaseLinkedMap",
      "cn.hutool.core.getter.OptBasicTypeGetter",
      "cn.hutool.core.util.ModifierUtil$ModifierType",
      "cn.hutool.core.map.MapUtil",
      "cn.hutool.core.bean.PropDesc",
      "cn.hutool.core.convert.impl.NumberConverter",
      "cn.hutool.core.convert.impl.BooleanConverter",
      "cn.hutool.core.lang.copier.Copier",
      "cn.hutool.core.getter.OptNullBasicTypeFromObjectGetter",
      "cn.hutool.core.util.TypeUtil",
      "cn.hutool.core.clone.CloneRuntimeException",
      "cn.hutool.core.convert.AbstractConverter",
      "cn.hutool.core.util.PrimitiveArrayUtil",
      "org.springframework.stereotype.Service",
      "org.springframework.stereotype.Indexed",
      "cn.hutool.core.convert.impl.DurationConverter",
      "cn.hutool.core.getter.BasicTypeGetter",
      "cn.hutool.core.annotation.Alias",
      "cn.hutool.core.bean.copier.provider.BeanValueProvider",
      "cn.hutool.core.convert.ConverterRegistry",
      "cn.hutool.core.lang.SimpleCache",
      "cn.hutool.core.convert.impl.CalendarConverter",
      "cn.hutool.core.convert.impl.URLConverter",
      "cn.hutool.core.lang.Assert",
      "cn.hutool.core.map.MapProxy",
      "cn.hutool.core.util.BooleanUtil",
      "com.sunjinghao.shorturl.gateway.domain.impl.UrlTransferService",
      "cn.hutool.core.annotation.CombinationAnnotationElement",
      "cn.hutool.core.collection.CollUtil$Consumer",
      "cn.hutool.core.collection.CollUtil",
      "cn.hutool.core.map.MapBuilder",
      "cn.hutool.core.text.CharSequenceUtil",
      "cn.hutool.core.convert.Converter",
      "cn.hutool.core.lang.Matcher",
      "cn.hutool.core.bean.BeanUtil",
      "cn.hutool.core.util.ClassUtil",
      "cn.hutool.core.convert.impl.CharsetConverter",
      "cn.hutool.core.map.CamelCaseMap",
      "cn.hutool.core.convert.impl.LocaleConverter",
      "cn.hutool.core.collection.CollUtil$KVConsumer",
      "cn.hutool.core.convert.impl.PathConverter",
      "com.sunjinghao.shorturl.common.result.GlobalResultCodeEnum",
      "cn.hutool.core.convert.impl.StackTraceElementConverter",
      "cn.hutool.core.convert.impl.URIConverter",
      "cn.hutool.core.text.StrPool",
      "cn.hutool.core.convert.ConvertException",
      "com.sunjinghao.shorturl.api.dto.DomainMappingInfoDto",
      "cn.hutool.core.util.StrUtil",
      "cn.hutool.core.convert.impl.AtomicReferenceConverter",
      "cn.hutool.core.bean.copier.ValueProvider",
      "cn.hutool.core.bean.DynaBean",
      "cn.hutool.core.util.ReflectUtil",
      "cn.hutool.core.convert.impl.CharacterConverter",
      "cn.hutool.core.convert.impl.TemporalAccessorConverter",
      "io.swagger.annotations.ApiModelProperty",
      "cn.hutool.core.lang.hash.Hash32",
      "cn.hutool.core.util.ObjectUtil",
      "cn.hutool.core.util.ModifierUtil",
      "cn.hutool.core.io.IORuntimeException",
      "cn.hutool.core.util.DesensitizedUtil$DesensitizedType",
      "cn.hutool.core.map.CustomKeyMap",
      "cn.hutool.core.date.DateTime",
      "cn.hutool.core.convert.ConverterRegistry$SingletonHolder",
      "cn.hutool.core.convert.impl.UUIDConverter",
      "cn.hutool.core.lang.Pair",
      "cn.hutool.core.annotation.PropIgnore",
      "cn.hutool.core.convert.impl.PeriodConverter",
      "cn.hutool.core.annotation.AnnotationUtil",
      "cn.hutool.core.getter.OptNullBasicTypeGetter",
      "cn.hutool.core.convert.impl.DateConverter",
      "cn.hutool.core.convert.impl.TimeZoneConverter",
      "cn.hutool.core.convert.BasicType",
      "org.springframework.stereotype.Component",
      "cn.hutool.core.lang.TypeReference",
      "cn.hutool.core.util.ClassLoaderUtil",
      "cn.hutool.core.convert.impl.PrimitiveConverter",
      "cn.hutool.core.convert.impl.AtomicLongArrayConverter",
      "cn.hutool.core.convert.impl.AtomicBooleanConverter"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("com.sunjinghao.shorturl.common.result.RpcResult", false, UrlTransferService_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("com.sunjinghao.shorturl.service.dao.IUrlDao", false, UrlTransferService_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(UrlTransferService_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.sunjinghao.shorturl.gateway.domain.impl.UrlTransferService",
      "com.sunjinghao.shorturl.common.result.GlobalResultCodeEnum",
      "com.sunjinghao.shorturl.api.bo.DomainMappingInfoBo",
      "com.sunjinghao.shorturl.api.dto.DomainMappingInfoDto",
      "cn.hutool.core.bean.BeanUtil",
      "cn.hutool.core.bean.copier.CopyOptions",
      "cn.hutool.core.bean.copier.BeanCopier",
      "cn.hutool.core.bean.copier.provider.BeanValueProvider",
      "cn.hutool.core.lang.SimpleCache",
      "cn.hutool.core.bean.BeanDescCache",
      "cn.hutool.core.bean.BeanDesc",
      "cn.hutool.core.lang.Assert",
      "cn.hutool.core.util.ReflectUtil",
      "cn.hutool.core.util.PrimitiveArrayUtil",
      "cn.hutool.core.util.ArrayUtil",
      "cn.hutool.core.util.ModifierUtil",
      "cn.hutool.core.util.ModifierUtil$ModifierType",
      "cn.hutool.core.collection.CollUtil",
      "cn.hutool.core.util.BooleanUtil",
      "cn.hutool.core.text.CharSequenceUtil",
      "cn.hutool.core.bean.PropDesc",
      "cn.hutool.core.util.ClassUtil",
      "cn.hutool.core.annotation.AnnotationUtil",
      "cn.hutool.core.annotation.CombinationAnnotationElement",
      "cn.hutool.core.map.MapUtil",
      "cn.hutool.core.util.TypeUtil",
      "cn.hutool.core.convert.Convert",
      "cn.hutool.core.convert.ConverterRegistry",
      "cn.hutool.core.convert.AbstractConverter",
      "cn.hutool.core.convert.impl.PrimitiveConverter",
      "cn.hutool.core.convert.impl.NumberConverter",
      "cn.hutool.core.convert.impl.CharacterConverter",
      "cn.hutool.core.convert.impl.BooleanConverter",
      "cn.hutool.core.convert.impl.AtomicBooleanConverter",
      "cn.hutool.core.convert.impl.StringConverter",
      "cn.hutool.core.convert.impl.URIConverter",
      "cn.hutool.core.convert.impl.URLConverter",
      "cn.hutool.core.convert.impl.CalendarConverter",
      "cn.hutool.core.convert.impl.DateConverter",
      "cn.hutool.core.convert.impl.TemporalAccessorConverter",
      "cn.hutool.core.convert.impl.PeriodConverter",
      "cn.hutool.core.convert.impl.DurationConverter",
      "cn.hutool.core.convert.impl.ReferenceConverter",
      "cn.hutool.core.convert.impl.AtomicReferenceConverter",
      "cn.hutool.core.convert.impl.AtomicIntegerArrayConverter",
      "cn.hutool.core.convert.impl.AtomicLongArrayConverter",
      "cn.hutool.core.convert.impl.ClassConverter",
      "cn.hutool.core.convert.impl.TimeZoneConverter",
      "cn.hutool.core.convert.impl.LocaleConverter",
      "cn.hutool.core.convert.impl.CharsetConverter",
      "cn.hutool.core.convert.impl.PathConverter",
      "cn.hutool.core.convert.impl.CurrencyConverter",
      "cn.hutool.core.convert.impl.UUIDConverter",
      "cn.hutool.core.convert.impl.StackTraceElementConverter",
      "cn.hutool.core.convert.impl.OptionalConverter",
      "cn.hutool.core.util.ServiceLoaderUtil",
      "cn.hutool.core.convert.BasicType",
      "cn.hutool.core.util.ClassLoaderUtil",
      "cn.hutool.core.util.ObjectUtil",
      "cn.hutool.core.convert.ConverterRegistry$SingletonHolder",
      "com.sunjinghao.shorturl.common.result.RpcResult"
    );
  }
}
