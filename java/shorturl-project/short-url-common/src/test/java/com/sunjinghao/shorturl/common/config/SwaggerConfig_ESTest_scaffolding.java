/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Tue Oct 26 11:19:42 GMT 2021
 */

package com.sunjinghao.shorturl.common.config;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class SwaggerConfig_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.sunjinghao.shorturl.common.config.SwaggerConfig"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "GBK"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\"); 
    java.lang.System.setProperty("user.country", "CN"); 
    java.lang.System.setProperty("user.dir", "F:\\java-code\\shorturl-project\\short-url-common"); 
    java.lang.System.setProperty("user.home", "C:\\Users\\Administrator"); 
    java.lang.System.setProperty("user.language", "zh"); 
    java.lang.System.setProperty("user.name", "Administrator"); 
    java.lang.System.setProperty("user.timezone", "Asia/Shanghai"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(SwaggerConfig_ESTest_scaffolding.class.getClassLoader() ,
      "com.google.common.collect.Lists$RandomAccessPartition",
      "com.google.common.collect.Collections2",
      "com.google.common.base.JdkPattern",
      "springfox.documentation.builders.BuilderDefaults",
      "com.google.common.collect.ImmutableSet$Indexed",
      "com.github.xiaoymin.swaggerbootstrapui.configuration.MarkdownFileConfiguration",
      "springfox.documentation.spi.service.ResourceGroupingStrategy",
      "com.google.common.collect.Sets$2",
      "springfox.documentation.spi.schema.AlternateTypeProvider",
      "com.google.common.collect.Sets$3",
      "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
      "com.google.common.base.Predicates$ContainsPatternPredicate",
      "com.google.common.collect.Sets$1",
      "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap$1EntrySetImpl",
      "com.google.common.collect.NullsLastOrdering",
      "com.google.common.collect.RegularImmutableMap",
      "com.google.common.base.Converter$IdentityConverter",
      "com.google.common.collect.ByFunctionOrdering",
      "com.google.common.collect.AbstractMapEntry",
      "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap",
      "com.google.common.base.Predicate",
      "org.springframework.web.context.request.async.DeferredResultProcessingInterceptor",
      "springfox.documentation.schema.AlternateTypeRule",
      "com.google.common.base.Joiner",
      "org.springframework.core.Ordered",
      "com.github.xiaoymin.swaggerbootstrapui.configuration.SecurityConfiguration",
      "com.google.common.collect.NullsFirstOrdering",
      "com.google.common.base.Predicates$InstanceOfPredicate",
      "org.springframework.util.LinkedCaseInsensitiveMap",
      "com.google.common.collect.Lists$Partition",
      "com.google.common.collect.Lists",
      "com.google.common.collect.UnmodifiableListIterator",
      "springfox.documentation.builders.RequestHandlerSelectors$2",
      "springfox.documentation.spring.web.plugins.ApiSelectorBuilder",
      "com.fasterxml.classmate.members.RawMember",
      "springfox.documentation.builders.RequestHandlerSelectors$1",
      "org.springframework.stereotype.Indexed",
      "com.google.common.collect.ImmutableMultimap",
      "org.springframework.util.InvalidMimeTypeException",
      "com.google.common.collect.Sets$4",
      "com.google.common.base.Absent",
      "com.google.common.collect.Maps$BiMapConverter",
      "com.google.common.base.Joiner$MapJoiner",
      "com.google.common.base.Preconditions",
      "com.google.common.base.Predicates$CompositionPredicate",
      "com.google.common.base.Predicates$OrPredicate",
      "springfox.documentation.schema.DefaultGenericTypeNamingStrategy",
      "springfox.documentation.PathProvider",
      "com.fasterxml.classmate.members.RawConstructor",
      "com.google.common.collect.ImmutableMapValues",
      "com.google.common.collect.ImmutableEntry",
      "com.google.common.base.Joiner$1",
      "com.google.common.base.Joiner$2",
      "com.google.common.base.Converter$ConverterComposition",
      "springfox.documentation.spi.schema.GenericTypeNamingStrategy",
      "com.google.common.base.Predicates$IsEqualToPredicate",
      "com.google.common.collect.AbstractNavigableMap",
      "com.google.common.collect.ImmutableCollection",
      "com.google.common.collect.ImmutableEnumMap",
      "springfox.documentation.schema.ModelReference",
      "com.fasterxml.classmate.ResolvedType",
      "org.springframework.web.context.request.async.DeferredResult$DeferredResultHandler",
      "springfox.documentation.spi.service.DocumentationPlugin",
      "org.springframework.util.MimeType",
      "com.google.common.base.Predicates$1",
      "com.google.common.collect.ImmutableCollection$Builder",
      "com.google.common.collect.ImmutableSetMultimap",
      "com.google.common.collect.BiMap",
      "com.google.common.collect.ImmutableSet",
      "com.google.common.collect.Lists$AbstractListWrapper",
      "com.google.common.collect.ImmutableMapEntry",
      "org.springframework.http.MediaType",
      "com.fasterxml.classmate.TypeResolver",
      "org.springframework.beans.factory.annotation.Autowire",
      "springfox.documentation.annotations.ApiIgnore",
      "com.google.common.base.Converter$ReverseConverter",
      "com.google.common.collect.Lists$StringAsImmutableList",
      "com.google.common.collect.Lists$2",
      "com.github.xiaoymin.swaggerbootstrapui.configuration.SwaggerBootstrapUIConfiguration",
      "com.google.common.collect.Maps$IteratorBasedAbstractMap",
      "com.google.common.collect.Maps$FilteredEntryBiMap",
      "com.google.common.collect.Lists$1",
      "com.google.common.collect.Multiset",
      "com.google.common.collect.AbstractMultimap",
      "com.google.common.base.Predicates$ObjectPredicate$1",
      "com.google.common.base.Supplier",
      "springfox.documentation.service.ApiInfo",
      "com.google.common.collect.ImmutableList",
      "com.google.common.collect.ReverseOrdering",
      "com.google.common.collect.Maps$FilteredEntrySortedMap",
      "springfox.documentation.spring.web.plugins.Docket$4",
      "com.google.common.collect.ImmutableMap$Builder",
      "com.google.common.base.Converter$FunctionBasedConverter",
      "org.springframework.http.InvalidMediaTypeException",
      "com.google.common.collect.Maps$EntryTransformer",
      "springfox.documentation.builders.ResponseMessageBuilder",
      "com.google.common.collect.Ordering",
      "com.google.common.base.Predicates$ObjectPredicate$4",
      "com.google.common.base.Predicates$ObjectPredicate$3",
      "com.google.common.base.Predicates$ObjectPredicate$2",
      "com.google.common.collect.NaturalOrdering",
      "io.swagger.annotations.Authorization",
      "org.springframework.util.Assert",
      "com.google.common.collect.AllEqualOrdering",
      "com.google.common.collect.ImmutableList$SubList",
      "springfox.documentation.service.Contact",
      "com.google.common.base.Predicates$ObjectPredicate",
      "com.google.common.collect.RegularImmutableList",
      "com.google.common.base.Predicates$SubtypeOfPredicate",
      "com.google.common.base.Optional",
      "springfox.documentation.service.ResponseMessage",
      "com.google.common.collect.Lists$TransformingRandomAccessList",
      "com.google.common.collect.ImmutableMapKeySet",
      "springfox.documentation.builders.PathSelectors",
      "com.google.common.collect.Range",
      "springfox.documentation.RequestHandler",
      "com.google.common.collect.SortedMapDifference",
      "com.google.common.base.CommonPattern",
      "com.google.common.collect.RegularImmutableSet",
      "org.springframework.plugin.metadata.PluginMetadata",
      "springfox.documentation.builders.ApiInfoBuilder",
      "org.springframework.util.CollectionUtils",
      "com.google.common.collect.LexicographicalOrdering",
      "com.fasterxml.classmate.members.RawField",
      "com.google.common.collect.Maps$AbstractFilteredMap",
      "com.google.common.base.Present",
      "com.google.common.collect.ImmutableAsList",
      "com.google.common.collect.Sets$SetView",
      "com.google.common.collect.ImmutableSet$Builder",
      "org.springframework.http.MediaType$1",
      "org.springframework.web.context.request.async.DeferredResult",
      "com.google.common.base.JdkPattern$JdkMatcher",
      "com.google.common.collect.RegularImmutableAsList",
      "com.google.common.collect.Maps$FilteredEntryMap",
      "com.google.common.collect.SingletonImmutableSet",
      "com.google.common.collect.ImmutableMapEntrySet",
      "com.google.common.collect.UsingToStringOrdering",
      "springfox.documentation.service.Tag",
      "springfox.documentation.swagger2.annotations.EnableSwagger2",
      "org.springframework.util.MimeType$SpecificityComparator",
      "com.google.common.base.Predicates",
      "io.swagger.annotations.Api",
      "com.google.common.collect.Lists$TransformingSequentialList",
      "com.google.common.collect.AbstractIterator",
      "org.springframework.context.annotation.Import",
      "org.springframework.util.MultiValueMap",
      "springfox.documentation.spi.service.contexts.DocumentationContext",
      "com.google.common.collect.ImmutableList$1",
      "org.springframework.util.LinkedCaseInsensitiveMap$1",
      "com.google.common.collect.MapDifference",
      "org.springframework.plugin.core.Plugin",
      "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
      "springfox.documentation.spring.web.plugins.Docket",
      "com.google.common.collect.UnmodifiableIterator",
      "com.google.common.collect.Maps$FilteredEntryNavigableMap",
      "org.springframework.plugin.metadata.SimplePluginMetadata",
      "springfox.documentation.builders.RequestHandlerSelectors",
      "com.fasterxml.classmate.members.RawMethod",
      "com.google.common.collect.Lists$RandomAccessListWrapper",
      "com.google.common.collect.ImmutableEnumSet",
      "com.google.common.base.Predicates$ContainsPatternFromStringPredicate",
      "com.google.common.base.CommonMatcher",
      "com.google.common.collect.ImmutableList$ReverseImmutableList",
      "com.sunjinghao.shorturl.common.config.SwaggerConfig",
      "com.google.common.collect.SingletonImmutableList",
      "com.google.common.base.Converter",
      "com.google.common.base.Predicates$AndPredicate",
      "com.google.common.collect.Maps$6",
      "springfox.documentation.schema.CodeGenGenericTypeNamingStrategy",
      "com.google.common.base.Function",
      "com.google.common.collect.ImmutableMap",
      "com.google.common.collect.ComparatorOrdering",
      "com.google.common.collect.AbstractIndexedListIterator",
      "org.springframework.web.bind.annotation.RequestMethod",
      "com.google.common.base.Predicates$NotPredicate",
      "com.google.common.collect.Sets",
      "org.springframework.context.annotation.Configuration",
      "com.google.common.collect.ExplicitOrdering",
      "springfox.documentation.spi.service.contexts.DocumentationContextBuilder",
      "com.google.common.collect.Maps$ViewCachingAbstractMap",
      "springfox.documentation.spi.service.contexts.ApiSelector",
      "springfox.documentation.service.AllowableValues",
      "com.fasterxml.classmate.TypeBindings",
      "com.google.common.collect.ImmutableMap$1",
      "com.google.common.collect.ImmutableList$Builder",
      "com.google.common.collect.Sets$4$1",
      "springfox.documentation.swagger2.configuration.Swagger2DocumentationConfiguration",
      "com.google.common.collect.Multimap",
      "com.google.common.collect.CompoundOrdering",
      "com.google.common.collect.ImmutableBiMap",
      "com.github.xiaoymin.swaggerbootstrapui.annotations.EnableSwaggerBootstrapUI",
      "springfox.documentation.spring.web.plugins.ApiSelectorBuilder$1",
      "com.google.common.base.Equivalence",
      "com.google.common.collect.Maps",
      "com.google.common.collect.SetMultimap",
      "org.springframework.stereotype.Component",
      "springfox.documentation.spi.DocumentationType",
      "org.springframework.util.StringUtils",
      "com.google.common.base.Predicates$InPredicate"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(SwaggerConfig_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.sunjinghao.shorturl.common.config.SwaggerConfig",
      "org.springframework.beans.factory.annotation.Autowire",
      "org.springframework.plugin.metadata.SimplePluginMetadata",
      "org.springframework.util.MimeType",
      "org.springframework.util.Assert",
      "org.springframework.util.StringUtils",
      "org.springframework.util.CollectionUtils",
      "org.springframework.util.LinkedCaseInsensitiveMap",
      "org.springframework.util.LinkedCaseInsensitiveMap$1",
      "org.springframework.util.MimeType$SpecificityComparator",
      "org.springframework.http.MediaType$1",
      "org.springframework.http.MediaType",
      "springfox.documentation.spi.DocumentationType",
      "com.google.common.base.Predicates$ObjectPredicate",
      "org.springframework.web.bind.annotation.RequestMethod",
      "springfox.documentation.spring.web.plugins.Docket",
      "com.google.common.collect.Lists",
      "com.google.common.base.Joiner",
      "com.google.common.base.Preconditions",
      "com.google.common.base.Joiner$1",
      "com.google.common.collect.Collections2",
      "com.google.common.base.Joiner$MapJoiner",
      "com.google.common.collect.Maps",
      "com.google.common.collect.Sets",
      "springfox.documentation.service.Contact",
      "springfox.documentation.service.ApiInfo",
      "springfox.documentation.schema.DefaultGenericTypeNamingStrategy",
      "com.google.common.base.Optional",
      "com.google.common.base.Absent",
      "springfox.documentation.builders.RequestHandlerSelectors",
      "springfox.documentation.builders.RequestHandlerSelectors$2",
      "com.google.common.base.Predicates",
      "com.google.common.base.Predicates$NotPredicate",
      "springfox.documentation.builders.RequestHandlerSelectors$1",
      "com.google.common.base.Predicates$AndPredicate",
      "springfox.documentation.builders.PathSelectors",
      "springfox.documentation.spi.service.contexts.ApiSelector",
      "springfox.documentation.spring.web.plugins.Docket$4",
      "com.google.common.base.Present",
      "springfox.documentation.spring.web.plugins.ApiSelectorBuilder",
      "springfox.documentation.spring.web.plugins.ApiSelectorBuilder$1",
      "springfox.documentation.builders.ApiInfoBuilder",
      "springfox.documentation.builders.BuilderDefaults",
      "springfox.documentation.builders.ResponseMessageBuilder",
      "springfox.documentation.service.ResponseMessage",
      "springfox.documentation.schema.CodeGenGenericTypeNamingStrategy"
    );
  }
}
