/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 11:23:58 GMT 2021
 */

package com.sunjinghao.shorturl.common.result;

import org.junit.Test;
import static org.junit.Assert.*;
import com.sunjinghao.shorturl.common.result.GlobalResultCodeEnum;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GlobalResultCodeEnum_ESTest extends GlobalResultCodeEnum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GlobalResultCodeEnum[] globalResultCodeEnumArray0 = GlobalResultCodeEnum.values();
      assertEquals(6, globalResultCodeEnumArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GlobalResultCodeEnum globalResultCodeEnum0 = GlobalResultCodeEnum.valueOf("INVALID_REQUEST");
      assertEquals(10002, (int)globalResultCodeEnum0.getCode());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      GlobalResultCodeEnum globalResultCodeEnum0 = GlobalResultCodeEnum.WARN_REQUEST;
      String string0 = globalResultCodeEnum0.getMsg();
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      GlobalResultCodeEnum globalResultCodeEnum0 = GlobalResultCodeEnum.INVALID_REQUEST;
      Integer integer0 = globalResultCodeEnum0.getCode();
      assertEquals(10002, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      GlobalResultCodeEnum globalResultCodeEnum0 = GlobalResultCodeEnum.SERVER_ERROR;
      Integer integer0 = globalResultCodeEnum0.getCode();
      assertEquals(500, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      GlobalResultCodeEnum globalResultCodeEnum0 = GlobalResultCodeEnum.SERVER_ERROR;
      String string0 = globalResultCodeEnum0.getMsg();
      assertEquals("\u670D\u52A1\u5F02\u5E38", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      GlobalResultCodeEnum globalResultCodeEnum0 = GlobalResultCodeEnum.DATA_ERROR;
      Integer integer0 = globalResultCodeEnum0.getCode();
      assertEquals(999, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      GlobalResultCodeEnum globalResultCodeEnum0 = GlobalResultCodeEnum.WARN_REQUEST;
      globalResultCodeEnum0.setMsg("0");
      assertEquals(803, (int)globalResultCodeEnum0.getCode());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      GlobalResultCodeEnum globalResultCodeEnum0 = GlobalResultCodeEnum.WARN_REQUEST;
      Integer integer0 = new Integer(803);
      globalResultCodeEnum0.setCode(integer0);
      assertEquals("\u8F6F\u6821\u9A8C\u8FD4\u56DE", globalResultCodeEnum0.getMsg());
  }
}
