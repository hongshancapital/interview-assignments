/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 11:20:42 GMT 2021
 */

package com.sunjinghao.shorturl.common.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sunjinghao.shorturl.common.exception.ExceptionController;
import com.sunjinghao.shorturl.common.exception.MyException;
import com.sunjinghao.shorturl.common.result.GlobalHttpResult;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.junit.runner.RunWith;
import org.springframework.web.bind.MethodArgumentNotValidException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExceptionController_ESTest extends ExceptionController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MyException myException0 = new MyException("GF$xz");
      ExceptionController exceptionController0 = new ExceptionController();
      GlobalHttpResult globalHttpResult0 = exceptionController0.methodArgumentNotValidException(myException0);
      assertEquals(10002, (int)globalHttpResult0.getCode());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockException mockException0 = new MockException("GF$xz");
      ExceptionController exceptionController0 = new ExceptionController();
      GlobalHttpResult globalHttpResult0 = exceptionController0.methodArgumentNotValidException(mockException0);
      assertEquals("\u670D\u52A1\u5F02\u5E38\u9519\u8BEF\u7684\u4FE1\u606F\u4E3A\uFF1AGF$xz", globalHttpResult0.getMessage());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ExceptionController exceptionController0 = new ExceptionController();
      // Undeclared exception!
      try { 
        exceptionController0.methodArgumentNotValidException((MethodArgumentNotValidException) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.sunjinghao.shorturl.common.exception.ExceptionController", e);
      }
  }
}
