/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 11:28:58 GMT 2021
 */

package com.sunjinghao.shorturl.api.vo;

import org.junit.Test;
import static org.junit.Assert.*;
import com.sunjinghao.shorturl.api.vo.DomainMappingInfoVo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DomainMappingInfoVo_ESTest extends DomainMappingInfoVo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DomainMappingInfoVo domainMappingInfoVo0 = new DomainMappingInfoVo();
      boolean boolean0 = domainMappingInfoVo0.equals(domainMappingInfoVo0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DomainMappingInfoVo domainMappingInfoVo0 = new DomainMappingInfoVo();
      domainMappingInfoVo0.setUrl("$");
      String string0 = domainMappingInfoVo0.getUrl();
      assertEquals("$", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DomainMappingInfoVo domainMappingInfoVo0 = new DomainMappingInfoVo();
      domainMappingInfoVo0.setUrl("");
      String string0 = domainMappingInfoVo0.getUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DomainMappingInfoVo domainMappingInfoVo0 = new DomainMappingInfoVo();
      boolean boolean0 = domainMappingInfoVo0.canEqual(domainMappingInfoVo0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DomainMappingInfoVo domainMappingInfoVo0 = new DomainMappingInfoVo();
      boolean boolean0 = domainMappingInfoVo0.canEqual("DomainMappingInfoVo(url=null)");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DomainMappingInfoVo domainMappingInfoVo0 = new DomainMappingInfoVo();
      String string0 = domainMappingInfoVo0.getUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DomainMappingInfoVo domainMappingInfoVo0 = new DomainMappingInfoVo();
      domainMappingInfoVo0.setUrl("$");
      DomainMappingInfoVo domainMappingInfoVo1 = new DomainMappingInfoVo();
      assertFalse(domainMappingInfoVo1.equals((Object)domainMappingInfoVo0));
      
      domainMappingInfoVo1.setUrl("$");
      boolean boolean0 = domainMappingInfoVo0.equals(domainMappingInfoVo1);
      assertTrue(domainMappingInfoVo1.equals((Object)domainMappingInfoVo0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DomainMappingInfoVo domainMappingInfoVo0 = new DomainMappingInfoVo();
      domainMappingInfoVo0.setUrl("$");
      DomainMappingInfoVo domainMappingInfoVo1 = new DomainMappingInfoVo();
      boolean boolean0 = domainMappingInfoVo0.equals(domainMappingInfoVo1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DomainMappingInfoVo domainMappingInfoVo0 = new DomainMappingInfoVo();
      boolean boolean0 = domainMappingInfoVo0.equals("DomainMappingInfoVo(url=$)");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DomainMappingInfoVo domainMappingInfoVo0 = new DomainMappingInfoVo();
      DomainMappingInfoVo domainMappingInfoVo1 = new DomainMappingInfoVo();
      assertTrue(domainMappingInfoVo1.equals((Object)domainMappingInfoVo0));
      
      domainMappingInfoVo1.setUrl("$");
      boolean boolean0 = domainMappingInfoVo0.equals(domainMappingInfoVo1);
      assertFalse(domainMappingInfoVo1.equals((Object)domainMappingInfoVo0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DomainMappingInfoVo domainMappingInfoVo0 = new DomainMappingInfoVo();
      domainMappingInfoVo0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DomainMappingInfoVo domainMappingInfoVo0 = new DomainMappingInfoVo();
      String string0 = domainMappingInfoVo0.toString();
      assertEquals("DomainMappingInfoVo(url=null)", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DomainMappingInfoVo domainMappingInfoVo0 = new DomainMappingInfoVo();
      DomainMappingInfoVo domainMappingInfoVo1 = new DomainMappingInfoVo();
      boolean boolean0 = domainMappingInfoVo0.equals(domainMappingInfoVo1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DomainMappingInfoVo domainMappingInfoVo0 = new DomainMappingInfoVo();
      domainMappingInfoVo0.setUrl("$");
      domainMappingInfoVo0.hashCode();
  }
}
