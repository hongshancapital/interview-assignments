/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 11:27:49 GMT 2021
 */

package com.sunjinghao.shorturl.api.bo;

import org.junit.Test;
import static org.junit.Assert.*;
import com.sunjinghao.shorturl.api.bo.DomainMappingInfoBo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DomainMappingInfoBo_ESTest extends DomainMappingInfoBo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DomainMappingInfoBo domainMappingInfoBo0 = new DomainMappingInfoBo();
      boolean boolean0 = domainMappingInfoBo0.equals(domainMappingInfoBo0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DomainMappingInfoBo domainMappingInfoBo0 = new DomainMappingInfoBo();
      domainMappingInfoBo0.setUrl("[!j0 YR9j{[T");
      String string0 = domainMappingInfoBo0.getUrl();
      assertEquals("[!j0 YR9j{[T", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DomainMappingInfoBo domainMappingInfoBo0 = new DomainMappingInfoBo();
      domainMappingInfoBo0.setUrl("");
      String string0 = domainMappingInfoBo0.getUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DomainMappingInfoBo domainMappingInfoBo0 = new DomainMappingInfoBo();
      domainMappingInfoBo0.setShortCode("z");
      String string0 = domainMappingInfoBo0.getShortCode();
      assertEquals("z", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DomainMappingInfoBo domainMappingInfoBo0 = new DomainMappingInfoBo();
      domainMappingInfoBo0.setShortCode("");
      String string0 = domainMappingInfoBo0.getShortCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DomainMappingInfoBo domainMappingInfoBo0 = new DomainMappingInfoBo();
      boolean boolean0 = domainMappingInfoBo0.canEqual(domainMappingInfoBo0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DomainMappingInfoBo domainMappingInfoBo0 = new DomainMappingInfoBo();
      boolean boolean0 = domainMappingInfoBo0.canEqual("DomainMappingInfoBo(url=null, shortCode=z)");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DomainMappingInfoBo domainMappingInfoBo0 = new DomainMappingInfoBo();
      String string0 = domainMappingInfoBo0.getUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DomainMappingInfoBo domainMappingInfoBo0 = new DomainMappingInfoBo();
      String string0 = domainMappingInfoBo0.getShortCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DomainMappingInfoBo domainMappingInfoBo0 = new DomainMappingInfoBo();
      DomainMappingInfoBo domainMappingInfoBo1 = new DomainMappingInfoBo();
      domainMappingInfoBo1.setShortCode(":");
      assertFalse(domainMappingInfoBo1.equals((Object)domainMappingInfoBo0));
      
      domainMappingInfoBo0.setShortCode(":");
      boolean boolean0 = domainMappingInfoBo1.equals(domainMappingInfoBo0);
      assertTrue(domainMappingInfoBo0.equals((Object)domainMappingInfoBo1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DomainMappingInfoBo domainMappingInfoBo0 = new DomainMappingInfoBo();
      DomainMappingInfoBo domainMappingInfoBo1 = new DomainMappingInfoBo();
      assertTrue(domainMappingInfoBo1.equals((Object)domainMappingInfoBo0));
      
      domainMappingInfoBo1.setShortCode(":");
      boolean boolean0 = domainMappingInfoBo0.equals(domainMappingInfoBo1);
      assertFalse(domainMappingInfoBo1.equals((Object)domainMappingInfoBo0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DomainMappingInfoBo domainMappingInfoBo0 = new DomainMappingInfoBo();
      DomainMappingInfoBo domainMappingInfoBo1 = new DomainMappingInfoBo();
      domainMappingInfoBo0.setUrl("");
      assertFalse(domainMappingInfoBo0.equals((Object)domainMappingInfoBo1));
      
      domainMappingInfoBo1.setUrl("");
      boolean boolean0 = domainMappingInfoBo0.equals(domainMappingInfoBo1);
      assertTrue(domainMappingInfoBo0.equals((Object)domainMappingInfoBo1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DomainMappingInfoBo domainMappingInfoBo0 = new DomainMappingInfoBo();
      DomainMappingInfoBo domainMappingInfoBo1 = new DomainMappingInfoBo();
      assertTrue(domainMappingInfoBo1.equals((Object)domainMappingInfoBo0));
      
      domainMappingInfoBo1.setUrl("n=/7?1/y_aZlP*");
      boolean boolean0 = domainMappingInfoBo0.equals(domainMappingInfoBo1);
      assertFalse(domainMappingInfoBo1.equals((Object)domainMappingInfoBo0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DomainMappingInfoBo domainMappingInfoBo0 = new DomainMappingInfoBo();
      DomainMappingInfoBo domainMappingInfoBo1 = new DomainMappingInfoBo();
      assertTrue(domainMappingInfoBo1.equals((Object)domainMappingInfoBo0));
      
      domainMappingInfoBo0.setUrl("");
      boolean boolean0 = domainMappingInfoBo0.equals(domainMappingInfoBo1);
      assertFalse(domainMappingInfoBo1.equals((Object)domainMappingInfoBo0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DomainMappingInfoBo domainMappingInfoBo0 = new DomainMappingInfoBo();
      boolean boolean0 = domainMappingInfoBo0.equals(":");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DomainMappingInfoBo domainMappingInfoBo0 = new DomainMappingInfoBo();
      domainMappingInfoBo0.setShortCode("");
      DomainMappingInfoBo domainMappingInfoBo1 = new DomainMappingInfoBo();
      boolean boolean0 = domainMappingInfoBo0.equals(domainMappingInfoBo1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DomainMappingInfoBo domainMappingInfoBo0 = new DomainMappingInfoBo();
      domainMappingInfoBo0.hashCode();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DomainMappingInfoBo domainMappingInfoBo0 = new DomainMappingInfoBo();
      domainMappingInfoBo0.setUrl("");
      domainMappingInfoBo0.hashCode();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DomainMappingInfoBo domainMappingInfoBo0 = new DomainMappingInfoBo();
      domainMappingInfoBo0.setShortCode("bKw");
      domainMappingInfoBo0.hashCode();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DomainMappingInfoBo domainMappingInfoBo0 = new DomainMappingInfoBo();
      String string0 = domainMappingInfoBo0.toString();
      assertEquals("DomainMappingInfoBo(url=null, shortCode=null)", string0);
  }
}
