/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 26 11:26:24 GMT 2021
 */

package com.sunjinghao.shorturl.api.dto;

import org.junit.Test;
import static org.junit.Assert.*;
import com.sunjinghao.shorturl.api.dto.DomainMappingInfoDto;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DomainMappingInfoDto_ESTest extends DomainMappingInfoDto_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      boolean boolean0 = domainMappingInfoDto0.equals(domainMappingInfoDto0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      domainMappingInfoDto0.setUrl("");
      String string0 = domainMappingInfoDto0.getUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      domainMappingInfoDto0.setShortCode("");
      String string0 = domainMappingInfoDto0.getShortCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      Long long0 = new Long(0L);
      domainMappingInfoDto0.setId(long0);
      Long long1 = domainMappingInfoDto0.getId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      Long long0 = new Long((-1666L));
      domainMappingInfoDto0.setId(long0);
      Long long1 = domainMappingInfoDto0.getId();
      assertEquals((-1666L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      Long long0 = new Long(662L);
      domainMappingInfoDto0.setId(long0);
      Long long1 = domainMappingInfoDto0.getId();
      assertEquals(662L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      boolean boolean0 = domainMappingInfoDto0.canEqual(domainMappingInfoDto0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      boolean boolean0 = domainMappingInfoDto0.canEqual((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      String string0 = domainMappingInfoDto0.getUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      String string0 = domainMappingInfoDto0.getShortCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      domainMappingInfoDto0.setShortCode("Dp^j&M?bI(/4BI");
      DomainMappingInfoDto domainMappingInfoDto1 = new DomainMappingInfoDto();
      assertFalse(domainMappingInfoDto1.equals((Object)domainMappingInfoDto0));
      
      domainMappingInfoDto1.setShortCode("Dp^j&M?bI(/4BI");
      boolean boolean0 = domainMappingInfoDto0.equals(domainMappingInfoDto1);
      assertTrue(domainMappingInfoDto1.equals((Object)domainMappingInfoDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      domainMappingInfoDto0.setUrl("");
      DomainMappingInfoDto domainMappingInfoDto1 = new DomainMappingInfoDto();
      domainMappingInfoDto1.setShortCode("");
      domainMappingInfoDto1.setUrl("");
      boolean boolean0 = domainMappingInfoDto0.equals(domainMappingInfoDto1);
      assertFalse(boolean0);
      assertFalse(domainMappingInfoDto1.equals((Object)domainMappingInfoDto0));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      domainMappingInfoDto0.setShortCode("DomainMappingInfoDto(id=null, url=null, shortCode=null)");
      DomainMappingInfoDto domainMappingInfoDto1 = new DomainMappingInfoDto();
      boolean boolean0 = domainMappingInfoDto0.equals(domainMappingInfoDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      domainMappingInfoDto0.setUrl("");
      DomainMappingInfoDto domainMappingInfoDto1 = new DomainMappingInfoDto();
      assertFalse(domainMappingInfoDto1.equals((Object)domainMappingInfoDto0));
      
      domainMappingInfoDto1.setUrl("");
      boolean boolean0 = domainMappingInfoDto0.equals(domainMappingInfoDto1);
      assertTrue(domainMappingInfoDto1.equals((Object)domainMappingInfoDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      DomainMappingInfoDto domainMappingInfoDto1 = new DomainMappingInfoDto();
      assertTrue(domainMappingInfoDto1.equals((Object)domainMappingInfoDto0));
      
      domainMappingInfoDto1.setUrl("DomainMappingInfoDto(id=null, url=null, shortCode=null)");
      boolean boolean0 = domainMappingInfoDto0.equals(domainMappingInfoDto1);
      assertFalse(domainMappingInfoDto1.equals((Object)domainMappingInfoDto0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      Long long0 = new Long(0L);
      domainMappingInfoDto0.setId(long0);
      DomainMappingInfoDto domainMappingInfoDto1 = new DomainMappingInfoDto();
      assertFalse(domainMappingInfoDto1.equals((Object)domainMappingInfoDto0));
      
      domainMappingInfoDto1.setId(long0);
      boolean boolean0 = domainMappingInfoDto0.equals(domainMappingInfoDto1);
      assertTrue(domainMappingInfoDto1.equals((Object)domainMappingInfoDto0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      Long long0 = new Long(4844L);
      domainMappingInfoDto0.setId(long0);
      DomainMappingInfoDto domainMappingInfoDto1 = new DomainMappingInfoDto();
      boolean boolean0 = domainMappingInfoDto1.equals(domainMappingInfoDto0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      Long long0 = new Long(0L);
      domainMappingInfoDto0.setId(long0);
      DomainMappingInfoDto domainMappingInfoDto1 = new DomainMappingInfoDto();
      boolean boolean0 = domainMappingInfoDto0.equals(domainMappingInfoDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      Object object0 = new Object();
      boolean boolean0 = domainMappingInfoDto0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      domainMappingInfoDto0.setUrl("DomainMappingInfoDto(id=null, url=null, shortCode=null)");
      DomainMappingInfoDto domainMappingInfoDto1 = new DomainMappingInfoDto();
      boolean boolean0 = domainMappingInfoDto0.equals(domainMappingInfoDto1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      domainMappingInfoDto0.setShortCode("DomainMappingInfoDto(id=null, url=null, shortCode=null)");
      domainMappingInfoDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      domainMappingInfoDto0.setUrl("DomainMappingInfoDto(id=null, url=null, shortCode=null)");
      domainMappingInfoDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      Long long0 = new Long(0L);
      domainMappingInfoDto0.setId(long0);
      domainMappingInfoDto0.hashCode();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      domainMappingInfoDto0.setUrl("zu;eK=oH0nQsw");
      String string0 = domainMappingInfoDto0.getUrl();
      assertEquals("zu;eK=oH0nQsw", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      domainMappingInfoDto0.setShortCode("1u)[/<HCe9!Hon");
      String string0 = domainMappingInfoDto0.getShortCode();
      assertEquals("1u)[/<HCe9!Hon", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      Long long0 = domainMappingInfoDto0.getId();
      domainMappingInfoDto0.setId(long0);
      assertNull(domainMappingInfoDto0.getShortCode());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DomainMappingInfoDto domainMappingInfoDto0 = new DomainMappingInfoDto();
      String string0 = domainMappingInfoDto0.toString();
      assertEquals("DomainMappingInfoDto(id=null, url=null, shortCode=null)", string0);
  }
}
