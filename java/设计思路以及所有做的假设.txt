Swagger Api 链接
http://localhost:8100/swagger-ui/index.html#/

这个短链接项目使用了常见的62进制累加数字作为解决方案，数字0-9，大写字母A-Z,小写字母a-z,共62个字符，
我裂解要求中要求短链接最长8位说的是不带域名的部分，这样最多可以指支持62的8次方，最多可以容纳2.1834011e+14 个域名
因为是Api而不是短域名服务，所以就没有考虑接口会被攻击的问题，假定此接口为内部调用，另外项目只使用了一个可配置的短域名，
如果需要多个域名服务器的话，可以扩展为按照id分段进行分配到不同的服务器。这个项目使用了H2数据库在内存中存储数据，比较
容易迁移到其他的存储方式，后期如果需要加大存储效率的话，可以考虑引入redis进行带有内存数据库和传统存储的解决方案。
项目使用gradle进行构建，因为是测验性质的项目就没有进一步配置日志的输出

项目结构，以及实现过程
主程序在xyz.sgld.sls包中，下面有config，data，util三个子包，主要放有配置（swagger配置），数据访问层代码，和工具集
程序入口Application类
API入口在ShortLinkController中
具体业务逻辑在ShortLinkService中实现，主要就是两个接口的方法
两个接口返回的数据类型共用了一个数据结构(data包中的ShortLink类)
主要流程，
/short_link接口中传入参数short_link,程序会查询数据库,看数据库中是否存在已经创建好的短链接，如果纯在直接封装数据，然后返回
如果不存在那么插入书库进行，然后根据数据库表自动增长的ID生成短链接返回（这里会把原始长连接的sha256的哈希也存储起来，后期如果
存在长连接查询效率问题，可以改用哈希查询的方法，毕竟原始链接使用了cLob类型，如果太长的话后期查询会成问题），
/origin_link就比较简单从短链接中取出后面的62进制数字部分，然后计算出相应的id然后查询数据库，这里之处理了，链接按照下发回去
的格式处理的方式，没有做进一步的容错处理。

gradlew test可以进行单元测试

域名服务器的配置在application.properties中