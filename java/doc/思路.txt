首先我进行了调研目前比较流行的实现方式有3种

1、自增ID
原理是，每新增一个短码就从上一个短码加1，然后将10进制转换为62进制。
一般用数据库、雪花算法等实现
优点：根据有限的长链生成有限的id，不会重复
缺点：由于是连续的可能存在安全问题、不支持长链接重复查询
处理：可以从固定数值开始则长度固定、添加混淆处理
2、摘要算法
原理是通过算法，输入任意长度的数据，输出固定长度的数据 MD5
优点：长度固定 非连续 支持长链接重复查询
缺点：虽然几率很小但可能碰撞
3、随机数
该方法是从62个字符串中随机取出一个6位短码的组合，然后查询该短码是否已存在。如果已存在，就继续循环该方法重新获取短码，否则就直接返回。
优点：实现简单
缺点：方法生成的随机数属于伪随机数碰撞的可能性也不小 数据量大 可能循环很久、不支持长链接重复查询

我内心是比较倾向于自增id算法的 唯一的链接过来有唯一的短码 不需要考虑碰撞啊 概率啊 但处理混淆时暂未找到令我满意的方案，再加上时间有
限（最近在疯狂996中）。最终选用了摘要算法，进行了简单的碰撞处理、支持长链接重复查询、限制了数量防止内存溢出达到限制直接拒绝不淘汰数据
(个人觉得这不同于缓存，不适合淘汰数据)。

Swagger地址：http://localhost/doc.html

ps: 本人张雄，6年开发管理经验，多年互联网金融经验，先后就职于玖富、爱钱进。