# JMH version: 1.33
# VM version: JDK 11.0.12, Java HotSpot(TM) 64-Bit Server VM, 11.0.12+8-LTS-237
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-11.0.12.jdk/Contents/Home/bin/java
# VM options: -ea -Didea.test.cyclic.buffer.size=4194304 -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=57070:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 3 iterations, 1 min each
# Timeout: 10 min per iteration
# Threads: 12 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.scdt.china.shorturl.benchmark.ShortUrlControllerBenchmark.expand

# Run progress: 0.00% complete, ETA 00:06:20
# Fork: 1 of 1
# Warmup Iteration   1: 2216.163 ±(99.9%) 17.982 ns/op
Iteration   1: 2123.409 ±(99.9%) 5.193 ns/op
Iteration   2: 2127.040 ±(99.9%) 7.785 ns/op
Iteration   3: 2185.461 ±(99.9%) 5.548 ns/op


Result "com.scdt.china.shorturl.benchmark.ShortUrlControllerBenchmark.expand":
  2145.303 ±(99.9%) 635.339 ns/op [Average]
  (min, avg, max) = (2123.409, 2145.303, 2185.461), stdev = 34.825
  CI (99.9%): [1509.964, 2780.643] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 11.0.12, Java HotSpot(TM) 64-Bit Server VM, 11.0.12+8-LTS-237
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-11.0.12.jdk/Contents/Home/bin/java
# VM options: -ea -Didea.test.cyclic.buffer.size=4194304 -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=57070:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 1 iterations, 10 s each
# Measurement: 3 iterations, 1 min each
# Timeout: 10 min per iteration
# Threads: 12 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.scdt.china.shorturl.benchmark.ShortUrlControllerBenchmark.generate

# Run progress: 50.00% complete, ETA 00:03:17
# Fork: 1 of 1
# Warmup Iteration   1: 4938.017 ±(99.9%) 138.254 ns/op
Iteration   1: 4477.948 ±(99.9%) 36.347 ns/op
Iteration   2: 4505.392 ±(99.9%) 29.842 ns/op
Iteration   3: 4578.526 ±(99.9%) 72.331 ns/op


Result "com.scdt.china.shorturl.benchmark.ShortUrlControllerBenchmark.generate":
  4520.622 ±(99.9%) 948.486 ns/op [Average]
  (min, avg, max) = (4477.948, 4520.622, 4578.526), stdev = 51.990
  CI (99.9%): [3572.135, 5469.108] (assumes normal distribution)


# Run complete. Total time: 00:06:32

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             Mode  Cnt     Score     Error  Units
ShortUrlControllerBenchmark.expand    avgt    3  2145.303 ± 635.339  ns/op
ShortUrlControllerBenchmark.generate  avgt    3  4520.622 ± 948.486  ns/op
