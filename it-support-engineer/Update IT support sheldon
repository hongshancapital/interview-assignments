# IT Support Engineer Assignment

### 分析系统日志：interview_data_set.gz

分析系统日志得到关键信息，用 Json 的格式 POST 上传至服务器 ( https://foo.com/bar )，key 的名称在括号里

1. 设备名称: (deviceName)
2. 错误的进程号码: (processId)
3. 进程/服务名称: (processName)
4. 错误的原因（描述）(description)
5. 发生的时间（小时级），例如 0100-0200，0300-0400, (timeWindow)
6. 在小时级别内发生的次数 (numberOfOccurrence)

分别使用

1. Bash 或其他脚本语言，假设在 Mac 环境下，进行操作
2. Powershell，假设在 windows 环境下，进行操作



在Mac环境下，可以使用Bash脚本语言进行操作。代码如下：

#!/bin/bash

log_file="interview_data_set.gz"
server_url="https://foo.com/bar"

# 解压缩系统日志文件
gunzip -c "$log_file" > temp.log

# 解析系统日志，提取关键信息
while IFS= read -r line; do
  deviceName=$(echo "$line" | grep -Po "(?<=设备名称: )[^ ]+")
  processId=$(echo "$line" | grep -Po "(?<=错误的进程号码: )[^ ]+")
  processName=$(echo "$line" | grep -Po "(?<=进程/服务名称: )[^ ]+")
  description=$(echo "$line" | grep -Po "(?<=错误的原因（描述）\().*?(?=\))")
  timeWindow=$(echo "$line" | grep -Po "(?<=发生的时间（小时级），例如 )[0-9]{4}-[0-9]{4}")
  numberOfOccurrence=$(echo "$line" | grep -Po "(?<=在小时级别内发生的次数 )[0-9]+")

  # 构建JSON对象
  json="{\"deviceName\": \"$deviceName\", \"processId\": \"$processId\", \"processName\": \"$processName\", \"description\": \"$description\", \"timeWindow\": \"$timeWindow\", \"numberOfOccurrence\": \"$numberOfOccurrence\"}"

  # 发送POST请求上传数据到服务器
  curl -X POST -H "Content-Type: application/json" -d "$json" "$server_url"

done < "temp.log"

# 删除临时日志文件
rm temp.log




在Windows环境下，可以使用Powershell进行操作。代码如下：

$logFile = "interview_data_set.gz"
$serverUrl = "https://foo.com/bar"

# 解压缩系统日志文件
Expand-Archive -Path $logFile -DestinationPath .\temp

# 解析系统日志，提取关键信息
$logLines = Get-Content .\temp\interview_data_set

foreach ($line in $logLines) {
    $deviceName = [regex]::Match($line, "(?<=设备名称: )[^ ]+").Value
    $processId = [regex]::Match($line, "(?<=错误的进程号码: )[^ ]+").Value
    $processName = [regex]::Match($line, "(?<=进程/服务名称: )[^ ]+").Value
    $description = [regex]::Match($line, "(?<=错误的原因（描述）\().*?(?=\))").Value
    $timeWindow = [regex]::Match($line, "(?<=发生的时间（小时级），例如 )[0-9]{4}-[0-9]{4}").Value
    $numberOfOccurrence = [regex]::Match($line, "(?<=在小时级别内发生的次数 )[0-9]+").Value

    # 构建JSON对象
    $json = @{
        deviceName = $deviceName
        processId = $processId
        processName = $processName
        description = $description
        timeWindow = $timeWindow
        numberOfOccurrence = $numberOfOccurrence
    } | ConvertTo-Json

    # 发送POST请求上传数据到服务器
    Invoke-RestMethod -Uri $serverUrl -Method Post -ContentType "application/json" -Body $json
}

# 删除临时文件夹
Remove-Item -Path .\temp -Force -Recurse
